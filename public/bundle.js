/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!
 * Vue.js v2.5.16
 * (c) 2014-2018 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef(v) {
  return v === undefined || v === null;
}

function isDef(v) {
  return v !== undefined && v !== null;
}

function isTrue(v) {
  return v === true;
}

function isFalse(v) {
  return v === false;
}

/**
 * Check if value is primitive
 */
function isPrimitive(value) {
  return typeof value === 'string' || typeof value === 'number' ||
  // $flow-disable-line
  typeof value === 'symbol' || typeof value === 'boolean';
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject(obj) {
  return obj !== null && typeof obj === 'object';
}

/**
 * Get the raw type string of a value e.g. [object Object]
 */
var _toString = Object.prototype.toString;

function toRawType(value) {
  return _toString.call(value).slice(8, -1);
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function isRegExp(v) {
  return _toString.call(v) === '[object RegExp]';
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex(val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val);
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString(val) {
  return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber(val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n;
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap(str, expectsLowerCase) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase ? function (val) {
    return map[val.toLowerCase()];
  } : function (val) {
    return map[val];
  };
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array
 */
function remove(arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1);
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

/**
 * Create a cached version of a pure function.
 */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase();
});

/**
 * Simple bind polyfill for environments that do not support it... e.g.
 * PhantomJS 1.x. Technically we don't need this anymore since native bind is
 * now more performant in most browsers, but removing it would be breaking for
 * code that was able to run in PhantomJS 1.x, so this must be kept for
 * backwards compatibility.
 */

/* istanbul ignore next */
function polyfillBind(fn, ctx) {
  function boundFn(a) {
    var l = arguments.length;
    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
  }

  boundFn._length = fn.length;
  return boundFn;
}

function nativeBind(fn, ctx) {
  return fn.bind(ctx);
}

var bind = Function.prototype.bind ? nativeBind : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray(list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret;
}

/**
 * Mix properties into target object.
 */
function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
}

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */
function noop(a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) {
  return false;
};

/**
 * Return same value
 */
var identity = function (_) {
  return _;
};

/**
 * Generate a static keys string from compiler modules.
 */
function genStaticKeys(modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || []);
  }, []).join(',');
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual(a, b) {
  if (a === b) {
    return true;
  }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i]);
        });
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key]);
        });
      } else {
        /* istanbul ignore next */
        return false;
      }
    } catch (e) {
      /* istanbul ignore next */
      return false;
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
}

function looseIndexOf(arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) {
      return i;
    }
  }
  return -1;
}

/**
 * Ensure a function is called only once.
 */
function once(fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  };
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = ['component', 'directive', 'filter'];

var LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated', 'errorCaptured'];

/*  */

var config = {
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "production" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "production" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
};

/*  */

/**
 * Check if a string starts with $ or _
 */
function isReserved(str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F;
}

/**
 * Define a property.
 */
function def(obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath(path) {
  if (bailRE.test(path)) {
    return;
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) {
        return;
      }
      obj = obj[segments[i]];
    }
    return obj;
  };
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0 || weexPlatform === 'android';
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === 'ios';
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = {}.watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', {
      get: function get() {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    }); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer;
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative(Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
}

var hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = function () {
    function Set() {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has(key) {
      return this.set[key] === true;
    };
    Set.prototype.add = function add(key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear() {
      this.set = Object.create(null);
    };

    return Set;
  }();
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = noop; // work around flow check
var formatComponentName = noop;

if (false) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) {
    return str.replace(classifyRE, function (c) {
      return c.toUpperCase();
    }).replace(/[-_]/g, '');
  };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && !config.silent) {
      console.error("[Vue warn]: " + msg + trace);
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && !config.silent) {
      console.warn("[Vue tip]: " + msg + (vm ? generateComponentTrace(vm) : ''));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>';
    }
    var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm || {};
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (name ? "<" + classify(name) + ">" : "<Anonymous>") + (file && includeFile !== false ? " at " + file : '');
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) {
        res += str;
      }
      if (n > 1) {
        str += str;
      }
      n >>= 1;
    }
    return res;
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue;
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree.map(function (vm, i) {
        return "" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + "... (" + vm[1] + " recursive calls)" : formatComponentName(vm));
      }).join('\n');
    } else {
      return "\n\n(found in " + formatComponentName(vm) + ")";
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep() {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub(sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub(sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend() {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify() {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget(_target) {
  if (Dep.target) {
    targetStack.push(Dep.target);
  }
  Dep.target = _target;
}

function popTarget() {
  Dep.target = targetStack.pop();
}

/*  */

var VNode = function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance;
};

Object.defineProperties(VNode.prototype, prototypeAccessors);

var createEmptyVNode = function (text) {
  if (text === void 0) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node;
};

function createTextVNode(val) {
  return new VNode(undefined, undefined, undefined, String(val));
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode(vnode) {
  var cloned = new VNode(vnode.tag, vnode.data, vnode.children, vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;
  return cloned;
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator() {
    var args = [],
        len = arguments.length;
    while (len--) args[len] = arguments[len];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break;
      case 'splice':
        inserted = args.slice(2);
        break;
    }
    if (inserted) {
      ob.observeArray(inserted);
    }
    // notify change
    ob.dep.notify();
    return result;
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving(value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer(value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto ? protoAugment : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk(obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray(items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment(target, src, keys) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment(target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe(value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return;
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (shouldObserve && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob;
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive(obj, key, val, customSetter, shallow) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return;
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  if (!getter && arguments.length === 2) {
    val = obj[key];
  }
  var setter = property && property.set;

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter() {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value;
    },
    set: function reactiveSetter(newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || newVal !== newVal && value !== value) {
        return;
      }
      /* eslint-enable no-self-compare */
      if (false) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set(target, key, val) {
  if (false) {
    warn("Cannot set reactive property on undefined, null, or primitive value: " + target);
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val;
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val;
  }
  var ob = target.__ob__;
  if (target._isVue || ob && ob.vmCount) {
    "production" !== 'production' && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');
    return val;
  }
  if (!ob) {
    target[key] = val;
    return val;
  }
  defineReactive(ob.value, key, val);
  ob.dep.notify();
  return val;
}

/**
 * Delete a property and trigger change if necessary.
 */
function del(target, key) {
  if (false) {
    warn("Cannot delete reactive property on undefined, null, or primitive value: " + target);
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return;
  }
  var ob = target.__ob__;
  if (target._isVue || ob && ob.vmCount) {
    "production" !== 'production' && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');
    return;
  }
  if (!hasOwn(target, key)) {
    return;
  }
  delete target[key];
  if (!ob) {
    return;
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray(value) {
  for (var e = void 0, i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (false) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn("option \"" + key + "\" can only be used during instance " + 'creation with the `new` keyword.');
    }
    return defaultStrat(parent, child);
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData(to, from) {
  if (!from) {
    return to;
  }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to;
}

/**
 * Data
 */
function mergeDataOrFn(parentVal, childVal, vm) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal;
    }
    if (!parentVal) {
      return childVal;
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn() {
      return mergeData(typeof childVal === 'function' ? childVal.call(this, this) : childVal, typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal);
    };
  } else {
    return function mergedInstanceDataFn() {
      // instance merge
      var instanceData = typeof childVal === 'function' ? childVal.call(vm, vm) : childVal;
      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm, vm) : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData);
      } else {
        return defaultData;
      }
    };
  }
}

strats.data = function (parentVal, childVal, vm) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "production" !== 'production' && warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);

      return parentVal;
    }
    return mergeDataOrFn(parentVal, childVal);
  }

  return mergeDataOrFn(parentVal, childVal, vm);
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook(parentVal, childVal) {
  return childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets(parentVal, childVal, vm, key) {
  var res = Object.create(parentVal || null);
  if (childVal) {
    "production" !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal);
  } else {
    return res;
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (parentVal, childVal, vm, key) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) {
    parentVal = undefined;
  }
  if (childVal === nativeWatch) {
    childVal = undefined;
  }
  /* istanbul ignore if */
  if (!childVal) {
    return Object.create(parentVal || null);
  }
  if (false) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) {
    return childVal;
  }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];
  }
  return ret;
};

/**
 * Other object hashes.
 */
strats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal, vm, key) {
  if (childVal && "production" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) {
    return childVal;
  }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) {
    extend(ret, childVal);
  }
  return ret;
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined ? parentVal : childVal;
};

/**
 * Validate component names
 */
function checkComponents(options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName(name) {
  if (!/^[a-zA-Z][\w-]*$/.test(name)) {
    warn('Invalid component name: "' + name + '". Component names ' + 'can only contain alphanumeric characters and the hyphen, ' + 'and must start with a letter.');
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + name);
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps(options, vm) {
  var props = options.props;
  if (!props) {
    return;
  }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (false) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val) ? val : { type: val };
    }
  } else if (false) {
    warn("Invalid value for option \"props\": expected an Array or an Object, " + "but got " + toRawType(props) + ".", vm);
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject(options, vm) {
  var inject = options.inject;
  if (!inject) {
    return;
  }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val) ? extend({ from: key }, val) : { from: val };
    }
  } else if (false) {
    warn("Invalid value for option \"inject\": expected an Array or an Object, " + "but got " + toRawType(inject) + ".", vm);
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives(options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

function assertObjectType(name, value, vm) {
  if (!isPlainObject(value)) {
    warn("Invalid value for option \"" + name + "\": expected an Object, " + "but got " + toRawType(value) + ".", vm);
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions(parent, child, vm) {
  if (false) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField(key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options;
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset(options, type, id, warnMissing) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return;
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) {
    return assets[id];
  }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) {
    return assets[camelizedId];
  }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) {
    return assets[PascalCaseId];
  }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (false) {
    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
  }
  return res;
}

/*  */

function validateProp(key, propOptions, propsData, vm) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (false) {
    assertProp(prop, key, value, vm, absent);
  }
  return value;
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue(vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined;
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (false) {
    warn('Invalid default value for prop "' + key + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {
    return vm._props[key];
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;
}

/**
 * Assert whether a prop is valid.
 */
function assertProp(prop, name, value, vm, absent) {
  if (prop.required && absent) {
    warn('Missing required prop: "' + name + '"', vm);
    return;
  }
  if (value == null && !prop.required) {
    return;
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn("Invalid prop: type check failed for prop \"" + name + "\"." + " Expected " + expectedTypes.map(capitalize).join(', ') + ", got " + toRawType(value) + ".", vm);
    return;
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType(value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  };
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType(fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : '';
}

function isSameType(a, b) {
  return getType(a) === getType(b);
}

function getTypeIndex(type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1;
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i;
    }
  }
  return -1;
}

/*  */

function handleError(err, vm, info) {
  if (vm) {
    var cur = vm;
    while (cur = cur.$parent) {
      var hooks = cur.$options.errorCaptured;
      if (hooks) {
        for (var i = 0; i < hooks.length; i++) {
          try {
            var capture = hooks[i].call(cur, err, vm, info) === false;
            if (capture) {
              return;
            }
          } catch (e) {
            globalHandleError(e, cur, 'errorCaptured hook');
          }
        }
      }
    }
  }
  globalHandleError(err, vm, info);
}

function globalHandleError(err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info);
    } catch (e) {
      logError(e, null, 'config.errorHandler');
    }
  }
  logError(err, vm, info);
}

function logError(err, vm, info) {
  if (false) {
    warn("Error in " + info + ": \"" + err.toString() + "\"", vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err;
  }
}

/*  */
/* globals MessageChannel */

var callbacks = [];
var pending = false;

function flushCallbacks() {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using both microtasks and (macro) tasks.
// In < 2.4 we used microtasks everywhere, but there are some scenarios where
// microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690) or even between bubbling of the same
// event (#6566). However, using (macro) tasks everywhere also has subtle problems
// when state is changed right before repaint (e.g. #6813, out-in transitions).
// Here we use microtask by default, but expose a way to force (macro) task when
// needed (e.g. in event handlers attached by v-on).
var microTimerFunc;
var macroTimerFunc;
var useMacroTask = false;

// Determine (macro) task defer implementation.
// Technically setImmediate should be the ideal choice, but it's only available
// in IE. The only polyfill that consistently queues the callback after all DOM
// events triggered in the same loop is by using MessageChannel.
/* istanbul ignore if */
if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  macroTimerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else if (typeof MessageChannel !== 'undefined' && (isNative(MessageChannel) ||
// PhantomJS
MessageChannel.toString() === '[object MessageChannelConstructor]')) {
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = flushCallbacks;
  macroTimerFunc = function () {
    port.postMessage(1);
  };
} else {
  /* istanbul ignore next */
  macroTimerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

// Determine microtask defer implementation.
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  microTimerFunc = function () {
    p.then(flushCallbacks);
    // in problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) {
      setTimeout(noop);
    }
  };
} else {
  // fallback to macro
  microTimerFunc = macroTimerFunc;
}

/**
 * Wrap a function so that if any code inside triggers state change,
 * the changes are queued using a (macro) task instead of a microtask.
 */
function withMacroTask(fn) {
  return fn._withTask || (fn._withTask = function () {
    useMacroTask = true;
    var res = fn.apply(null, arguments);
    useMacroTask = false;
    return res;
  });
}

function nextTick(cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    if (useMacroTask) {
      macroTimerFunc();
    } else {
      microTimerFunc();
    }
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    });
  }
}

/*  */

var mark;
var measure;

if (false) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {
    mark = function (tag) {
      return perf.mark(tag);
    };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (false) {
  var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn("Property or method \"" + key + "\" is not defined on the instance but " + 'referenced during render. Make sure that this property is reactive, ' + 'either in the data option, or for class-based components, by ' + 'initializing the property. ' + 'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.', target);
  };

  var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set(target, key, value) {
        if (isBuiltInModifier(key)) {
          warn("Avoid overwriting built-in modifier in config.keyCodes: ." + key);
          return false;
        } else {
          target[key] = value;
          return true;
        }
      }
    });
  }

  var hasHandler = {
    has: function has(target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed;
    }
  };

  var getHandler = {
    get: function get(target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key];
    }
  };

  initProxy = function initProxy(vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse(val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse(val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if (!isA && !isObject(val) || Object.isFrozen(val) || val instanceof VNode) {
    return;
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return;
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) {
      _traverse(val[i], seen);
    }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) {
      _traverse(val[keys[i]], seen);
    }
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  };
});

function createFnInvoker(fns) {
  function invoker() {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        cloned[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments);
    }
  }
  invoker.fns = fns;
  return invoker;
}

function updateListeners(on, oldOn, add, remove$$1, vm) {
  var name, def, cur, old, event;
  for (name in on) {
    def = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    /* istanbul ignore if */
    if (isUndef(cur)) {
      "production" !== 'production' && warn("Invalid handler for event \"" + event.name + "\": got " + String(cur), vm);
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook(def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook() {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData(data, Ctor, tag) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return;
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (false) {
        var keyInLowerCase = key.toLowerCase();
        if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {
          tip("Prop \"" + keyInLowerCase + "\" is passed to component " + formatComponentName(tag || Ctor) + ", but the declared prop name is" + " \"" + key + "\". " + "Note that HTML attributes are case-insensitive and camelCased " + "props need to use their kebab-case equivalents when using in-DOM " + "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\".");
        }
      }
      checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);
    }
  }
  return res;
}

function checkProp(res, hash, key, altKey, preserve) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true;
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true;
    }
  }
  return false;
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren(children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children);
    }
  }
  return children;
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren(children) {
  return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;
}

function isTextNode(node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment);
}

function normalizeArrayChildren(children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') {
      continue;
    }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, (nestedIndex || '') + "_" + i);
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + c[0].text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res;
}

/*  */

function ensureCtor(comp, base) {
  if (comp.__esModule || hasSymbol && comp[Symbol.toStringTag] === 'Module') {
    comp = comp.default;
  }
  return isObject(comp) ? base.extend(comp) : comp;
}

function createAsyncPlaceholder(factory, data, context, children, tag) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node;
}

function resolveAsyncComponent(factory, baseCtor, context) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp;
  }

  if (isDef(factory.resolved)) {
    return factory.resolved;
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp;
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      "production" !== 'production' && warn("Failed to resolve async component: " + String(factory) + (reason ? "\nReason: " + reason : ''));
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject( false ? "timeout (" + res.timeout + "ms)" : null);
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading ? factory.loadingComp : factory.resolved;
  }
}

/*  */

function isAsyncPlaceholder(node) {
  return node.isComment && node.asyncFactory;
}

/*  */

function getFirstComponentChild(children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c;
      }
    }
  }
}

/*  */

/*  */

function initEvents(vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add(event, fn, once) {
  if (once) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1(event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners(vm, listeners, oldListeners) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
  target = undefined;
}

function eventsMixin(Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm;
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on() {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm;
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm;
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$off(event[i], fn);
      }
      return vm;
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm;
    }
    if (!fn) {
      vm._events[event] = null;
      return vm;
    }
    if (fn) {
      // specific handler
      var cb;
      var i$1 = cbs.length;
      while (i$1--) {
        cb = cbs[i$1];
        if (cb === fn || cb.fn === fn) {
          cbs.splice(i$1, 1);
          break;
        }
      }
    }
    return vm;
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (false) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip("Event \"" + lowerCaseEvent + "\" is emitted in component " + formatComponentName(vm) + " but the handler is registered for \"" + event + "\". " + "Note that HTML attributes are case-insensitive and you cannot use " + "v-on to listen to camelCase events when using in-DOM templates. " + "You should probably use \"" + hyphenate(event) + "\" instead of \"" + event + "\".");
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        try {
          cbs[i].apply(vm, args);
        } catch (e) {
          handleError(e, vm, "event handler for \"" + event + "\"");
        }
      }
    }
    return vm;
  };
}

/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots(children, context) {
  var slots = {};
  if (!children) {
    return slots;
  }
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) && data && data.slot != null) {
      var name = data.slot;
      var slot = slots[name] || (slots[name] = []);
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots;
}

function isWhitespace(node) {
  return node.isComment && !node.asyncFactory || node.text === ' ';
}

function resolveScopedSlots(fns, // see flow/vnode
res) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res;
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function initLifecycle(vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin(Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */
      , vm.$options._parentElm, vm.$options._refElm);
      // no need for the ref nodes after initial patch
      // this prevents keeping a detached DOM tree in memory (#5851)
      vm.$options._parentElm = vm.$options._refElm = null;
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return;
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent(vm, el, hydrating) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (false) {
      /* istanbul ignore if */
      if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {
        warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);
      } else {
        warn('Failed to mount component: template or render function not defined.', vm);
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (false) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure("vue " + name + " render", startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure("vue " + name + " patch", startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm;
}

function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
  if (false) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(renderChildren || // has new static slots
  vm.$options._renderChildren || // has old static slots
  parentVnode.data.scopedSlots || // has new scoped slots
  vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) {
    // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (false) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree(vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) {
      return true;
    }
  }
  return false;
}

function activateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return;
    }
  } else if (vm._directInactive) {
    return;
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return;
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook(vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, hook + " hook");
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState() {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (false) {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue() {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) {
    return a.id - b.id;
  });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (false) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn('You may have an infinite update loop ' + (watcher.user ? "in watcher with expression \"" + watcher.expression + "\"" : "in a component render function."), watcher.vm);
        break;
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks(queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent(vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks(queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher(watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$1 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher(vm, expOrFn, cb, options, isRenderWatcher) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$1; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  false ? expOrFn.toString() : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      "production" !== 'production' && warn("Failed watching path: \"" + expOrFn + "\" " + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);
    }
  }
  this.value = this.lazy ? undefined : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get() {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, "getter for watcher \"" + this.expression + "\"");
    } else {
      throw e;
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value;
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep(dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps() {
  var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update() {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run() {
  if (this.active) {
    var value = this.get();
    if (value !== this.value ||
    // Deep watchers and watchers on Object/Arrays should fire even
    // when the value is the same, because the value may
    // have mutated.
    isObject(value) || this.deep) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, "callback for watcher \"" + this.expression + "\"");
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate() {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend() {
  var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown() {
  var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy(target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter() {
    return this[sourceKey][key];
  };
  sharedPropertyDefinition.set = function proxySetter(val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState(vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) {
    initProps(vm, opts.props);
  }
  if (opts.methods) {
    initMethods(vm, opts.methods);
  }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) {
    initComputed(vm, opts.computed);
  }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps(vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function (key) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (false) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) || config.isReservedAttr(hyphenatedKey)) {
        warn("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop.", vm);
      }
      defineReactive(props, key, value, function () {
        if (vm.$parent && !isUpdatingChildComponent) {
          warn("Avoid mutating a prop directly since the value will be " + "overwritten whenever the parent component re-renders. " + "Instead, use a data or computed property based on the prop's " + "value. Prop being mutated: \"" + key + "\"", vm);
        }
      });
    } else {
      defineReactive(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop(key);
  toggleObserving(true);
}

function initData(vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "production" !== 'production' && warn('data functions should return an object:\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (false) {
      if (methods && hasOwn(methods, key)) {
        warn("Method \"" + key + "\" has already been defined as a data property.", vm);
      }
    }
    if (props && hasOwn(props, key)) {
      "production" !== 'production' && warn("The data property \"" + key + "\" is already declared as a prop. " + "Use prop default value instead.", vm);
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData(data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm);
  } catch (e) {
    handleError(e, vm, "data()");
    return {};
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed(vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (false) {
      warn("Getter is missing for computed property \"" + key + "\".", vm);
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (false) {
      if (key in vm.$data) {
        warn("The computed property \"" + key + "\" is already defined in data.", vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn("The computed property \"" + key + "\" is already defined as a prop.", vm);
      }
    }
  }
}

function defineComputed(target, key, userDef) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache ? createComputedGetter(key) : userDef;
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get ? shouldCache && userDef.cache !== false ? createComputedGetter(key) : userDef.get : noop;
    sharedPropertyDefinition.set = userDef.set ? userDef.set : noop;
  }
  if (false) {
    sharedPropertyDefinition.set = function () {
      warn("Computed property \"" + key + "\" was assigned to but it has no setter.", this);
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter(key) {
  return function computedGetter() {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value;
    }
  };
}

function initMethods(vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (false) {
      if (methods[key] == null) {
        warn("Method \"" + key + "\" has an undefined value in the component definition. " + "Did you reference the function correctly?", vm);
      }
      if (props && hasOwn(props, key)) {
        warn("Method \"" + key + "\" has already been defined as a prop.", vm);
      }
      if (key in vm && isReserved(key)) {
        warn("Method \"" + key + "\" conflicts with an existing Vue instance method. " + "Avoid defining component methods that start with _ or $.");
      }
    }
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
  }
}

function initWatch(vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher(vm, expOrFn, handler, options) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options);
}

function stateMixin(Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () {
    return this._data;
  };
  var propsDef = {};
  propsDef.get = function () {
    return this._props;
  };
  if (false) {
    dataDef.set = function (newData) {
      warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (expOrFn, cb, options) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options);
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn() {
      watcher.teardown();
    };
  };
}

/*  */

function initProvide(vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;
  }
}

function initInjections(vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (false) {
        defineReactive(vm, key, result[key], function () {
          warn("Avoid mutating an injected value directly since the changes will be " + "overwritten whenever the provided component re-renders. " + "injection being mutated: \"" + key + "\"", vm);
        });
      } else {
        defineReactive(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject(inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol ? Reflect.ownKeys(inject).filter(function (key) {
      /* istanbul ignore next */
      return Object.getOwnPropertyDescriptor(inject, key).enumerable;
    }) : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break;
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function' ? provideDefault.call(vm) : provideDefault;
        } else if (false) {
          warn("Injection \"" + key + "\" not found", vm);
        }
      }
    }
    return result;
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList(val, render) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    ret._isVList = true;
  }
  return ret;
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot(name, fallback, props, bindObject) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) {
    // scoped slot
    props = props || {};
    if (bindObject) {
      if (false) {
        warn('slot v-bind without argument expects an Object', this);
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes) {
      if (false) {
        warn("Duplicate presence of slot \"" + name + "\" found in the same render tree " + "- this will likely cause render errors.", this);
      }
      slotNodes._rendered = true;
    }
    nodes = slotNodes || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes);
  } else {
    return nodes;
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter(id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity;
}

/*  */

function isKeyNotMatch(expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1;
  } else {
    return expect !== actual;
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName);
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode);
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key;
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps(data, tag, value, asProp, isSync) {
  if (value) {
    if (!isObject(value)) {
      "production" !== 'production' && warn('v-bind without argument expects an Object or Array value', this);
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function (key) {
        if (key === 'class' || key === 'style' || isReservedAttribute(key)) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on["update:" + key] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop(key);
    }
  }
  return data;
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic(index, isInFor) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree;
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(this._renderProxy, null, this // for render fns generated for functional component templates
  );
  markStatic(tree, "__static__" + index, false);
  return tree;
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce(tree, index, key) {
  markStatic(tree, "__once__" + index + (key ? "_" + key : ""), true);
  return tree;
}

function markStatic(tree, key, isOnce) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], key + "_" + i, isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode(node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners(data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "production" !== 'production' && warn('v-on without argument expects an Object value', this);
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data;
}

/*  */

function installRenderHelpers(target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
}

/*  */

function FunctionalRenderContext(data, props, children, parent, Ctor) {
  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    return resolveSlots(children, parent);
  };

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = data.scopedSlots || emptyObject;
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode;
    };
  } else {
    this._c = function (a, b, c, d) {
      return createElement(contextVm, a, b, c, d, needNormalization);
    };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent(Ctor, propsData, data, contextVm, children) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) {
      mergeProps(props, data.attrs);
    }
    if (isDef(data.props)) {
      mergeProps(props, data.props);
    }
  }

  var renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options);
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);
    }
    return res;
  }
}

function cloneAndMarkFunctionalResult(vnode, data, contextVm, options) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone;
}

function mergeProps(to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

// Register the component hook to weex native render engine.
// The hook will be triggered by native, not javascript.


// Updates the state of the component to weex native render engine.

/*  */

// https://github.com/Hanks10100/weex-native-directive/tree/master/component

// listening on native callback

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init(vnode, hydrating, parentElm, refElm) {
    if (vnode.componentInstance && !vnode.componentInstance._isDestroyed && vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance, parentElm, refElm);
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch(oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(child, options.propsData, // updated props
    options.listeners, // updated listeners
    vnode, // new parent vnode
    options.children // new children
    );
  },

  insert: function insert(vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy(vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent(Ctor, data, context, children, tag) {
  if (isUndef(Ctor)) {
    return;
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (false) {
      warn("Invalid Component definition: " + String(Ctor), context);
    }
    return;
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(asyncFactory, data, context, children, tag);
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children);
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode("vue-component-" + Ctor.cid + (name ? "-" + name : ''), data, undefined, undefined, undefined, context, { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }, asyncFactory);

  // Weex specific: invoke recycle-list optimized @render function for
  // extracting cell-slot template.
  // https://github.com/Hanks10100/weex-native-directive/tree/master/component
  /* istanbul ignore if */
  return vnode;
}

function createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't
parent, // activeInstance in lifecycle state
parentElm, refElm) {
  var options = {
    _isComponent: true,
    parent: parent,
    _parentVnode: vnode,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options);
}

function installComponentHooks(data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    hooks[key] = componentVNodeHooks[key];
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel(options, data) {
  var prop = options.model && options.model.prop || 'value';
  var event = options.model && options.model.event || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement(context, tag, data, children, normalizationType, alwaysNormalize) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType);
}

function _createElement(context, tag, data, children, normalizationType) {
  if (isDef(data) && isDef(data.__ob__)) {
    "production" !== 'production' && warn("Avoid using observed data object as vnode data: " + JSON.stringify(data) + "\n" + 'Always create fresh vnode data objects in each render!', context);
    return createEmptyVNode();
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode();
  }
  // warn against non-primitive key
  if (false) {
    {
      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) && typeof children[0] === 'function') {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = context.$vnode && context.$vnode.ns || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(tag, data, children, undefined, undefined, context);
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode;
  } else if (isDef(vnode)) {
    if (isDef(ns)) {
      applyNS(vnode, ns);
    }
    if (isDef(data)) {
      registerDeepBindings(data);
    }
    return vnode;
  } else {
    return createEmptyVNode();
  }
}

function applyNS(vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force) && child.tag !== 'svg')) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings(data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender(vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, false);
  };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, true);
  };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (false) {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

function renderMixin(Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this);
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    // reset _rendered flag on slots for duplicate slot check
    if (false) {
      for (var key in vm.$slots) {
        // $flow-disable-line
        vm.$slots[key]._rendered = false;
      }
    }

    if (_parentVnode) {
      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (false) {
        if (vm.$options.renderError) {
          try {
            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
          } catch (e) {
            handleError(e, vm, "renderError");
            vnode = vm._vnode;
          }
        } else {
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (false) {
        warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode;
  };
}

/*  */

var uid$3 = 0;

function initMixin(Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (false) {
      startTag = "vue-perf-start:" + vm._uid;
      endTag = "vue-perf-end:" + vm._uid;
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
    }
    /* istanbul ignore else */
    if (false) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (false) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure("vue " + vm._name + " init", startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent(vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions(Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options;
}

function resolveModifiedOptions(Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) {
        modified = {};
      }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified;
}

function dedupe(latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res;
  } else {
    return latest;
  }
}

function Vue(options) {
  if (false) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse(Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = this._installedPlugins || (this._installedPlugins = []);
    if (installedPlugins.indexOf(plugin) > -1) {
      return this;
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this;
  };
}

/*  */

function initMixin$1(Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this;
  };
}

/*  */

function initExtend(Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId];
    }

    var name = extendOptions.name || Super.options.name;
    if (false) {
      validateComponentName(name);
    }

    var Sub = function VueComponent(options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(Super.options, extendOptions);
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub;
  };
}

function initProps$1(Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1(Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters(Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (id, definition) {
      if (!definition) {
        return this.options[type + 's'][id];
      } else {
        /* istanbul ignore if */
        if (false) {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition;
      }
    };
  });
}

/*  */

function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}

function matches(pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1;
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1;
  } else if (isRegExp(pattern)) {
    return pattern.test(name);
  }
  /* istanbul ignore next */
  return false;
}

function pruneCache(keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry(cache, key, keys, current) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created() {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed() {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache, key, this$1.keys);
    }
  },

  mounted: function mounted() {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) {
        return matches(val, name);
      });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) {
        return !matches(val, name);
      });
    });
  },

  render: function render() {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
      // not included
      include && (!name || !matches(include, name)) ||
      // excluded
      exclude && name && matches(exclude, name)) {
        return vnode;
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
      // same constructor may get registered as different local components
      // so cid alone is not enough (#3269)
      ? componentOptions.Ctor.cid + (componentOptions.tag ? "::" + componentOptions.tag : '') : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || slot && slot[0];
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive

  /*  */

};function initGlobalAPI(Vue) {
  // config
  var configDef = {};
  configDef.get = function () {
    return config;
  };
  if (false) {
    configDef.set = function () {
      warn('Do not replace the Vue.config object, set individual fields instead.');
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get() {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext;
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.5.16';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : '';
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false;
};

/*  */

function genClassForVnode(vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class);
}

function mergeClassData(child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class) ? [child.class, parent.class] : parent.class
  };
}

function renderClass(staticClass, dynamicClass) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass));
  }
  /* istanbul ignore next */
  return '';
}

function concat(a, b) {
  return a ? b ? a + ' ' + b : a : b || '';
}

function stringifyClass(value) {
  if (Array.isArray(value)) {
    return stringifyArray(value);
  }
  if (isObject(value)) {
    return stringifyObject(value);
  }
  if (typeof value === 'string') {
    return value;
  }
  /* istanbul ignore next */
  return '';
}

function stringifyArray(value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) {
        res += ' ';
      }
      res += stringified;
    }
  }
  return res;
}

function stringifyObject(value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) {
        res += ' ';
      }
      res += key;
    }
  }
  return res;
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot');

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);

var isPreTag = function (tag) {
  return tag === 'pre';
};

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag);
};

function getTagNamespace(tag) {
  if (isSVG(tag)) {
    return 'svg';
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math';
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement(tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true;
  }
  if (isReservedTag(tag)) {
    return false;
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag];
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
  } else {
    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query(el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "production" !== 'production' && warn('Cannot find element: ' + el);
      return document.createElement('div');
    }
    return selected;
  } else {
    return el;
  }
}

/*  */

function createElement$1(tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm;
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm;
}

function createElementNS(namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName);
}

function createTextNode(text) {
  return document.createTextNode(text);
}

function createComment(text) {
  return document.createComment(text);
}

function insertBefore(parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild(node, child) {
  node.removeChild(child);
}

function appendChild(node, child) {
  node.appendChild(child);
}

function parentNode(node) {
  return node.parentNode;
}

function nextSibling(node) {
  return node.nextSibling;
}

function tagName(node) {
  return node.tagName;
}

function setTextContent(node, text) {
  node.textContent = text;
}

function setStyleScope(node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps = Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create(_, vnode) {
    registerRef(vnode);
  },
  update: function update(oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy(vnode) {
    registerRef(vnode, true);
  }
};

function registerRef(vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) {
    return;
  }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode(a, b) {
  return a.key === b.key && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && a.asyncFactory === b.asyncFactory && isUndef(b.asyncFactory.error));
}

function sameInputType(a, b) {
  if (a.tag !== 'input') {
    return true;
  }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB);
}

function createKeyToOldIdx(children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) {
      map[key] = i;
    }
  }
  return map;
}

function createPatchFunction(backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt(elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
  }

  function createRmCb(childElm, listeners) {
    function remove() {
      if (--remove.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove.listeners = listeners;
    return remove;
  }

  function removeNode(el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1(vnode, inVPre) {
    return !inVPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.some(function (ignore) {
      return isRegExp(ignore) ? ignore.test(vnode.tag) : ignore === vnode.tag;
    })) && config.isUnknownElement(vnode.tag);
  }

  var creatingElmInVPre = 0;

  function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested, ownerArray, index) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return;
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (false) {
        if (data && data.pre) {
          creatingElmInVPre++;
        }
        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.', vnode.context);
        }
      }

      vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (false) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true;
      }
    }
  }

  function initComponent(vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break;
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert(parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (ref$$1.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren(vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (false) {
        checkDuplicateKeys(children);
      }
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable(vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag);
  }

  function invokeCreateHooks(vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) {
        i.create(emptyNode, vnode);
      }
      if (isDef(i.insert)) {
        insertedVnodeQueue.push(vnode);
      }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope(vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) && i !== vnode.context && i !== vnode.fnContext && isDef(i = i.$options._scopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook(vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) {
        i(vnode);
      }
      for (i = 0; i < cbs.destroy.length; ++i) {
        cbs.destroy[i](vnode);
      }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else {
          // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook(vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (false) {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) {
        // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) {
        // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) {
          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
        }
        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) {
          // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys(children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn("Duplicate keys detected: '" + key + "'. This may cause an update error.", vnode.context);
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld(node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) {
        return i;
      }
    }
  }

  function patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return;
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return;
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
      vnode.componentInstance = oldVnode.componentInstance;
      return;
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) {
        cbs.update[i](oldVnode, vnode);
      }
      if (isDef(i = data.hook) && isDef(i = i.update)) {
        i(oldVnode, vnode);
      }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) {
          updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
        }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) {
          nodeOps.setTextContent(elm, '');
        }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) {
        i(oldVnode, vnode);
      }
    }
  }

  function invokeInsertHook(vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || data && data.pre;
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true;
    }
    // assert node match
    if (false) {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false;
      }
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) {
        i(vnode, true /* hydrating */);
      }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true;
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if (false) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }
              return false;
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break;
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if (false) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false;
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break;
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true;
  }

  function assertNodeMatch(node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || !isUnknownElement$$1(vnode, inVPre) && vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3);
    }
  }

  return function patch(oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) {
        invokeDestroyHook(oldVnode);
      }
      return;
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode;
            } else if (false) {
              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);

        // create new node
        createElm(vnode, insertedVnodeQueue,
        // extremely rare edge case: do not insert if old element is in a
        // leaving transition. Only happens when combining transition +
        // keep-alive + HOCs. (#4590)
        oldElm._leaveCb ? null : parentElm$1, nodeOps.nextSibling(oldElm));

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm;
  };
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives(vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives(oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update(oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1(dirs, vm) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res;
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res;
}

function getRawDirName(dir) {
  return dir.rawName || dir.name + "." + Object.keys(dir.modifiers || {}).join('.');
}

function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, "directive " + dir.name + " " + hook + " hook");
    }
  }
}

var baseModules = [ref, directives];

/*  */

function updateAttrs(oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return;
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return;
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr(el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr(el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (isIE && !isIE9 && el.tagName === 'TEXTAREA' && key === 'placeholder' && !el.__ieph) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs

  /*  */

};function updateClass(oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {
    return;
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass

  /*  */

};var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters(exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) {
        inSingle = false;
      }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) {
        inDouble = false;
      }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) {
        inTemplateString = false;
      }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) {
        inRegex = false;
      }
    } else if (c === 0x7C && // pipe
    exp.charCodeAt(i + 1) !== 0x7C && exp.charCodeAt(i - 1) !== 0x7C && !curly && !square && !paren) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22:
          inDouble = true;break; // "
        case 0x27:
          inSingle = true;break; // '
        case 0x60:
          inTemplateString = true;break; // `
        case 0x28:
          paren++;break; // (
        case 0x29:
          paren--;break; // )
        case 0x5B:
          square++;break; // [
        case 0x5D:
          square--;break; // ]
        case 0x7B:
          curly++;break; // {
        case 0x7D:
          curly--;break; // }
      }
      if (c === 0x2f) {
        // /
        var j = i - 1;
        var p = void 0;
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') {
            break;
          }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter() {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression;
}

function wrapFilter(exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return "_f(\"" + filter + "\")(" + exp + ")";
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return "_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args);
  }
}

/*  */

function baseWarn(msg) {
  console.error("[Vue compiler]: " + msg);
}

function pluckModuleFunction(modules, key) {
  return modules ? modules.map(function (m) {
    return m[key];
  }).filter(function (_) {
    return _;
  }) : [];
}

function addProp(el, name, value) {
  (el.props || (el.props = [])).push({ name: name, value: value });
  el.plain = false;
}

function addAttr(el, name, value) {
  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
  el.plain = false;
}

// add a raw attr (use this in preTransforms)
function addRawAttr(el, name, value) {
  el.attrsMap[name] = value;
  el.attrsList.push({ name: name, value: value });
}

function addDirective(el, name, rawName, value, arg, modifiers) {
  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
  el.plain = false;
}

function addHandler(el, name, value, modifiers, important, warn) {
  modifiers = modifiers || emptyObject;
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (false) {
    warn('passive and prevent can\'t be used together. ' + 'Passive handler can\'t prevent default event.');
  }

  // check capture modifier
  if (modifiers.capture) {
    delete modifiers.capture;
    name = '!' + name; // mark the event as captured
  }
  if (modifiers.once) {
    delete modifiers.once;
    name = '~' + name; // mark the event as once
  }
  /* istanbul ignore if */
  if (modifiers.passive) {
    delete modifiers.passive;
    name = '&' + name; // mark the event as passive
  }

  // normalize click.right and click.middle since they don't actually fire
  // this is technically browser-specific, but at least for now browsers are
  // the only target envs that have right/middle clicks.
  if (name === 'click') {
    if (modifiers.right) {
      name = 'contextmenu';
      delete modifiers.right;
    } else if (modifiers.middle) {
      name = 'mouseup';
    }
  }

  var events;
  if (modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }

  var newHandler = {
    value: value.trim()
  };
  if (modifiers !== emptyObject) {
    newHandler.modifiers = modifiers;
  }

  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }

  el.plain = false;
}

function getBindingAttr(el, name, getStatic) {
  var dynamicValue = getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue);
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue);
    }
  }
}

// note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.
function getAndRemoveAttr(el, name, removeFromMap) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break;
      }
    }
  }
  if (removeFromMap) {
    delete el.attrsMap[name];
  }
  return val;
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel(el, value, modifiers) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression = "(typeof " + baseValueExpression + " === 'string'" + "? " + baseValueExpression + ".trim()" + ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: "(" + value + ")",
    expression: "\"" + value + "\"",
    callback: "function (" + baseValueExpression + ") {" + assignment + "}"
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode(value, assignment) {
  var res = parseModel(value);
  if (res.key === null) {
    return value + "=" + assignment;
  } else {
    return "$set(" + res.exp + ", " + res.key + ", " + assignment + ")";
  }
}

/**
 * Parse a v-model expression into a base path and a final key segment.
 * Handles both dot-path and possible square brackets.
 *
 * Possible cases:
 *
 * - test
 * - test[key]
 * - test[test1[key]]
 * - test["a"][key]
 * - xxx.test[a[a].test1[key]]
 * - test.xxx.a["asa"][test1[key]]
 *
 */

var len;
var str;
var chr;
var index$1;
var expressionPos;
var expressionEndPos;

function parseModel(val) {
  // Fix https://github.com/vuejs/vue/pull/7730
  // allow v-model="obj.val " (trailing whitespace)
  val = val.trim();
  len = val.length;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    index$1 = val.lastIndexOf('.');
    if (index$1 > -1) {
      return {
        exp: val.slice(0, index$1),
        key: '"' + val.slice(index$1 + 1) + '"'
      };
    } else {
      return {
        exp: val,
        key: null
      };
    }
  }

  str = val;
  index$1 = expressionPos = expressionEndPos = 0;

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.slice(0, expressionPos),
    key: val.slice(expressionPos + 1, expressionEndPos)
  };
}

function next() {
  return str.charCodeAt(++index$1);
}

function eof() {
  return index$1 >= len;
}

function isStringStart(chr) {
  return chr === 0x22 || chr === 0x27;
}

function parseBracket(chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue;
    }
    if (chr === 0x5B) {
      inBracket++;
    }
    if (chr === 0x5D) {
      inBracket--;
    }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break;
    }
  }
}

function parseString(chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break;
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model(el, dir, _warn) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (false) {
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1("<" + el.tag + " v-model=\"" + value + "\" type=\"file\">:\n" + "File inputs are read only. Use a v-on:change listener instead.");
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false;
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false;
  } else if (false) {
    warn$1("<" + el.tag + " v-model=\"" + value + "\">: " + "v-model is not supported on this element type. " + 'If you are working with contenteditable, it\'s recommended to ' + 'wrap a library dedicated for that purpose inside a custom component.');
  }

  // ensure runtime directive metadata
  return true;
}

function genCheckboxModel(el, value, modifiers) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked', "Array.isArray(" + value + ")" + "?_i(" + value + "," + valueBinding + ")>-1" + (trueValueBinding === 'true' ? ":(" + value + ")" : ":_q(" + value + "," + trueValueBinding + ")"));
  addHandler(el, 'change', "var $$a=" + value + "," + '$$el=$event.target,' + "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" + 'if(Array.isArray($$a)){' + "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," + '$$i=_i($$a,$$v);' + "if($$el.checked){$$i<0&&(" + genAssignmentCode(value, '$$a.concat([$$v])') + ")}" + "else{$$i>-1&&(" + genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))') + ")}" + "}else{" + genAssignmentCode(value, '$$c') + "}", null, true);
}

function genRadioModel(el, value, modifiers) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? "_n(" + valueBinding + ")" : valueBinding;
  addProp(el, 'checked', "_q(" + value + "," + valueBinding + ")");
  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
}

function genSelect(el, value, modifiers) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" + ".call($event.target.options,function(o){return o.selected})" + ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" + "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + genAssignmentCode(value, assignment);
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel(el, value, modifiers) {
  var type = el.attrsMap.type;

  // warn if v-bind:value conflicts with v-model
  // except for inputs with v-bind:type
  if (false) {
    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (value$1 && !typeBinding) {
      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
      warn$1(binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " + 'because the latter already expands to a value binding internally');
    }
  }

  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy ? 'change' : type === 'range' ? RANGE_TOKEN : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', "(" + value + ")");
  addHandler(el, event, code, null, true);
  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents(on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler(handler, event, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler() {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  };
}

function add$1(event, handler, once$$1, capture, passive) {
  handler = withMacroTask(handler);
  if (once$$1) {
    handler = createOnceHandler(handler, event, capture);
  }
  target$1.addEventListener(event, handler, supportsPassive ? { capture: capture, passive: passive } : capture);
}

function remove$2(event, handler, capture, _target) {
  (_target || target$1).removeEventListener(event, handler._withTask || handler, capture);
}

function updateDOMListeners(oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return;
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners

  /*  */

};function updateDOMProps(oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return;
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) {
        vnode.children.length = 0;
      }
      if (cur === oldProps[key]) {
        continue;
      }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue(elm, checkVal) {
  return !elm.composing && (elm.tagName === 'OPTION' || isNotInFocusAndDirty(elm, checkVal) || isDirtyWithModifiers(elm, checkVal));
}

function isNotInFocusAndDirty(elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try {
    notInFocus = document.activeElement !== elm;
  } catch (e) {}
  return notInFocus && elm.value !== checkVal;
}

function isDirtyWithModifiers(elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.lazy) {
      // inputs with lazy should only be updated when not in focus
      return false;
    }
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal);
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim();
    }
  }
  return value !== newVal;
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps

  /*  */

};var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res;
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData(data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle ? extend(data.staticStyle, style) : style;
}

// normalize possible array / string values into Object
function normalizeStyleBinding(bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle);
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle);
  }
  return bindingStyle;
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle(vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (childNode && childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if (styleData = normalizeStyleData(vnode.data)) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while (parentNode = parentNode.parent) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res;
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && prop in emptyStyle) {
    return prop;
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name;
    }
  }
});

function updateStyle(oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
    return;
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle

  /*  */

  /**
   * Add class with compatibility for SVG since classList is not supported on
   * SVG elements in IE
   */
};function addClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) {
        return el.classList.add(c);
      });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) {
        return el.classList.remove(c);
      });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition(def) {
  if (!def) {
    return;
  }
  /* istanbul ignore else */
  if (typeof def === 'object') {
    var res = {};
    if (def.css !== false) {
      extend(res, autoCssTransition(def.name || 'v'));
    }
    extend(res, def);
    return res;
  } else if (typeof def === 'string') {
    return autoCssTransition(def);
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: name + "-enter",
    enterToClass: name + "-enter-to",
    enterActiveClass: name + "-enter-active",
    leaveClass: name + "-leave",
    leaveToClass: name + "-leave-to",
    leaveActiveClass: name + "-leave-active"
  };
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout : /* istanbul ignore next */function (fn) {
  return fn();
};

function nextFrame(fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass(el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass(el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds(el, expectedType, cb) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) {
    return cb();
  }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo(el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
  }
  var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  };
}

function getTimeout(delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i]);
  }));
}

function toMs(s) {
  return Number(s.slice(0, -1)) * 1000;
}

/*  */

function enter(vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return;
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return;
  }

  var startClass = isAppear && appearClass ? appearClass : enterClass;
  var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
  var toClass = isAppear && appearToClass ? appearToClass : enterToClass;

  var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
  var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;
  var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
  var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;

  var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);

  if (false) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave(vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm();
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);

  if (false) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave() {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return;
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration(val, name, vnode) {
  if (typeof val !== 'number') {
    warn("<transition> explicit " + name + " duration is not a valid number - " + "got " + JSON.stringify(val) + ".", vnode.context);
  } else if (isNaN(val)) {
    warn("<transition> explicit " + name + " duration is NaN - " + 'the duration expression might be incorrect.', vnode.context);
  }
}

function isValidDuration(val) {
  return typeof val === 'number' && !isNaN(val);
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength(fn) {
  if (isUndef(fn)) {
    return false;
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
  } else {
    return (fn._length || fn.length) > 1;
  }
}

function _enter(_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1(vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [attrs, klass, events, domProps, style, transition];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted(el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated(el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) {
        return !looseEqual(o, prevOptions[i]);
      })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple ? binding.value.some(function (v) {
          return hasNoMatchingOption(v, curOptions);
        }) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected(el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected(el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "production" !== 'production' && warn("<select multiple v-model=\"" + binding.expression + "\"> " + "expects an Array value for its binding, but got " + Object.prototype.toString.call(value).slice(8, -1), vm);
    return;
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return;
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption(value, options) {
  return options.every(function (o) {
    return !looseEqual(o, value);
  });
}

function getValue(option) {
  return '_value' in option ? option._value : option.value;
}

function onCompositionStart(e) {
  e.target.composing = true;
}

function onCompositionEnd(e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) {
    return;
  }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger(el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode(vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;
}

var show = {
  bind: function bind(el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update(el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) {
      return;
    }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: directive,
  show: show

  /*  */

  // Provides transition support for a single element/component.
  // supports transition mode (out-in / in-out)

};var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild(vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children));
  } else {
    return vnode;
  }
}

function extractTransitionData(comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data;
}

function placeholder(h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    });
  }
}

function hasParentTransition(vnode) {
  while (vnode = vnode.parent) {
    if (vnode.data.transition) {
      return true;
    }
  }
}

function isSameChild(child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag;
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render(h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return;
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) {
      return c.tag || isAsyncPlaceholder(c);
    });
    /* istanbul ignore if */
    if (!children.length) {
      return;
    }

    // warn multiple elements
    if (false) {
      warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);
    }

    var mode = this.mode;

    // warn invalid mode
    if (false) {
      warn('invalid <transition> mode: ' + mode, this.$parent);
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild;
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild;
    }

    if (this._leaving) {
      return placeholder(h, rawChild);
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + this._uid + "-";
    child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) {
      return d.name === 'show';
    })) {
      child.data.show = true;
    }

    if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild) &&
    // #6687 component root is a comment node
    !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild);
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild;
        }
        var delayedLeave;
        var performLeave = function () {
          delayedLeave();
        };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) {
          delayedLeave = leave;
        });
      }
    }

    return rawChild;
  }

  /*  */

  // Provides transition support for list items.
  // supports move transitions using the FLIP technique.

  // Because the vdom's children update algorithm is "unstable" - i.e.
  // it doesn't guarantee the relative positioning of removed elements,
  // we force transition-group to update its children into two passes:
  // in the first pass, we remove all nodes that need to be removed,
  // triggering their leaving transition; in the second pass, we insert/move
  // into the final desired state. This way in the second pass removed
  // nodes will remain where they should be.

};var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render(h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c;(c.data || (c.data = {})).transition = transitionData;
        } else if (false) {
          var opts = c.componentOptions;
          var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;
          warn("<transition-group> children must be keyed: <" + name + ">");
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children);
  },

  beforeUpdate: function beforeUpdate() {
    // force removing pass
    this.__patch__(this._vnode, this.kept, false, // hydrating
    true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated() {
    var children = this.prevChildren;
    var moveClass = this.moveClass || (this.name || 'v') + '-move';
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return;
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove(el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false;
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove;
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) {
          removeClass(clone, cls);
        });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return this._hasMove = info.hasTransform;
    }
  }
};

function callPendingCbs(c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition(c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation(c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup

  /*  */

  // install platform specific utils
};Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (el, hydrating) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating);
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (false) {
        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
      }
    }
    if (false) {
      console[console.info ? 'info' : 'log']("You are running Vue in development mode.\n" + "Make sure to turn on production mode when deploying for production.\n" + "See more tips at https://vuejs.org/guide/deployment.html");
    }
  }, 0);
}

/*  */

var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g');
});

function parseText(text, delimiters) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return;
  }
  var tokens = [];
  var rawTokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index, tokenValue;
  while (match = tagRE.exec(text)) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      rawTokens.push(tokenValue = text.slice(lastIndex, index));
      tokens.push(JSON.stringify(tokenValue));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push("_s(" + exp + ")");
    rawTokens.push({ '@binding': exp });
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    rawTokens.push(tokenValue = text.slice(lastIndex));
    tokens.push(JSON.stringify(tokenValue));
  }
  return {
    expression: tokens.join('+'),
    tokens: rawTokens
  };
}

/*  */

function transformNode(el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if (false) {
    var res = parseText(staticClass, options.delimiters);
    if (res) {
      warn("class=\"" + staticClass + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div class="{{ val }}">, use <div :class="val">.');
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData(el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + el.staticClass + ",";
  }
  if (el.classBinding) {
    data += "class:" + el.classBinding + ",";
  }
  return data;
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData

  /*  */

};function transformNode$1(el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (false) {
      var res = parseText(staticStyle, options.delimiters);
      if (res) {
        warn("style=\"" + staticStyle + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div style="{{ val }}">, use <div :style="val">.');
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1(el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + el.staticStyle + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + el.styleBinding + "),";
  }
  return data;
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1

  /*  */

};var decoder;

var he = {
  decode: function decode(html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent;
  }

  /*  */

};var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr');

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source');

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track');

/**
 * Not type-checking this file because it's mostly vendor code.
 */

/*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname = '[a-zA-Z_][\\w\\-\\.]*';
var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
var startTagOpen = new RegExp("^<" + qnameCapture);
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp("^<\\/" + qnameCapture + "[^>]*>");
var doctype = /^<!DOCTYPE [^>]+>/i;
// #7298: escape - to avoid being pased as HTML comment when inlined in page
var comment = /^<!\--/;
var conditionalComment = /^<!\[/;

var IS_REGEX_CAPTURING_BROKEN = false;
'x'.replace(/x(.)?/g, function (m, g) {
  IS_REGEX_CAPTURING_BROKEN = g === '';
});

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n',
  '&#9;': '\t'
};
var encodedAttr = /&(?:lt|gt|quot|amp);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;

// #5992
var isIgnoreNewlineTag = makeMap('pre,textarea', true);
var shouldIgnoreFirstNewline = function (tag, html) {
  return tag && isIgnoreNewlineTag(tag) && html[0] === '\n';
};

function decodeAttr(value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) {
    return decodingMap[match];
  });
}

function parseHTML(html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd));
            }
            advance(commentEnd + 3);
            continue;
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue;
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue;
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue;
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          if (shouldIgnoreFirstNewline(lastTag, html)) {
            advance(1);
          }
          continue;
        }
      }

      var text = void 0,
          rest = void 0,
          next = void 0;
      if (textEnd >= 0) {
        rest = html.slice(textEnd);
        while (!endTag.test(rest) && !startTagOpen.test(rest) && !comment.test(rest) && !conditionalComment.test(rest)) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);
          if (next < 0) {
            break;
          }
          textEnd += next;
          rest = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
        advance(textEnd);
      }

      if (textEnd < 0) {
        text = html;
        html = '';
      }

      if (options.chars && text) {
        options.chars(text);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text.replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
          .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }
        if (options.chars) {
          options.chars(text);
        }
        return '';
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if (false) {
        options.warn("Mal-formatted tag at end of template: \"" + html + "\"");
      }
      break;
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance(n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag() {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
        advance(attr[0].length);
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match;
      }
    }
  }

  function handleStartTag(match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
        if (args[3] === '') {
          delete args[3];
        }
        if (args[4] === '') {
          delete args[4];
        }
        if (args[5] === '') {
          delete args[5];
        }
      }
      var value = args[3] || args[4] || args[5] || '';
      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href' ? options.shouldDecodeNewlinesForHref : options.shouldDecodeNewlines;
      attrs[i] = {
        name: args[1],
        value: decodeAttr(value, shouldDecodeNewlines)
      };
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag(tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) {
      start = index;
    }
    if (end == null) {
      end = index;
    }

    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
    }

    // Find the closest opened tag of the same type
    if (tagName) {
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break;
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if (false) {
          options.warn("tag <" + stack[i].tag + "> has no matching end tag.");
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /([^]*?)\s+(?:in|of)\s+([^]*)/;
var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
var stripParensRE = /^\(|\)$/g;

var argRE = /:(.*)$/;
var bindRE = /^:|^v-bind:/;
var modifierRE = /\.[^.]+/g;

var decodeHTMLCached = cached(he.decode);

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;

function createASTElement(tag, attrs, parent) {
  return {
    type: 1,
    tag: tag,
    attrsList: attrs,
    attrsMap: makeAttrsMap(attrs),
    parent: parent,
    children: []
  };
}

/**
 * Convert HTML string to AST.
 */
function parse(template, options) {
  warn$2 = options.warn || baseWarn;

  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;

  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce(msg) {
    if (!warned) {
      warned = true;
      warn$2(msg);
    }
  }

  function closeElement(element) {
    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
    // apply post-transforms
    for (var i = 0; i < postTransforms.length; i++) {
      postTransforms[i](element, options);
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
    shouldKeepComment: options.comments,
    start: function start(tag, attrs, unary) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = currentParent && currentParent.ns || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = createASTElement(tag, attrs, currentParent);
      if (ns) {
        element.ns = ns;
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        "production" !== 'production' && warn$2('Templates should only be responsible for mapping the state to the ' + 'UI. Avoid placing tags with side-effects in your templates, such as ' + "<" + tag + ">" + ', as they will not be parsed.');
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        element = preTransforms[i](element, options) || element;
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else if (!element.processed) {
        // structural directives
        processFor(element);
        processIf(element);
        processOnce(element);
        // element-scope stuff
        processElement(element, options);
      }

      function checkRootConstraints(el) {
        if (false) {
          if (el.tag === 'slot' || el.tag === 'template') {
            warnOnce("Cannot use <" + el.tag + "> as component root element because it may " + 'contain multiple nodes.');
          }
          if (el.attrsMap.hasOwnProperty('v-for')) {
            warnOnce('Cannot use v-for on stateful component root element because ' + 'it renders multiple elements.');
          }
        }
      }

      // tree management
      if (!root) {
        root = element;
        checkRootConstraints(root);
      } else if (!stack.length) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          checkRootConstraints(element);
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else if (false) {
          warnOnce("Component template should contain exactly one root element. " + "If you are using v-if on multiple elements, " + "use v-else-if to chain them instead.");
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else if (element.slotScope) {
          // scoped slot
          currentParent.plain = false;
          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        } else {
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }
      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        closeElement(element);
      }
    },

    end: function end() {
      // remove trailing whitespace
      var element = stack[stack.length - 1];
      var lastNode = element.children[element.children.length - 1];
      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
        element.children.pop();
      }
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      closeElement(element);
    },

    chars: function chars(text) {
      if (!currentParent) {
        if (false) {
          if (text === template) {
            warnOnce('Component template requires a root element, rather than just text.');
          } else if (text = text.trim()) {
            warnOnce("text \"" + text + "\" outside root element will be ignored.");
          }
        }
        return;
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE && currentParent.tag === 'textarea' && currentParent.attrsMap.placeholder === text) {
        return;
      }
      var children = currentParent.children;
      text = inPre || text.trim() ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
      // only preserve whitespace if its not right after a starting tag
      : preserveWhitespace && children.length ? ' ' : '';
      if (text) {
        var res;
        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
          children.push({
            type: 2,
            expression: res.expression,
            tokens: res.tokens,
            text: text
          });
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          children.push({
            type: 3,
            text: text
          });
        }
      }
    },
    comment: function comment(text) {
      currentParent.children.push({
        type: 3,
        text: text,
        isComment: true
      });
    }
  });
  return root;
}

function processPre(el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs(el) {
  var l = el.attrsList.length;
  if (l) {
    var attrs = el.attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      attrs[i] = {
        name: el.attrsList[i].name,
        value: JSON.stringify(el.attrsList[i].value)
      };
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processElement(element, options) {
  processKey(element);

  // determine whether this is a plain element after
  // removing structural attributes
  element.plain = !element.key && !element.attrsList.length;

  processRef(element);
  processSlot(element);
  processComponent(element);
  for (var i = 0; i < transforms.length; i++) {
    element = transforms[i](element, options) || element;
  }
  processAttrs(element);
}

function processKey(el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if (false) {
      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
    }
    el.key = exp;
  }
}

function processRef(el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor(el) {
  var exp;
  if (exp = getAndRemoveAttr(el, 'v-for')) {
    var res = parseFor(exp);
    if (res) {
      extend(el, res);
    } else if (false) {
      warn$2("Invalid v-for expression: " + exp);
    }
  }
}

function parseFor(exp) {
  var inMatch = exp.match(forAliasRE);
  if (!inMatch) {
    return;
  }
  var res = {};
  res.for = inMatch[2].trim();
  var alias = inMatch[1].trim().replace(stripParensRE, '');
  var iteratorMatch = alias.match(forIteratorRE);
  if (iteratorMatch) {
    res.alias = alias.replace(forIteratorRE, '');
    res.iterator1 = iteratorMatch[1].trim();
    if (iteratorMatch[2]) {
      res.iterator2 = iteratorMatch[2].trim();
    }
  } else {
    res.alias = alias;
  }
  return res;
}

function processIf(el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions(el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (false) {
    warn$2("v-" + (el.elseif ? 'else-if="' + el.elseif + '"' : 'else') + " " + "used on element <" + el.tag + "> without corresponding v-if.");
  }
}

function findPrevElement(children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i];
    } else {
      if (false) {
        warn$2("text \"" + children[i].text.trim() + "\" between v-if and v-else(-if) " + "will be ignored.");
      }
      children.pop();
    }
  }
}

function addIfCondition(el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce(el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

function processSlot(el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if (false) {
      warn$2("`key` does not work on <slot> because slots are abstract outlets " + "and can possibly expand into multiple elements. " + "Use the key on a wrapping element instead.");
    }
  } else {
    var slotScope;
    if (el.tag === 'template') {
      slotScope = getAndRemoveAttr(el, 'scope');
      /* istanbul ignore if */
      if (false) {
        warn$2("the \"scope\" attribute for scoped slots have been deprecated and " + "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " + "can also be used on plain elements in addition to <template> to " + "denote scoped slots.", true);
      }
      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
    } else if (slotScope = getAndRemoveAttr(el, 'slot-scope')) {
      /* istanbul ignore if */
      if (false) {
        warn$2("Ambiguous combined usage of slot-scope and v-for on <" + el.tag + "> " + "(v-for takes higher priority). Use a wrapper <template> for the " + "scoped slot to make it clearer.", true);
      }
      el.slotScope = slotScope;
    }
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
      // preserve slot as an attribute for native shadow DOM compat
      // only for non-scoped slots.
      if (el.tag !== 'template' && !el.slotScope) {
        addAttr(el, 'slot', slotTarget);
      }
    }
  }
}

function processComponent(el) {
  var binding;
  if (binding = getBindingAttr(el, 'is')) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs(el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, isProp;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name);
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) {
        // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isProp = false;
        if (modifiers) {
          if (modifiers.prop) {
            isProp = true;
            name = camelize(name);
            if (name === 'innerHtml') {
              name = 'innerHTML';
            }
          }
          if (modifiers.camel) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            addHandler(el, "update:" + camelize(name), genAssignmentCode(value, "$event"));
          }
        }
        if (isProp || !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)) {
          addProp(el, name, value);
        } else {
          addAttr(el, name, value);
        }
      } else if (onRE.test(name)) {
        // v-on
        name = name.replace(onRE, '');
        addHandler(el, name, value, modifiers, false, warn$2);
      } else {
        // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
        }
        addDirective(el, name, rawName, value, arg, modifiers);
        if (false) {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (false) {
        var res = parseText(value, delimiters);
        if (res) {
          warn$2(name + "=\"" + value + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div id="{{ val }}">, use <div :id="val">.');
        }
      }
      addAttr(el, name, JSON.stringify(value));
      // #6887 firefox doesn't update muted state if set via attribute
      // even immediately after element creation
      if (!el.component && name === 'muted' && platformMustUseProp(el.tag, el.attrsMap.type, name)) {
        addProp(el, name, 'true');
      }
    }
  }
}

function checkInFor(el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true;
    }
    parent = parent.parent;
  }
  return false;
}

function parseModifiers(name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) {
      ret[m.slice(1)] = true;
    });
    return ret;
  }
}

function makeAttrsMap(attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (false) {
      warn$2('duplicate attribute: ' + attrs[i].name);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map;
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag(el) {
  return el.tag === 'script' || el.tag === 'style';
}

function isForbiddenTag(el) {
  return el.tag === 'style' || el.tag === 'script' && (!el.attrsMap.type || el.attrsMap.type === 'text/javascript');
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug(attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res;
}

function checkForAliasModel(el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2("<" + el.tag + " v-model=\"" + value + "\">: " + "You are binding v-model directly to a v-for iteration alias. " + "This will not be able to modify the v-for source array because " + "writing to the alias is like modifying a function local variable. " + "Consider using an array of objects and use v-model on an object property instead.");
    }
    _el = _el.parent;
  }
}

/*  */

/**
 * Expand input[v-model] with dyanmic type bindings into v-if-else chains
 * Turn this:
 *   <input v-model="data[type]" :type="type">
 * into this:
 *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
 *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
 *   <input v-else :type="type" v-model="data[type]">
 */

function preTransformNode(el, options) {
  if (el.tag === 'input') {
    var map = el.attrsMap;
    if (!map['v-model']) {
      return;
    }

    var typeBinding;
    if (map[':type'] || map['v-bind:type']) {
      typeBinding = getBindingAttr(el, 'type');
    }
    if (!map.type && !typeBinding && map['v-bind']) {
      typeBinding = "(" + map['v-bind'] + ").type";
    }

    if (typeBinding) {
      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
      var ifConditionExtra = ifCondition ? "&&(" + ifCondition + ")" : "";
      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
      // 1. checkbox
      var branch0 = cloneASTElement(el);
      // process for on the main node
      processFor(branch0);
      addRawAttr(branch0, 'type', 'checkbox');
      processElement(branch0, options);
      branch0.processed = true; // prevent it from double-processed
      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
      addIfCondition(branch0, {
        exp: branch0.if,
        block: branch0
      });
      // 2. add radio else-if condition
      var branch1 = cloneASTElement(el);
      getAndRemoveAttr(branch1, 'v-for', true);
      addRawAttr(branch1, 'type', 'radio');
      processElement(branch1, options);
      addIfCondition(branch0, {
        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
        block: branch1
      });
      // 3. other
      var branch2 = cloneASTElement(el);
      getAndRemoveAttr(branch2, 'v-for', true);
      addRawAttr(branch2, ':type', typeBinding);
      processElement(branch2, options);
      addIfCondition(branch0, {
        exp: ifCondition,
        block: branch2
      });

      if (hasElse) {
        branch0.else = true;
      } else if (elseIfCondition) {
        branch0.elseif = elseIfCondition;
      }

      return branch0;
    }
  }
}

function cloneASTElement(el) {
  return createASTElement(el.tag, el.attrsList.slice(), el.parent);
}

var model$2 = {
  preTransformNode: preTransformNode
};

var modules$1 = [klass$1, style$1, model$2];

/*  */

function text(el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', "_s(" + dir.value + ")");
  }
}

/*  */

function html(el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', "_s(" + dir.value + ")");
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html

  /*  */

};var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize(root, options) {
  if (!root) {
    return;
  }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1(keys) {
  return makeMap('type,tag,attrsList,attrsMap,plain,parent,children,attrs' + (keys ? ',' + keys : ''));
}

function markStatic$1(node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (!isPlatformReservedTag(node.tag) && node.tag !== 'slot' && node.attrsMap['inline-template'] == null) {
      return;
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);
        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots(node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(node.children.length === 1 && node.children[0].type === 3)) {
      node.staticRoot = true;
      return;
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic(node) {
  if (node.type === 2) {
    // expression
    return false;
  }
  if (node.type === 3) {
    // text
    return true;
  }
  return !!(node.pre || !node.hasBindings && // no dynamic bindings
  !node.if && !node.for && // not v-if or v-for or v-else
  !isBuiltInTag(node.tag) && // not a built-in
  isPlatformReservedTag(node.tag) && // not a component
  !isDirectChildOfTemplateFor(node) && Object.keys(node).every(isStaticKey));
}

function isDirectChildOfTemplateFor(node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false;
    }
    if (node.for) {
      return true;
    }
  }
  return false;
}

/*  */

var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;

// KeyboardEvent.keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// KeyboardEvent.key aliases
var keyNames = {
  esc: 'Escape',
  tab: 'Tab',
  enter: 'Enter',
  space: ' ',
  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
  up: ['Up', 'ArrowUp'],
  left: ['Left', 'ArrowLeft'],
  right: ['Right', 'ArrowRight'],
  down: ['Down', 'ArrowDown'],
  'delete': ['Backspace', 'Delete']
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) {
  return "if(" + condition + ")return null;";
};

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers(events, isNative, warn) {
  var res = isNative ? 'nativeOn:{' : 'on:{';
  for (var name in events) {
    res += "\"" + name + "\":" + genHandler(name, events[name]) + ",";
  }
  return res.slice(0, -1) + '}';
}

function genHandler(name, handler) {
  if (!handler) {
    return 'function(){}';
  }

  if (Array.isArray(handler)) {
    return "[" + handler.map(function (handler) {
      return genHandler(name, handler);
    }).join(',') + "]";
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);

  if (!handler.modifiers) {
    if (isMethodPath || isFunctionExpression) {
      return handler.value;
    }
    /* istanbul ignore if */
    return "function($event){" + handler.value + "}"; // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else if (key === 'exact') {
        var modifiers = handler.modifiers;
        genModifierCode += genGuard(['ctrl', 'shift', 'alt', 'meta'].filter(function (keyModifier) {
          return !modifiers[keyModifier];
        }).map(function (keyModifier) {
          return "$event." + keyModifier + "Key";
        }).join('||'));
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath ? "return " + handler.value + "($event)" : isFunctionExpression ? "return (" + handler.value + ")($event)" : handler.value;
    /* istanbul ignore if */
    return "function($event){" + code + handlerCode + "}";
  }
}

function genKeyFilter(keys) {
  return "if(!('button' in $event)&&" + keys.map(genFilterCode).join('&&') + ")return null;";
}

function genFilterCode(key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return "$event.keyCode!==" + keyVal;
  }
  var keyCode = keyCodes[key];
  var keyName = keyNames[key];
  return "_k($event.keyCode," + JSON.stringify(key) + "," + JSON.stringify(keyCode) + "," + "$event.key," + "" + JSON.stringify(keyName) + ")";
}

/*  */

function on(el, dir) {
  if (false) {
    warn("v-on without argument does not support modifiers.");
  }
  el.wrapListeners = function (code) {
    return "_g(" + code + "," + dir.value + ")";
  };
}

/*  */

function bind$1(el, dir) {
  el.wrapData = function (code) {
    return "_b(" + code + ",'" + el.tag + "'," + dir.value + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")";
  };
}

/*  */

var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop

  /*  */

};var CodegenState = function CodegenState(options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;
  this.maybeComponent = function (el) {
    return !isReservedTag(el.tag);
  };
  this.onceId = 0;
  this.staticRenderFns = [];
};

function generate(ast, options) {
  var state = new CodegenState(options);
  var code = ast ? genElement(ast, state) : '_c("div")';
  return {
    render: "with(this){return " + code + "}",
    staticRenderFns: state.staticRenderFns
  };
}

function genElement(el, state) {
  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state);
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state);
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state);
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state);
  } else if (el.tag === 'template' && !el.slotTarget) {
    return genChildren(el, state) || 'void 0';
  } else if (el.tag === 'slot') {
    return genSlot(el, state);
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data = el.plain ? undefined : genData$2(el, state);

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + el.tag + "'" + (data ? "," + data : '') + (children ? "," + children : '') + ")";
    }
    // module transforms
    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }
    return code;
  }
}

// hoist static sub-trees out
function genStatic(el, state) {
  el.staticProcessed = true;
  state.staticRenderFns.push("with(this){return " + genElement(el, state) + "}");
  return "_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")";
}

// v-once
function genOnce(el, state) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el, state);
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break;
      }
      parent = parent.parent;
    }
    if (!key) {
      "production" !== 'production' && state.warn("v-once can only be used inside v-for that is keyed. ");
      return genElement(el, state);
    }
    return "_o(" + genElement(el, state) + "," + state.onceId++ + "," + key + ")";
  } else {
    return genStatic(el, state);
  }
}

function genIf(el, state, altGen, altEmpty) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty);
}

function genIfConditions(conditions, state, altGen, altEmpty) {
  if (!conditions.length) {
    return altEmpty || '_e()';
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return "(" + condition.exp + ")?" + genTernaryExp(condition.block) + ":" + genIfConditions(conditions, state, altGen, altEmpty);
  } else {
    return "" + genTernaryExp(condition.block);
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp(el) {
    return altGen ? altGen(el, state) : el.once ? genOnce(el, state) : genElement(el, state);
  }
}

function genFor(el, state, altGen, altHelper) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? "," + el.iterator1 : '';
  var iterator2 = el.iterator2 ? "," + el.iterator2 : '';

  if (false) {
    state.warn("<" + el.tag + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " + "v-for should have explicit keys. " + "See https://vuejs.org/guide/list.html#key for more info.", true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return (altHelper || '_l') + "((" + exp + ")," + "function(" + alias + iterator1 + iterator2 + "){" + "return " + (altGen || genElement)(el, state) + '})';
}

function genData$2(el, state) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el, state);
  if (dirs) {
    data += dirs + ',';
  }

  // key
  if (el.key) {
    data += "key:" + el.key + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + el.ref + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + el.tag + "\",";
  }
  // module data generation functions
  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:{" + genProps(el.attrs) + "},";
  }
  // DOM props
  if (el.props) {
    data += "domProps:{" + genProps(el.props) + "},";
  }
  // event handlers
  if (el.events) {
    data += genHandlers(el.events, false, state.warn) + ",";
  }
  if (el.nativeEvents) {
    data += genHandlers(el.nativeEvents, true, state.warn) + ",";
  }
  // slot target
  // only for non-scoped slots
  if (el.slotTarget && !el.slotScope) {
    data += "slot:" + el.slotTarget + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += genScopedSlots(el.scopedSlots, state) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + el.model.value + ",callback:" + el.model.callback + ",expression:" + el.model.expression + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  // v-on data wrap
  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }
  return data;
}

function genDirectives(el, state) {
  var dirs = el.directives;
  if (!dirs) {
    return;
  }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + dir.name + "\",rawName:\"" + dir.rawName + "\"" + (dir.value ? ",value:(" + dir.value + "),expression:" + JSON.stringify(dir.value) : '') + (dir.arg ? ",arg:\"" + dir.arg + "\"" : '') + (dir.modifiers ? ",modifiers:" + JSON.stringify(dir.modifiers) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']';
  }
}

function genInlineTemplate(el, state) {
  var ast = el.children[0];
  if (false) {
    state.warn('Inline-template components must have exactly one child element.');
  }
  if (ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return "inlineTemplate:{render:function(){" + inlineRenderFns.render + "},staticRenderFns:[" + inlineRenderFns.staticRenderFns.map(function (code) {
      return "function(){" + code + "}";
    }).join(',') + "]}";
  }
}

function genScopedSlots(slots, state) {
  return "scopedSlots:_u([" + Object.keys(slots).map(function (key) {
    return genScopedSlot(key, slots[key], state);
  }).join(',') + "])";
}

function genScopedSlot(key, el, state) {
  if (el.for && !el.forProcessed) {
    return genForScopedSlot(key, el, state);
  }
  var fn = "function(" + String(el.slotScope) + "){" + "return " + (el.tag === 'template' ? el.if ? el.if + "?" + (genChildren(el, state) || 'undefined') + ":undefined" : genChildren(el, state) || 'undefined' : genElement(el, state)) + "}";
  return "{key:" + key + ",fn:" + fn + "}";
}

function genForScopedSlot(key, el, state) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? "," + el.iterator1 : '';
  var iterator2 = el.iterator2 ? "," + el.iterator2 : '';
  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," + "function(" + alias + iterator1 + iterator2 + "){" + "return " + genScopedSlot(key, el, state) + '})';
}

function genChildren(el, state, checkSkip, altGenElement, altGenNode) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 && el$1.for && el$1.tag !== 'template' && el$1.tag !== 'slot') {
      return (altGenElement || genElement)(el$1, state);
    }
    var normalizationType = checkSkip ? getNormalizationType(children, state.maybeComponent) : 0;
    var gen = altGenNode || genNode;
    return "[" + children.map(function (c) {
      return gen(c, state);
    }).join(',') + "]" + (normalizationType ? "," + normalizationType : '');
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType(children, maybeComponent) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue;
    }
    if (needsNormalization(el) || el.ifConditions && el.ifConditions.some(function (c) {
      return needsNormalization(c.block);
    })) {
      res = 2;
      break;
    }
    if (maybeComponent(el) || el.ifConditions && el.ifConditions.some(function (c) {
      return maybeComponent(c.block);
    })) {
      res = 1;
    }
  }
  return res;
}

function needsNormalization(el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot';
}

function genNode(node, state) {
  if (node.type === 1) {
    return genElement(node, state);
  }if (node.type === 3 && node.isComment) {
    return genComment(node);
  } else {
    return genText(node);
  }
}

function genText(text) {
  return "_v(" + (text.type === 2 ? text.expression // no need for () because already wrapped in _s()
  : transformSpecialNewlines(JSON.stringify(text.text))) + ")";
}

function genComment(comment) {
  return "_e(" + JSON.stringify(comment.text) + ")";
}

function genSlot(el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? "," + children : '');
  var attrs = el.attrs && "{" + el.attrs.map(function (a) {
    return camelize(a.name) + ":" + a.value;
  }).join(',') + "}";
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')';
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent(componentName, el, state) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return "_c(" + componentName + "," + genData$2(el, state) + (children ? "," + children : '') + ")";
}

function genProps(props) {
  var res = '';
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    /* istanbul ignore if */
    {
      res += "\"" + prop.name + "\":" + transformSpecialNewlines(prop.value) + ",";
    }
  }
  return res.slice(0, -1);
}

// #3895, #4268
function transformSpecialNewlines(text) {
  return text.replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029');
}

/*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments').split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + 'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors(ast) {
  var errors = [];
  if (ast) {
    checkNode(ast, errors);
  }
  return errors;
}

function checkNode(node, errors) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          if (name === 'v-for') {
            checkFor(node, "v-for=\"" + value + "\"", errors);
          } else if (onRE.test(name)) {
            checkEvent(value, name + "=\"" + value + "\"", errors);
          } else {
            checkExpression(value, name + "=\"" + value + "\"", errors);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], errors);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, errors);
  }
}

function checkEvent(exp, text, errors) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);
  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    errors.push("avoid using JavaScript unary operator as property name: " + "\"" + keywordMatch[0] + "\" in expression " + text.trim());
  }
  checkExpression(exp, text, errors);
}

function checkFor(node, text, errors) {
  checkExpression(node.for || '', text, errors);
  checkIdentifier(node.alias, 'v-for alias', text, errors);
  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
}

function checkIdentifier(ident, type, text, errors) {
  if (typeof ident === 'string') {
    try {
      new Function("var " + ident + "=_");
    } catch (e) {
      errors.push("invalid " + type + " \"" + ident + "\" in expression: " + text.trim());
    }
  }
}

function checkExpression(exp, text, errors) {
  try {
    new Function("return " + exp);
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      errors.push("avoid using JavaScript keyword as property name: " + "\"" + keywordMatch[0] + "\"\n  Raw expression: " + text.trim());
    } else {
      errors.push("invalid expression: " + e.message + " in\n\n" + "    " + exp + "\n\n" + "  Raw expression: " + text.trim() + "\n");
    }
  }
}

/*  */

function createFunction(code, errors) {
  try {
    return new Function(code);
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop;
  }
}

function createCompileToFunctionFn(compile) {
  var cache = Object.create(null);

  return function compileToFunctions(template, options, vm) {
    options = extend({}, options);
    var warn$$1 = options.warn || warn;
    delete options.warn;

    /* istanbul ignore if */
    if (false) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn$$1('It seems you are using the standalone build of Vue.js in an ' + 'environment with Content Security Policy that prohibits unsafe-eval. ' + 'The template compiler cannot work in this environment. Consider ' + 'relaxing the policy to allow unsafe-eval or pre-compiling your ' + 'templates into render functions.');
        }
      }
    }

    // check cache
    var key = options.delimiters ? String(options.delimiters) + template : template;
    if (cache[key]) {
      return cache[key];
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (false) {
      if (compiled.errors && compiled.errors.length) {
        warn$$1("Error compiling template:\n\n" + template + "\n\n" + compiled.errors.map(function (e) {
          return "- " + e;
        }).join('\n') + '\n', vm);
      }
      if (compiled.tips && compiled.tips.length) {
        compiled.tips.forEach(function (msg) {
          return tip(msg, vm);
        });
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors);
    });

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (false) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn$$1("Failed to generate render function:\n\n" + fnGenErrors.map(function (ref) {
          var err = ref.err;
          var code = ref.code;

          return err.toString() + " in\n\n" + code + "\n";
        }).join('\n'), vm);
      }
    }

    return cache[key] = res;
  };
}

/*  */

function createCompilerCreator(baseCompile) {
  return function createCompiler(baseOptions) {
    function compile(template, options) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];
      finalOptions.warn = function (msg, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        // merge custom modules
        if (options.modules) {
          finalOptions.modules = (baseOptions.modules || []).concat(options.modules);
        }
        // merge custom directives
        if (options.directives) {
          finalOptions.directives = extend(Object.create(baseOptions.directives || null), options.directives);
        }
        // copy other options
        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      var compiled = baseCompile(template, finalOptions);
      if (false) {
        errors.push.apply(errors, detectErrors(compiled.ast));
      }
      compiled.errors = errors;
      compiled.tips = tips;
      return compiled;
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    };
  };
}

/*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler = createCompilerCreator(function baseCompile(template, options) {
  var ast = parse(template.trim(), options);
  if (options.optimize !== false) {
    optimize(ast, options);
  }
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  };
});

/*  */

var ref$1 = createCompiler(baseOptions);
var compileToFunctions = ref$1.compileToFunctions;

/*  */

// check whether current browser encodes a char inside attribute values
var div;
function getShouldDecode(href) {
  div = div || document.createElement('div');
  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
  return div.innerHTML.indexOf('&#10;') > 0;
}

// #3663: IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
// #6828: chrome encodes content in a[href]
var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML;
});

var mount = Vue.prototype.$mount;
Vue.prototype.$mount = function (el, hydrating) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
    "production" !== 'production' && warn("Do not mount Vue to <html> or <body> - mount to normal elements instead.");
    return this;
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if (false) {
            warn("Template element not found or is empty: " + options.template, this);
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (false) {
          warn('invalid template option:' + template, this);
        }
        return this;
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if (false) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        shouldDecodeNewlines: shouldDecodeNewlines,
        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if (false) {
        mark('compile end');
        measure("vue " + this._name + " compile", 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating);
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML(el) {
  if (el.outerHTML) {
    return el.outerHTML;
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML;
  }
}

Vue.compile = compileToFunctions;

/* harmony default export */ __webpack_exports__["a"] = (Vue);
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1), __webpack_require__(15).setImmediate))

/***/ }),
/* 1 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = function () {
	return this;
}();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = {"networks":{"mainnet":{"contracts":{"_0xbitcointoken":{"name":"0xBitcoinToken","blockchain_address":"0xb6ed7644c69416d67b522e20bc294a9a9b405b31"},"microdex":{"name":"micro-dex","blockchain_address":"0x728325a626ef65b5ecff44310c6808b3736c686c"},"lavawallet":{"name":"lava-wallet","blockchain_address":"0x"}}},"ropsten":{"contracts":{"_0xbitcointoken":{"name":"0xBitcoinToken","blockchain_address":"0x9D2Cc383E677292ed87f63586086CfF62a009010"},"microdex":{"name":"micro-dex","blockchain_address":"0xC2236F1052199A43d6b7EF6C54b842A095a6B8E3"},"lavawallet":{"name":"lava-wallet","blockchain_address":"0x1d0d66272025d7c59c40257813fc0d7ddf2c4826"}}}}}

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = {"contractName":"_0xBitcoinToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"lastRewardEthBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMiningDifficulty","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"nonce","type":"uint256"},{"name":"challenge_digest","type":"bytes32"}],"name":"mint","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardEra","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMiningTarget","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMiningReward","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getChallengeNumber","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"maxSupplyForEra","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"tokensMinted","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastRewardTo","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"nonce","type":"uint256"},{"name":"challenge_digest","type":"bytes32"},{"name":"challenge_number","type":"bytes32"},{"name":"testDifficulty","type":"uint256"}],"name":"checkMintSolution","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"epochCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_MAXIMUM_TARGET","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"miningTarget","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"challengeNumber","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"nonce","type":"uint256"},{"name":"challenge_digest","type":"bytes32"},{"name":"challenge_number","type":"bytes32"}],"name":"getMintDigest","outputs":[{"name":"digesttest","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"_BLOCKS_PER_READJUSTMENT","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastRewardAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"},{"name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"latestDifficultyPeriodStarted","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"newOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokenAddress","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferAnyERC20Token","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"_MINIMUM_TARGET","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"reward_amount","type":"uint256"},{"indexed":false,"name":"epochCount","type":"uint256"},{"indexed":false,"name":"newChallengeNumber","type":"bytes32"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"tokenOwner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Approval","type":"event"}],"bytecode":"","deployedBytecode":"0x6060604052600436106101c2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101c7578063095ea7b314610255578063163aa00d146102af57806317da485f146102d85780631801fbe51461030157806318160ddd1461034957806323b872dd146103725780632d38bf7a146103eb578063313ce5671461041457806332e99708146104435780633eaaf86b1461046c578063490203a7146104955780634ef37628146104be5780634fa972e1146104ef5780636de9f32b146105185780636fd396d61461054157806370a082311461059657806379ba5097146105e357806381269a56146105f8578063829965cc1461065657806387a2a9d61461067f5780638a769d35146106a85780638ae0368b146106d15780638da5cb5b1461070257806395d89b411461075757806397566aa0146107e5578063a9059cbb1461083e578063b5ade81b14610898578063bafedcaa146108c1578063cae9ca51146108ea578063cb9ae70714610987578063d4ee1d90146109b0578063dc39d06d14610a05578063dc6e9cf914610a5f578063dd62ed3e14610a88578063f2fde38b14610af4575b600080fd5b34156101d257600080fd5b6101da610b2d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021a5780820151818401526020810190506101ff565b50505050905090810190601f1680156102475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561026057600080fd5b610295600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bcb565b604051808215151515815260200191505060405180910390f35b34156102ba57600080fd5b6102c2610cbd565b6040518082815260200191505060405180910390f35b34156102e357600080fd5b6102eb610cc3565b6040518082815260200191505060405180910390f35b341561030c57600080fd5b61032f600480803590602001909190803560001916906020019091905050610ce1565b604051808215151515815260200191505060405180910390f35b341561035457600080fd5b61035c610f54565b6040518082815260200191505060405180910390f35b341561037d57600080fd5b6103d1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f9f565b604051808215151515815260200191505060405180910390f35b34156103f657600080fd5b6103fe61124a565b6040518082815260200191505060405180910390f35b341561041f57600080fd5b610427611250565b604051808260ff1660ff16815260200191505060405180910390f35b341561044e57600080fd5b610456611263565b6040518082815260200191505060405180910390f35b341561047757600080fd5b61047f61126d565b6040518082815260200191505060405180910390f35b34156104a057600080fd5b6104a8611273565b6040518082815260200191505060405180910390f35b34156104c957600080fd5b6104d16112aa565b60405180826000191660001916815260200191505060405180910390f35b34156104fa57600080fd5b6105026112b4565b6040518082815260200191505060405180910390f35b341561052357600080fd5b61052b6112ba565b6040518082815260200191505060405180910390f35b341561054c57600080fd5b6105546112c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105a157600080fd5b6105cd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506112e6565b6040518082815260200191505060405180910390f35b34156105ee57600080fd5b6105f661132f565b005b341561060357600080fd5b61063c600480803590602001909190803560001916906020019091908035600019169060200190919080359060200190919050506114ce565b604051808215151515815260200191505060405180910390f35b341561066157600080fd5b610669611577565b6040518082815260200191505060405180910390f35b341561068a57600080fd5b61069261157d565b6040518082815260200191505060405180910390f35b34156106b357600080fd5b6106bb611583565b6040518082815260200191505060405180910390f35b34156106dc57600080fd5b6106e4611589565b60405180826000191660001916815260200191505060405180910390f35b341561070d57600080fd5b61071561158f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561076257600080fd5b61076a6115b4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107aa57808201518184015260208101905061078f565b50505050905090810190601f1680156107d75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156107f057600080fd5b61082060048080359060200190919080356000191690602001909190803560001916906020019091905050611652565b60405180826000191660001916815260200191505060405180910390f35b341561084957600080fd5b61087e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506116cb565b604051808215151515815260200191505060405180910390f35b34156108a357600080fd5b6108ab611866565b6040518082815260200191505060405180910390f35b34156108cc57600080fd5b6108d461186c565b6040518082815260200191505060405180910390f35b34156108f557600080fd5b61096d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611872565b604051808215151515815260200191505060405180910390f35b341561099257600080fd5b61099a611abc565b6040518082815260200191505060405180910390f35b34156109bb57600080fd5b6109c3611ac2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a1057600080fd5b610a45600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611ae8565b604051808215151515815260200191505060405180910390f35b3415610a6a57600080fd5b610a72611c34565b6040518082815260200191505060405180910390f35b3415610a9357600080fd5b610ade600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c3a565b6040518082815260200191505060405180910390f35b3415610aff57600080fd5b610b2b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cc1565b005b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bc35780601f10610b9857610100808354040283529160200191610bc3565b820191906000526020600020905b815481529060010190602001808311610ba657829003601f168201915b505050505081565b600081601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60115481565b6000610cdc600b54600a54611d6090919063ffffffff16565b905090565b600080600080610cef611273565b9250600c5433876040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040518091039020915084600019168260001916141515610d7457600080fd5b600b5482600190041115610d8757600080fd5b60126000836000191660001916815260200190815260200160002054905060075460126000846000191660001916815260200190815260200160002081905550600081141515610dd657600080fd5b610e2883601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e8083601354611d8490919063ffffffff16565b60138190555033600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260108190555043601181905550610edd611da0565b3373ffffffffffffffffffffffffffffffffffffffff167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d84600754600c54604051808481526020018381526020018260001916600019168152602001935050505060405180910390a26001935050505092915050565b6000601460008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460055403905090565b6000610ff382601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e3d90919063ffffffff16565b601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110c582601560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e3d90919063ffffffff16565b601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061119782601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600d5481565b600460009054906101000a900460ff1681565b6000600b54905090565b60055481565b60006112a5600d5460020a600460009054906101000a900460ff1660ff16600a0a603202611d6090919063ffffffff16565b905090565b6000600c54905090565b600e5481565b60135481565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561138b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806000808492506114df611273565b91508533896040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001935050505060405180910390209050600b548160019004111561155f57600080fd5b86600019168160001916149350505050949350505050565b60075481565b600a5481565b600b5481565b600c5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561164a5780601f1061161f5761010080835404028352916020019161164a565b820191906000526020600020905b81548152906001019060200180831161162d57829003601f168201915b505050505081565b6000808233866040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001935050505060405180910390209050809150509392505050565b600061171f82601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e3d90919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117b482601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60085481565b60105481565b600082601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a38373ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338530866040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611a4f578082015181840152602081019050611a34565b50505050905090810190601f168015611a7c5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515611a9d57600080fd5b6102c65a03f11515611aae57600080fd5b505050600190509392505050565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b4557600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611c1157600080fd5b6102c65a03f11515611c2257600080fd5b50505060405180519050905092915050565b60095481565b6000601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d1c57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082111515611d7057600080fd5b8183811515611d7b57fe5b04905092915050565b60008183019050828110151515611d9a57600080fd5b92915050565b600e5460135410158015611db657506020600d54105b15611dc8576001600d5401600d819055505b611de56001600d540160020a600554611d6090919063ffffffff16565b60055403600e819055506001430340600c8160001916905550611e146001600754611d8490919063ffffffff16565b6007819055506000600854600754811515611e2b57fe5b061415611e3b57611e3a611e59565b5b565b6000828211151515611e4e57600080fd5b818303905092915050565b6000806000600654430392506008549150603c8202905080831015611ead57611ea2611e916014600b54611d6090919063ffffffff16565b600b54611e3d90919063ffffffff16565b600b81905550611ede565b611ed7611ec66014600b54611d6090919063ffffffff16565b600b54611d8490919063ffffffff16565b600b819055505b43600681905550600954600b541015611efb57600954600b819055505b600a54600b541115611f1157600a54600b819055505b5050505600a165627a7a72305820d59f3473ee8072d3b732daa114aa23e8db3e168007f7eca216306713144505270029","sourceMap":"3478:11796:0:-;;;3927:3;3888:42;;4037:4;4006:35;;4101:6;4070:37;;4982:514;;;;;;;;2804:10;2796:5;;:18;;;;;;;;;;;;;;;;;;2881:5;;;;;;;;;;;2867:19;;:10;:19;;;2859:28;;;;;;;;5036:16;;;;;;;;;;;;;;;;;;:6;:16;;;;;;;;;;;;:::i;:::-;;5063:24;;;;;;;;;;;;;;;;;;:4;:24;;;;;;;;;;;;:::i;:::-;;5109:1;5098:8;;:12;;;;;;;;;;;;;;;;;;5156:8;;;;;;;;;;;5151:14;;5147:2;:18;5136:8;:29;5121:12;:44;;;;5190:1;5175:12;:16;;;;5214:1;5202:9;:13;;;;5243:19;5260:1;5243:12;;:16;;;;;;:19;;;;;:::i;:::-;5225:15;:37;;;;5288:15;;5273:12;:30;;;;5346:12;5314:29;:44;;;;5369:22;:20;;;;;:22;;;:::i;:::-;3478:11796;;916:113;968:6;999:1;995;:5;987:14;;;;;;;;1020:1;1016;:5;;;;;;;;1012:9;;916:113;;;;:::o;5502:821::-;5646:15;;5630:12;;:31;;:49;;;;;5677:2;5665:9;;:14;5630:49;5627:152;;;5769:1;5757:9;;:13;5745:9;:25;;;;5627:152;5884:37;5918:1;5906:9;;:13;5902:1;:18;5884:12;;:16;;;;;;:37;;;;;:::i;:::-;5869:12;;:52;5851:15;:70;;;;6096:1;6081:12;:16;6065:33;6047:15;:51;;;;;;;6121:17;6136:1;6121:10;;:14;;;;;;:17;;;;;:::i;:::-;6108:10;:30;;;;6265:1;6237:24;;6224:10;;:37;;;;;;;;:42;6221:93;;;6284:21;:19;;;;;:21;;;:::i;:::-;6221:93;5502:821::o;542:114::-;594:6;621:1;617;:5;613:9;;646:1;641;:6;;633:15;;;;;;;;542:114;;;;:::o;6547:1108::-;6599:39;6857:16;6917:28;6656:29;;6641:12;:44;6599:86;;6876:24;;6857:43;;6962:2;6948:11;:16;6917:47;;7127:23;7090:34;:60;7086:285;;;7215:38;7232:20;7249:2;7232:12;;:16;;;;;;:20;;;;;:::i;:::-;7215:12;;:16;;;;;;:38;;;;;:::i;:::-;7200:12;:53;;;;7086:285;;;7322:38;7339:20;7356:2;7339:12;;:16;;;;;;:20;;;;;:::i;:::-;7322:12;;:16;;;;;;:38;;;;;:::i;:::-;7307:12;:53;;;;7086:285;7415:12;7383:29;:44;;;;7456:15;;7441:12;;:30;7438:100;;;7512:15;;7497:12;:30;;;;7438:100;7566:15;;7551:12;;:30;7548:101;;;7623:15;;7608:12;:30;;;;7548:101;6547:1108;;;:::o;662:114::-;714:6;746:1;741;:6;;733:15;;;;;;;;767:1;763;:5;759:9;;662:114;;;;:::o;3478:11796::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"3478:11796:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14835:8;;;3593:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12405:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4441:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10036:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8393:1361;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10815:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13149:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4312:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3619;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10161:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3647:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10367:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9844:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4339:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4559:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4374:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11156:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3022:191;;;;;;;;;;;;;;7902:484;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3832:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4070:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4115:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4222:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2625:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3566;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7662:232:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11629:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3888:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4407:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14290:312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15087:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4006:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13773:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2914:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;3593:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12405:203::-;12468:12;12524:6;12493:7;:19;12501:10;12493:19;;;;;;;;;;;;;;;:28;12513:7;12493:28;;;;;;;;;;;;;;;:37;;;;12562:7;12541:37;;12550:10;12541:37;;;12571:6;12541:37;;;;;;;;;;;;;;;;;;12596:4;12589:11;;12405:203;;;;:::o;4441:36::-;;;;:::o;10036:119::-;10092:4;10115:33;10135:12;;10115:15;;:19;;:33;;;;:::i;:::-;10108:40;;10036:119;:::o;8393:1361::-;8464:12;8540:18;8739:14;9139;8561:17;:15;:17::i;:::-;8540:38;;8767:15;;8784:10;8796:5;8757:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8739:64;;8883:16;8873:26;;;:6;:26;;;;;8869:40;;;8901:8;;;8869:40;8994:12;;8984:6;8976:15;;;:30;8973:43;;;9008:8;;;8973:43;9156:17;:25;9174:6;9156:25;;;;;;;;;;;;;;;;;;9139:42;;9220:10;;9192:17;:25;9210:6;9192:25;;;;;;;;;;;;;;;;;:38;;;;9257:1;9244:9;:14;;9241:27;;;9260:8;;;9241:27;9351:39;9376:13;9351:8;:20;9360:10;9351:20;;;;;;;;;;;;;;;;:24;;:39;;;;:::i;:::-;9328:8;:20;9337:10;9328:20;;;;;;;;;;;;;;;:62;;;;9417:31;9434:13;9417:12;;:16;;:31;;;;:::i;:::-;9402:12;:46;;;;9515:10;9500:12;;:25;;;;;;;;;;;;;;;;;;9554:13;9535:16;:32;;;;9604:12;9577:24;:39;;;;9629:22;:20;:22::i;:::-;9669:10;9664:61;;;9681:13;9696:10;;9708:15;;9664:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9742:4;9735:11;;8393:1361;;;;;;;:::o;10815:116::-;10863:4;10903:8;:20;10920:1;10903:20;;;;;;;;;;;;;;;;10887:12;;:36;10880:43;;10815:116;:::o;13149:338::-;13226:12;13268:26;13287:6;13268:8;:14;13277:4;13268:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;13251:8;:14;13260:4;13251:14;;;;;;;;;;;;;;;:43;;;;13333:37;13363:6;13333:7;:13;13341:4;13333:13;;;;;;;;;;;;;;;:25;13347:10;13333:25;;;;;;;;;;;;;;;;:29;;:37;;;;:::i;:::-;13305:7;:13;13313:4;13305:13;;;;;;;;;;;;;;;:25;13319:10;13305:25;;;;;;;;;;;;;;;:65;;;;13396:24;13413:6;13396:8;:12;13405:2;13396:12;;;;;;;;;;;;;;;;:16;;:24;;;;:::i;:::-;13381:8;:12;13390:2;13381:12;;;;;;;;;;;;;;;:39;;;;13446:2;13431:26;;13440:4;13431:26;;;13450:6;13431:26;;;;;;;;;;;;;;;;;;13475:4;13468:11;;13149:338;;;;;:::o;4312:21::-;;;;:::o;3619:::-;;;;;;;;;;;;;:::o;10161:92::-;10213:4;10235:12;;10228:19;;10161:92;:::o;3647:24::-;;;;:::o;10367:257::-;10419:4;10569:46;10604:9;;10601:1;:12;10584:8;;;;;;;;;;;10579:14;;10575:2;:18;10570:2;:23;10569:30;;:46;;;;:::i;:::-;10562:53;;10367:257;:::o;9844:103::-;9899:7;9925:15;;9918:22;;9844:103;:::o;4339:27::-;;;;:::o;4559:24::-;;;;:::o;4374:27::-;;;;;;;;;;;;;:::o;11156:124::-;11220:12;11252:8;:20;11261:10;11252:20;;;;;;;;;;;;;;;;11245:27;;11156:124;;;:::o;3022:191::-;3089:8;;;;;;;;;;;3075:22;;:10;:22;;;3067:31;;;;;;;;3137:8;;;;;;;;;;;3109:37;;3130:5;;;;;;;;;;;3109:37;;;;;;;;;;;;3165:8;;;;;;;;;;;3157:5;;:16;;;;;;;;;;;;;;;;;;3203:1;3184:8;;:21;;;;;;;;;;;;;;;;;;3022:191::o;7902:484::-;8033:12;8060:15;8104:18;8155:14;8078;8060:32;;8125:17;:15;:17::i;:::-;8104:38;;8182:16;8199:10;8210:5;8172:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8155:61;;8304:12;;8294:6;8286:15;;;:30;8283:43;;;8318:8;;;8283:43;8357:16;8347:26;;;:6;:26;;;;8339:35;;7902:484;;;;;;;;;:::o;3832:22::-;;;;:::o;4070:37::-;;;;:::o;4115:24::-;;;;:::o;4222:30::-;;;;:::o;2625:20::-;;;;;;;;;;;;;:::o;3566:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7662:232::-;7768:18;7799:14;7826:16;7843:10;7854:5;7816:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7799:61;;7878:6;7871:13;;7662:232;;;;;;:::o;11629:262::-;11688:12;11736:32;11761:6;11736:8;:20;11745:10;11736:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;11713:8;:20;11722:10;11713:20;;;;;;;;;;;;;;;:55;;;;11794:24;11811:6;11794:8;:12;11803:2;11794:12;;;;;;;;;;;;;;;;:16;;:24;;;;:::i;:::-;11779:8;:12;11788:2;11779:12;;;;;;;;;;;;;;;:39;;;;11850:2;11829:32;;11838:10;11829:32;;;11854:6;11829:32;;;;;;;;;;;;;;;;;;11879:4;11872:11;;11629:262;;;;:::o;3888:42::-;;;;:::o;4407:28::-;;;;:::o;14290:312::-;14372:12;14428:6;14397:7;:19;14405:10;14397:19;;;;;;;;;;;;;;;:28;14417:7;14397:28;;;;;;;;;;;;;;;:37;;;;14466:7;14445:37;;14454:10;14445:37;;;14475:6;14445:37;;;;;;;;;;;;;;;;;;14516:7;14493:47;;;14541:10;14553:6;14561:4;14567;14493:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14590:4:0;14583:11;;14290:312;;;;;:::o;3782:41::-;;;;:::o;2652:23::-;;;;;;;;;;;;;:::o;15087:184::-;15179:12;2881:5;;;;;;;;;;;2867:19;;:10;:19;;;2859:28;;;;;;;;15226:12;15211:37;;;15249:5;;;;;;;;;;;15256:6;15211:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15204:59;;15087:184;;;;:::o;4006:35::-;;;;:::o;13773:151::-;13854:14;13888:7;:19;13896:10;13888:19;;;;;;;;;;;;;;;:28;13908:7;13888:28;;;;;;;;;;;;;;;;13881:35;;13773:151;;;;:::o;2914:102::-;2881:5;;;;;;;;;;;2867:19;;:10;:19;;;2859:28;;;;;;;;2999:9;2988:8;;:20;;;;;;;;;;;;;;;;;;2914:102;:::o;916:113::-;968:6;999:1;995;:5;987:14;;;;;;;;1020:1;1016;:5;;;;;;;;1012:9;;916:113;;;;:::o;542:114::-;594:6;621:1;617;:5;613:9;;646:1;641;:6;;633:15;;;;;;;;542:114;;;;:::o;5502:821::-;5646:15;;5630:12;;:31;;:49;;;;;5677:2;5665:9;;:14;5630:49;5627:152;;;5769:1;5757:9;;:13;5745:9;:25;;;;5627:152;5884:37;5918:1;5906:9;;:13;5902:1;:18;5884:12;;:16;;:37;;;;:::i;:::-;5869:12;;:52;5851:15;:70;;;;6096:1;6081:12;:16;6065:33;6047:15;:51;;;;;;;6121:17;6136:1;6121:10;;:14;;:17;;;;:::i;:::-;6108:10;:30;;;;6265:1;6237:24;;6224:10;;:37;;;;;;;;:42;6221:93;;;6284:21;:19;:21::i;:::-;6221:93;5502:821::o;662:114::-;714:6;746:1;741;:6;;733:15;;;;;;;;767:1;763;:5;759:9;;662:114;;;;:::o;6547:1108::-;6599:39;6857:16;6917:28;6656:29;;6641:12;:44;6599:86;;6876:24;;6857:43;;6962:2;6948:11;:16;6917:47;;7127:23;7090:34;:60;7086:285;;;7215:38;7232:20;7249:2;7232:12;;:16;;:20;;;;:::i;:::-;7215:12;;:16;;:38;;;;:::i;:::-;7200:12;:53;;;;7086:285;;;7322:38;7339:20;7356:2;7339:12;;:16;;:20;;;;:::i;:::-;7322:12;;:16;;:38;;;;:::i;:::-;7307:12;:53;;;;7086:285;7415:12;7383:29;:44;;;;7456:15;;7441:12;;:30;7438:100;;;7512:15;;7497:12;:30;;;;7438:100;7566:15;;7551:12;;:30;7548:101;;;7623:15;;7608:12;:30;;;;7548:101;6547:1108;;;:::o","source":"pragma solidity ^0.4.18;\n\n\n// ----------------------------------------------------------------------------\n\n// '0xBitcoin Token' contract\n\n//\n\n// Symbol      : 0xBTC\n\n// Name        : 0xBitcoin Token\n\n// Total supply: 21,000,000.00\n\n// Decimals    : 8\n\n//\n\n\n// ----------------------------------------------------------------------------\n\n\n\n// ----------------------------------------------------------------------------\n\n// Safe maths\n\n// ----------------------------------------------------------------------------\n\nlibrary SafeMath {\n\n    function add(uint a, uint b) internal pure returns (uint c) {\n\n        c = a + b;\n\n        require(c >= a);\n\n    }\n\n    function sub(uint a, uint b) internal pure returns (uint c) {\n\n        require(b <= a);\n\n        c = a - b;\n\n    }\n\n    function mul(uint a, uint b) internal pure returns (uint c) {\n\n        c = a * b;\n\n        require(a == 0 || c / a == b);\n\n    }\n\n    function div(uint a, uint b) internal pure returns (uint c) {\n\n        require(b > 0);\n\n        c = a / b;\n\n    }\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// ERC Token Standard #20 Interface\n\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n// ----------------------------------------------------------------------------\n\ncontract ERC20Interface {\n\n    function totalSupply() public constant returns (uint);\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n\n    function transfer(address to, uint tokens) public returns (bool success);\n\n    function approve(address spender, uint tokens) public returns (bool success);\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Contract function to receive approval and execute function in one call\n\n//\n\n// Borrowed from MiniMeToken\n\n// ----------------------------------------------------------------------------\n\ncontract ApproveAndCallFallBack {\n\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Owned contract\n\n// ----------------------------------------------------------------------------\n\ncontract Owned {\n\n    address public owner;\n\n    address public newOwner;\n\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n\n    function Owned() public {\n\n        owner = msg.sender;\n\n    }\n\n\n    modifier onlyOwner {\n\n        require(msg.sender == owner);\n\n        _;\n\n    }\n\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n\n        newOwner = _newOwner;\n\n    }\n\n    function acceptOwnership() public {\n\n        require(msg.sender == newOwner);\n\n        OwnershipTransferred(owner, newOwner);\n\n        owner = newOwner;\n\n        newOwner = address(0);\n\n    }\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// ERC20 Token, with the addition of symbol, name and decimals and an\n\n// initial fixed supply\n\n// ----------------------------------------------------------------------------\n\ncontract _0xBitcoinToken is ERC20Interface, Owned {\n\n    using SafeMath for uint;\n\n\n    string public symbol;\n\n    string public  name;\n\n    uint8 public decimals;\n\n    uint public _totalSupply;\n\n\n\n      //ethereum block number when last 0xbtc was minted\n  //  uint public latestMiningEpochStarted;\n\n    uint public latestDifficultyPeriodStarted;\n\n\n\n    uint public epochCount;//number of 'blocks' mined\n\n\n    uint public _BLOCKS_PER_READJUSTMENT = 256;\n\n\n    //a big number is easier ; just find a solution that is smaller\n    uint public  _MINIMUM_TARGET = 2**8;\n\n    //a little number\n    uint public  _MAXIMUM_TARGET = 2**250;\n\n\n    uint public miningTarget;\n  //  uint public miningDifficulty; //adjusts every 2016 epochs (or blocks)\n\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\n\n\n\n    uint public rewardEra;\n    uint public maxSupplyForEra;\n\n\n    address public lastRewardTo;\n    uint public lastRewardAmount;\n    uint public lastRewardEthBlockNumber;\n\n\n    mapping(bytes32 => uint) rewardHashesFound; //the hash and the nonce\n\n    uint public tokensMinted;\n\n    mapping(address => uint) balances;\n\n\n\n\n\n    mapping(address => mapping(address => uint)) allowed;\n\n\n\n\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n\n    // ------------------------------------------------------------------------\n\n    // Constructor\n\n    // ------------------------------------------------------------------------\n\n    function _0xBitcoinToken() public onlyOwner{\n\n        symbol = \"0xBTC\";\n\n        name = \"0xBitcoin Token\";\n\n        decimals = 8;\n\n        _totalSupply = 21000000 * 10**uint(decimals);\n        tokensMinted = 0;\n\n        rewardEra = 0;\n        maxSupplyForEra = _totalSupply.div(2);\n\n        miningTarget = _MAXIMUM_TARGET;\n\n        latestDifficultyPeriodStarted = block.number;\n\n        _startNewMiningEpoch();\n\n        //balances[owner] = _totalSupply;\n\n        //Transfer(address(0), owner, _totalSupply);\n\n    }\n\n    function _startNewMiningEpoch() internal {//a new block to be mined\n\n      //latestMiningEpochStarted = block.number;\n\n      if(tokensMinted >= maxSupplyForEra && rewardEra < 32) //32 is the final era, almost all tokens minted\n      {\n        rewardEra = rewardEra + 1;\n      }\n\n      //set the next minted supply at which the era will change\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\n      challengeNumber = block.blockhash(block.number - 1);\n\n\n      epochCount = epochCount.add(1);\n\n      //every so often, readjust difficulty, dont readjust when deploying\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\n      {\n        _reAdjustDifficulty();\n      }\n\n\n\n    }\n\n\n\n\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\n\n    //readjust the target by 5 percent\n    function _reAdjustDifficulty() internal {\n\n\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\n\n        //assume 360 ethereum blocks per hour\n\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\n\n        uint targetEthBlocksPerEpoch = epochsMined * 60; //should be 60 times slower than ethereum\n\n        //if there were less eth blocks passed in time than expected\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerEpoch )\n        {\n          //make it harder\n          miningTarget = miningTarget.sub(miningTarget.div(20));\n        }else{\n          //make it easier\n          miningTarget = miningTarget.add(miningTarget.div(20));\n        }\n\n\n\n        latestDifficultyPeriodStarted = block.number;\n\n        if(miningTarget < _MINIMUM_TARGET) //6\n        {\n          miningTarget = _MINIMUM_TARGET;\n        }\n\n        if(miningTarget > _MAXIMUM_TARGET) //54\n        {\n          miningTarget = _MAXIMUM_TARGET;\n        }\n    }\n\n\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public returns (bytes32 digesttest) {\n\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n        return digest;\n\n      }\n\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testDifficulty) public returns (bool success) {\n\n          uint difficulty = testDifficulty;\n          uint reward_amount = getMiningReward();\n\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n          //bytes memory characters = bytes(digest);\n\n          if(uint256(digest) > miningTarget) revert();\n\n          return (digest == challenge_digest);\n\n        }\n\n\n    function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n\n      //  uint difficulty = getMiningDifficulty();\n        uint reward_amount = getMiningReward();\n\n        //the PoW must contain work that includes a recent etherum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\n        bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\n\n        //the challenge digest must match the expected\n        if (digest != challenge_digest) revert();\n\n        //the digest must be smaller than the target\n        if(uint256(digest) > miningTarget) revert();\n      //  for(uint i = 0; i < difficulty    ; i++) {\n      //     if (digest[i] != 0x0 ) revert();\n      //  }\n\n         uint hashFound = rewardHashesFound[digest];\n         rewardHashesFound[digest] = epochCount;\n         if(hashFound != 0) revert();  //prevent the same answer from awarding twice\n\n\n\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\n\n\n        tokensMinted = tokensMinted.add(reward_amount);\n\n\n        //set readonly diagnostics data\n        lastRewardTo = msg.sender;\n        lastRewardAmount = reward_amount;\n        lastRewardEthBlockNumber = block.number;\n\n\n         _startNewMiningEpoch();\n\n          Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n\n       return true;\n\n    }\n\n    //this is a recent ethreum block hash, used to prevent pre-mining future blocks\n    function getChallengeNumber() public constant returns (bytes32) {\n        return challengeNumber;\n    }\n\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n     function getMiningDifficulty() public constant returns (uint) {\n        return _MAXIMUM_TARGET.div(miningTarget);\n    }\n\n    function getMiningTarget() public constant returns (uint) {\n       return miningTarget;\n   }\n\n\n\n    //21m coins total\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\n    function getMiningReward() public constant returns (uint) {\n        //once we get half way thru the coins, only get 25 per block\n\n         //every reward era, the reward amount halves.\n\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Total supply\n\n    // ------------------------------------------------------------------------\n\n    function totalSupply() public constant returns (uint) {\n\n        return _totalSupply  - balances[address(0)];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Get the token balance for account `tokenOwner`\n\n    // ------------------------------------------------------------------------\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n\n        return balances[tokenOwner];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer the balance from token owner's account to `to` account\n\n    // - Owner's account must have sufficient balance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transfer(address to, uint tokens) public returns (bool success) {\n\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(msg.sender, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account\n\n    //\n\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n    // recommends that there are no checks for the approval double-spend attack\n\n    // as this should be implemented in user interfaces\n\n    // ------------------------------------------------------------------------\n\n    function approve(address spender, uint tokens) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer `tokens` from the `from` account to the `to` account\n\n    //\n\n    // The calling account must already have sufficient tokens approve(...)-d\n\n    // for spending from the `from` account and\n\n    // - From account must have sufficient balance to transfer\n\n    // - Spender must have sufficient allowance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n\n        balances[from] = balances[from].sub(tokens);\n\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(from, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Returns the amount of tokens approved by the owner that can be\n\n    // transferred to the spender's account\n\n    // ------------------------------------------------------------------------\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n\n        return allowed[tokenOwner][spender];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account. The `spender` contract function\n\n    // `receiveApproval(...)` is then executed\n\n    // ------------------------------------------------------------------------\n\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Don't accept ETH\n\n    // ------------------------------------------------------------------------\n\n    function () public payable {\n\n        revert();\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Owner can transfer out any accidentally sent ERC20 tokens\n\n    // ------------------------------------------------------------------------\n\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n\n    }\n\n}\n","sourcePath":"/home/andy/dev/0xbitcoin-token/contracts/_0xBitcoinToken.sol","ast":{"attributes":{"absolutePath":"/home/andy/dev/0xbitcoin-token/contracts/_0xBitcoinToken.sol","exportedSymbols":{"ApproveAndCallFallBack":[175],"ERC20Interface":[163],"Owned":[244],"SafeMath":[96],"_0xBitcoinToken":[964]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".18"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[96],"name":"SafeMath","scope":965},"children":[{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":23,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"555:4:0"}],"id":3,"name":"VariableDeclaration","src":"555:6:0"},{"attributes":{"constant":false,"name":"b","scope":23,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"563:4:0"}],"id":5,"name":"VariableDeclaration","src":"563:6:0"}],"id":6,"name":"ParameterList","src":"554:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":23,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"594:4:0"}],"id":8,"name":"VariableDeclaration","src":"594:6:0"}],"id":9,"name":"ParameterList","src":"593:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"c"},"id":10,"name":"Identifier","src":"613:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":11,"name":"Identifier","src":"617:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"uint256","value":"b"},"id":12,"name":"Identifier","src":"621:1:0"}],"id":13,"name":"BinaryOperation","src":"617:5:0"}],"id":14,"name":"Assignment","src":"613:9:0"}],"id":15,"name":"ExpressionStatement","src":"613:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":16,"name":"Identifier","src":"633:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"c"},"id":17,"name":"Identifier","src":"641:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":18,"name":"Identifier","src":"646:1:0"}],"id":19,"name":"BinaryOperation","src":"641:6:0"}],"id":20,"name":"FunctionCall","src":"633:15:0"}],"id":21,"name":"ExpressionStatement","src":"633:15:0"}],"id":22,"name":"Block","src":"602:54:0"}],"id":23,"name":"FunctionDefinition","src":"542:114:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":24,"name":"ElementaryTypeName","src":"675:4:0"}],"id":25,"name":"VariableDeclaration","src":"675:6:0"},{"attributes":{"constant":false,"name":"b","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":26,"name":"ElementaryTypeName","src":"683:4:0"}],"id":27,"name":"VariableDeclaration","src":"683:6:0"}],"id":28,"name":"ParameterList","src":"674:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":29,"name":"ElementaryTypeName","src":"714:4:0"}],"id":30,"name":"VariableDeclaration","src":"714:6:0"}],"id":31,"name":"ParameterList","src":"713:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":32,"name":"Identifier","src":"733:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"uint256","value":"b"},"id":33,"name":"Identifier","src":"741:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"a"},"id":34,"name":"Identifier","src":"746:1:0"}],"id":35,"name":"BinaryOperation","src":"741:6:0"}],"id":36,"name":"FunctionCall","src":"733:15:0"}],"id":37,"name":"ExpressionStatement","src":"733:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"uint256","value":"c"},"id":38,"name":"Identifier","src":"759:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"a"},"id":39,"name":"Identifier","src":"763:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"uint256","value":"b"},"id":40,"name":"Identifier","src":"767:1:0"}],"id":41,"name":"BinaryOperation","src":"763:5:0"}],"id":42,"name":"Assignment","src":"759:9:0"}],"id":43,"name":"ExpressionStatement","src":"759:9:0"}],"id":44,"name":"Block","src":"722:54:0"}],"id":45,"name":"FunctionDefinition","src":"662:114:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mul","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":73,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":46,"name":"ElementaryTypeName","src":"795:4:0"}],"id":47,"name":"VariableDeclaration","src":"795:6:0"},{"attributes":{"constant":false,"name":"b","scope":73,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":48,"name":"ElementaryTypeName","src":"803:4:0"}],"id":49,"name":"VariableDeclaration","src":"803:6:0"}],"id":50,"name":"ParameterList","src":"794:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":73,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":51,"name":"ElementaryTypeName","src":"834:4:0"}],"id":52,"name":"VariableDeclaration","src":"834:6:0"}],"id":53,"name":"ParameterList","src":"833:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"uint256","value":"c"},"id":54,"name":"Identifier","src":"853:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":47,"type":"uint256","value":"a"},"id":55,"name":"Identifier","src":"857:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":49,"type":"uint256","value":"b"},"id":56,"name":"Identifier","src":"861:1:0"}],"id":57,"name":"BinaryOperation","src":"857:5:0"}],"id":58,"name":"Assignment","src":"853:9:0"}],"id":59,"name":"ExpressionStatement","src":"853:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":60,"name":"Identifier","src":"873:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":47,"type":"uint256","value":"a"},"id":61,"name":"Identifier","src":"881:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":62,"name":"Literal","src":"886:1:0"}],"id":63,"name":"BinaryOperation","src":"881:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"uint256","value":"c"},"id":64,"name":"Identifier","src":"891:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":47,"type":"uint256","value":"a"},"id":65,"name":"Identifier","src":"895:1:0"}],"id":66,"name":"BinaryOperation","src":"891:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":49,"type":"uint256","value":"b"},"id":67,"name":"Identifier","src":"900:1:0"}],"id":68,"name":"BinaryOperation","src":"891:10:0"}],"id":69,"name":"BinaryOperation","src":"881:20:0"}],"id":70,"name":"FunctionCall","src":"873:29:0"}],"id":71,"name":"ExpressionStatement","src":"873:29:0"}],"id":72,"name":"Block","src":"842:68:0"}],"id":73,"name":"FunctionDefinition","src":"782:128:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"div","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":95,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":74,"name":"ElementaryTypeName","src":"929:4:0"}],"id":75,"name":"VariableDeclaration","src":"929:6:0"},{"attributes":{"constant":false,"name":"b","scope":95,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":76,"name":"ElementaryTypeName","src":"937:4:0"}],"id":77,"name":"VariableDeclaration","src":"937:6:0"}],"id":78,"name":"ParameterList","src":"928:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":95,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":79,"name":"ElementaryTypeName","src":"968:4:0"}],"id":80,"name":"VariableDeclaration","src":"968:6:0"}],"id":81,"name":"ParameterList","src":"967:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":82,"name":"Identifier","src":"987:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"b"},"id":83,"name":"Identifier","src":"995:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":84,"name":"Literal","src":"999:1:0"}],"id":85,"name":"BinaryOperation","src":"995:5:0"}],"id":86,"name":"FunctionCall","src":"987:14:0"}],"id":87,"name":"ExpressionStatement","src":"987:14:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":80,"type":"uint256","value":"c"},"id":88,"name":"Identifier","src":"1012:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"a"},"id":89,"name":"Identifier","src":"1016:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"b"},"id":90,"name":"Identifier","src":"1020:1:0"}],"id":91,"name":"BinaryOperation","src":"1016:5:0"}],"id":92,"name":"Assignment","src":"1012:9:0"}],"id":93,"name":"ExpressionStatement","src":"1012:9:0"}],"id":94,"name":"Block","src":"976:53:0"}],"id":95,"name":"FunctionDefinition","src":"916:113:0"}],"id":96,"name":"ContractDefinition","src":"518:514:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[163],"name":"ERC20Interface","scope":965},"children":[{"attributes":{"body":null,"constant":true,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":97,"name":"ParameterList","src":"1365:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":101,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":98,"name":"ElementaryTypeName","src":"1393:4:0"}],"id":99,"name":"VariableDeclaration","src":"1393:4:0"}],"id":100,"name":"ParameterList","src":"1392:6:0"}],"id":101,"name":"FunctionDefinition","src":"1345:54:0"},{"attributes":{"body":null,"constant":true,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":108,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":102,"name":"ElementaryTypeName","src":"1424:7:0"}],"id":103,"name":"VariableDeclaration","src":"1424:18:0"}],"id":104,"name":"ParameterList","src":"1423:20:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":108,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":105,"name":"ElementaryTypeName","src":"1469:4:0"}],"id":106,"name":"VariableDeclaration","src":"1469:12:0"}],"id":107,"name":"ParameterList","src":"1468:14:0"}],"id":108,"name":"FunctionDefinition","src":"1405:78:0"},{"attributes":{"body":null,"constant":true,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":117,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":109,"name":"ElementaryTypeName","src":"1508:7:0"}],"id":110,"name":"VariableDeclaration","src":"1508:18:0"},{"attributes":{"constant":false,"name":"spender","scope":117,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":111,"name":"ElementaryTypeName","src":"1528:7:0"}],"id":112,"name":"VariableDeclaration","src":"1528:15:0"}],"id":113,"name":"ParameterList","src":"1507:37:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":117,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":114,"name":"ElementaryTypeName","src":"1570:4:0"}],"id":115,"name":"VariableDeclaration","src":"1570:14:0"}],"id":116,"name":"ParameterList","src":"1569:16:0"}],"id":117,"name":"FunctionDefinition","src":"1489:97:0"},{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":163,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":126,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":118,"name":"ElementaryTypeName","src":"1610:7:0"}],"id":119,"name":"VariableDeclaration","src":"1610:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":126,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":120,"name":"ElementaryTypeName","src":"1622:4:0"}],"id":121,"name":"VariableDeclaration","src":"1622:11:0"}],"id":122,"name":"ParameterList","src":"1609:25:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":126,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":123,"name":"ElementaryTypeName","src":"1651:4:0"}],"id":124,"name":"VariableDeclaration","src":"1651:12:0"}],"id":125,"name":"ParameterList","src":"1650:14:0"}],"id":126,"name":"FunctionDefinition","src":"1592:73:0"},{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":163,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":135,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":127,"name":"ElementaryTypeName","src":"1688:7:0"}],"id":128,"name":"VariableDeclaration","src":"1688:15:0"},{"attributes":{"constant":false,"name":"tokens","scope":135,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":129,"name":"ElementaryTypeName","src":"1705:4:0"}],"id":130,"name":"VariableDeclaration","src":"1705:11:0"}],"id":131,"name":"ParameterList","src":"1687:30:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":135,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":132,"name":"ElementaryTypeName","src":"1734:4:0"}],"id":133,"name":"VariableDeclaration","src":"1734:12:0"}],"id":134,"name":"ParameterList","src":"1733:14:0"}],"id":135,"name":"FunctionDefinition","src":"1671:77:0"},{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":163,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":146,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":136,"name":"ElementaryTypeName","src":"1776:7:0"}],"id":137,"name":"VariableDeclaration","src":"1776:12:0"},{"attributes":{"constant":false,"name":"to","scope":146,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":138,"name":"ElementaryTypeName","src":"1790:7:0"}],"id":139,"name":"VariableDeclaration","src":"1790:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":146,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":140,"name":"ElementaryTypeName","src":"1802:4:0"}],"id":141,"name":"VariableDeclaration","src":"1802:11:0"}],"id":142,"name":"ParameterList","src":"1775:39:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":146,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":143,"name":"ElementaryTypeName","src":"1831:4:0"}],"id":144,"name":"VariableDeclaration","src":"1831:12:0"}],"id":145,"name":"ParameterList","src":"1830:14:0"}],"id":146,"name":"FunctionDefinition","src":"1754:91:0"},{"attributes":{"anonymous":false,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":154,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":147,"name":"ElementaryTypeName","src":"1867:7:0"}],"id":148,"name":"VariableDeclaration","src":"1867:20:0"},{"attributes":{"constant":false,"indexed":true,"name":"to","scope":154,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":149,"name":"ElementaryTypeName","src":"1889:7:0"}],"id":150,"name":"VariableDeclaration","src":"1889:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"tokens","scope":154,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":151,"name":"ElementaryTypeName","src":"1909:4:0"}],"id":152,"name":"VariableDeclaration","src":"1909:11:0"}],"id":153,"name":"ParameterList","src":"1866:55:0"}],"id":154,"name":"EventDefinition","src":"1852:70:0"},{"attributes":{"anonymous":false,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"tokenOwner","scope":162,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":155,"name":"ElementaryTypeName","src":"1943:7:0"}],"id":156,"name":"VariableDeclaration","src":"1943:26:0"},{"attributes":{"constant":false,"indexed":true,"name":"spender","scope":162,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":157,"name":"ElementaryTypeName","src":"1971:7:0"}],"id":158,"name":"VariableDeclaration","src":"1971:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"tokens","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":159,"name":"ElementaryTypeName","src":"1996:4:0"}],"id":160,"name":"VariableDeclaration","src":"1996:11:0"}],"id":161,"name":"ParameterList","src":"1942:66:0"}],"id":162,"name":"EventDefinition","src":"1928:81:0"}],"id":163,"name":"ContractDefinition","src":"1314:698:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[175],"name":"ApproveAndCallFallBack","scope":965},"children":[{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"receiveApproval","payable":false,"scope":175,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":174,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":164,"name":"ElementaryTypeName","src":"2351:7:0"}],"id":165,"name":"VariableDeclaration","src":"2351:12:0"},{"attributes":{"constant":false,"name":"tokens","scope":174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":166,"name":"ElementaryTypeName","src":"2365:7:0"}],"id":167,"name":"VariableDeclaration","src":"2365:14:0"},{"attributes":{"constant":false,"name":"token","scope":174,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":168,"name":"ElementaryTypeName","src":"2381:7:0"}],"id":169,"name":"VariableDeclaration","src":"2381:13:0"},{"attributes":{"constant":false,"name":"data","scope":174,"stateVariable":false,"storageLocation":"default","type":"bytes memory","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes storage pointer"},"id":170,"name":"ElementaryTypeName","src":"2396:5:0"}],"id":171,"name":"VariableDeclaration","src":"2396:10:0"}],"id":172,"name":"ParameterList","src":"2350:57:0"},{"attributes":{"parameters":[null]},"children":[],"id":173,"name":"ParameterList","src":"2414:0:0"}],"id":174,"name":"FunctionDefinition","src":"2326:89:0"}],"id":175,"name":"ContractDefinition","src":"2287:131:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[244],"name":"Owned","scope":965},"children":[{"attributes":{"constant":false,"name":"owner","scope":244,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":176,"name":"ElementaryTypeName","src":"2625:7:0"}],"id":177,"name":"VariableDeclaration","src":"2625:20:0"},{"attributes":{"constant":false,"name":"newOwner","scope":244,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":178,"name":"ElementaryTypeName","src":"2652:7:0"}],"id":179,"name":"VariableDeclaration","src":"2652:23:0"},{"attributes":{"anonymous":false,"name":"OwnershipTransferred"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_from","scope":185,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":180,"name":"ElementaryTypeName","src":"2710:7:0"}],"id":181,"name":"VariableDeclaration","src":"2710:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"_to","scope":185,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":182,"name":"ElementaryTypeName","src":"2733:7:0"}],"id":183,"name":"VariableDeclaration","src":"2733:19:0"}],"id":184,"name":"ParameterList","src":"2709:44:0"}],"id":185,"name":"EventDefinition","src":"2683:71:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"Owned","payable":false,"scope":244,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":186,"name":"ParameterList","src":"2775:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":187,"name":"ParameterList","src":"2785:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":188,"name":"Identifier","src":"2796:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":189,"name":"Identifier","src":"2804:3:0"}],"id":190,"name":"MemberAccess","src":"2804:10:0"}],"id":191,"name":"Assignment","src":"2796:18:0"}],"id":192,"name":"ExpressionStatement","src":"2796:18:0"}],"id":193,"name":"Block","src":"2785:37:0"}],"id":194,"name":"FunctionDefinition","src":"2761:61:0"},{"attributes":{"name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":195,"name":"ParameterList","src":"2848:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":196,"name":"Identifier","src":"2859:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":197,"name":"Identifier","src":"2867:3:0"}],"id":198,"name":"MemberAccess","src":"2867:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":199,"name":"Identifier","src":"2881:5:0"}],"id":200,"name":"BinaryOperation","src":"2867:19:0"}],"id":201,"name":"FunctionCall","src":"2859:28:0"}],"id":202,"name":"ExpressionStatement","src":"2859:28:0"},{"id":203,"name":"PlaceholderStatement","src":"2898:1:0"}],"id":204,"name":"Block","src":"2848:59:0"}],"id":205,"name":"ModifierDefinition","src":"2829:78:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":244,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":206,"name":"ElementaryTypeName","src":"2941:7:0"}],"id":207,"name":"VariableDeclaration","src":"2941:17:0"}],"id":208,"name":"ParameterList","src":"2940:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":211,"name":"ParameterList","src":"2977:0:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":209,"name":"Identifier","src":"2967:9:0"}],"id":210,"name":"ModifierInvocation","src":"2967:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":212,"name":"Identifier","src":"2988:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":207,"type":"address","value":"_newOwner"},"id":213,"name":"Identifier","src":"2999:9:0"}],"id":214,"name":"Assignment","src":"2988:20:0"}],"id":215,"name":"ExpressionStatement","src":"2988:20:0"}],"id":216,"name":"Block","src":"2977:39:0"}],"id":217,"name":"FunctionDefinition","src":"2914:102:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"acceptOwnership","payable":false,"scope":244,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":218,"name":"ParameterList","src":"3046:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":219,"name":"ParameterList","src":"3056:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":220,"name":"Identifier","src":"3067:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":221,"name":"Identifier","src":"3075:3:0"}],"id":222,"name":"MemberAccess","src":"3075:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":223,"name":"Identifier","src":"3089:8:0"}],"id":224,"name":"BinaryOperation","src":"3075:22:0"}],"id":225,"name":"FunctionCall","src":"3067:31:0"}],"id":226,"name":"ExpressionStatement","src":"3067:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":185,"type":"function (address,address)","value":"OwnershipTransferred"},"id":227,"name":"Identifier","src":"3109:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":228,"name":"Identifier","src":"3130:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":229,"name":"Identifier","src":"3137:8:0"}],"id":230,"name":"FunctionCall","src":"3109:37:0"}],"id":231,"name":"ExpressionStatement","src":"3109:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":232,"name":"Identifier","src":"3157:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":233,"name":"Identifier","src":"3165:8:0"}],"id":234,"name":"Assignment","src":"3157:16:0"}],"id":235,"name":"ExpressionStatement","src":"3157:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":236,"name":"Identifier","src":"3184:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":237,"name":"ElementaryTypeNameExpression","src":"3195:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":238,"name":"Literal","src":"3203:1:0"}],"id":239,"name":"FunctionCall","src":"3195:10:0"}],"id":240,"name":"Assignment","src":"3184:21:0"}],"id":241,"name":"ExpressionStatement","src":"3184:21:0"}],"id":242,"name":"Block","src":"3056:157:0"}],"id":243,"name":"FunctionDefinition","src":"3022:191:0"}],"id":244,"name":"ContractDefinition","src":"2603:613:0"},{"attributes":{"contractDependencies":[163,244],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[964,244,163],"name":"_0xBitcoinToken","scope":965},"children":[{"attributes":{"arguments":[null]},"children":[{"attributes":{"contractScope":null,"name":"ERC20Interface","referencedDeclaration":163,"type":"contract ERC20Interface"},"id":245,"name":"UserDefinedTypeName","src":"3506:14:0"}],"id":246,"name":"InheritanceSpecifier","src":"3506:14:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"contractScope":null,"name":"Owned","referencedDeclaration":244,"type":"contract Owned"},"id":247,"name":"UserDefinedTypeName","src":"3522:5:0"}],"id":248,"name":"InheritanceSpecifier","src":"3522:5:0"},{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":96,"type":"library SafeMath"},"id":249,"name":"UserDefinedTypeName","src":"3541:8:0"},{"attributes":{"name":"uint","type":"uint256"},"id":250,"name":"ElementaryTypeName","src":"3554:4:0"}],"id":251,"name":"UsingForDirective","src":"3535:24:0"},{"attributes":{"constant":false,"name":"symbol","scope":964,"stateVariable":true,"storageLocation":"default","type":"string storage ref","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string storage pointer"},"id":252,"name":"ElementaryTypeName","src":"3566:6:0"}],"id":253,"name":"VariableDeclaration","src":"3566:20:0"},{"attributes":{"constant":false,"name":"name","scope":964,"stateVariable":true,"storageLocation":"default","type":"string storage ref","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string storage pointer"},"id":254,"name":"ElementaryTypeName","src":"3593:6:0"}],"id":255,"name":"VariableDeclaration","src":"3593:19:0"},{"attributes":{"constant":false,"name":"decimals","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint8","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":256,"name":"ElementaryTypeName","src":"3619:5:0"}],"id":257,"name":"VariableDeclaration","src":"3619:21:0"},{"attributes":{"constant":false,"name":"_totalSupply","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":258,"name":"ElementaryTypeName","src":"3647:4:0"}],"id":259,"name":"VariableDeclaration","src":"3647:24:0"},{"attributes":{"constant":false,"name":"latestDifficultyPeriodStarted","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":260,"name":"ElementaryTypeName","src":"3782:4:0"}],"id":261,"name":"VariableDeclaration","src":"3782:41:0"},{"attributes":{"constant":false,"name":"epochCount","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":262,"name":"ElementaryTypeName","src":"3832:4:0"}],"id":263,"name":"VariableDeclaration","src":"3832:22:0"},{"attributes":{"constant":false,"name":"_BLOCKS_PER_READJUSTMENT","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":264,"name":"ElementaryTypeName","src":"3888:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"323536","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 256","value":"256"},"id":265,"name":"Literal","src":"3927:3:0"}],"id":266,"name":"VariableDeclaration","src":"3888:42:0"},{"attributes":{"constant":false,"name":"_MINIMUM_TARGET","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":267,"name":"ElementaryTypeName","src":"4006:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":268,"name":"Literal","src":"4037:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":269,"name":"Literal","src":"4040:1:0"}],"id":270,"name":"BinaryOperation","src":"4037:4:0"}],"id":271,"name":"VariableDeclaration","src":"4006:35:0"},{"attributes":{"constant":false,"name":"_MAXIMUM_TARGET","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":272,"name":"ElementaryTypeName","src":"4070:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1","typeString":"int_const 1809251394333065553493296640760748560207343510400633813116524750123642650624"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1809251394333065553493296640760748560207343510400633813116524750123642650624"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":273,"name":"Literal","src":"4101:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"323530","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 250","value":"250"},"id":274,"name":"Literal","src":"4104:3:0"}],"id":275,"name":"BinaryOperation","src":"4101:6:0"}],"id":276,"name":"VariableDeclaration","src":"4070:37:0"},{"attributes":{"constant":false,"name":"miningTarget","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":277,"name":"ElementaryTypeName","src":"4115:4:0"}],"id":278,"name":"VariableDeclaration","src":"4115:24:0"},{"attributes":{"constant":false,"name":"challengeNumber","scope":964,"stateVariable":true,"storageLocation":"default","type":"bytes32","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":279,"name":"ElementaryTypeName","src":"4222:7:0"}],"id":280,"name":"VariableDeclaration","src":"4222:30:0"},{"attributes":{"constant":false,"name":"rewardEra","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":281,"name":"ElementaryTypeName","src":"4312:4:0"}],"id":282,"name":"VariableDeclaration","src":"4312:21:0"},{"attributes":{"constant":false,"name":"maxSupplyForEra","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":283,"name":"ElementaryTypeName","src":"4339:4:0"}],"id":284,"name":"VariableDeclaration","src":"4339:27:0"},{"attributes":{"constant":false,"name":"lastRewardTo","scope":964,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":285,"name":"ElementaryTypeName","src":"4374:7:0"}],"id":286,"name":"VariableDeclaration","src":"4374:27:0"},{"attributes":{"constant":false,"name":"lastRewardAmount","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":287,"name":"ElementaryTypeName","src":"4407:4:0"}],"id":288,"name":"VariableDeclaration","src":"4407:28:0"},{"attributes":{"constant":false,"name":"lastRewardEthBlockNumber","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":289,"name":"ElementaryTypeName","src":"4441:4:0"}],"id":290,"name":"VariableDeclaration","src":"4441:36:0"},{"attributes":{"constant":false,"name":"rewardHashesFound","scope":964,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(bytes32 => uint256)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":291,"name":"ElementaryTypeName","src":"4493:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":292,"name":"ElementaryTypeName","src":"4504:4:0"}],"id":293,"name":"Mapping","src":"4485:24:0"}],"id":294,"name":"VariableDeclaration","src":"4485:42:0"},{"attributes":{"constant":false,"name":"tokensMinted","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":295,"name":"ElementaryTypeName","src":"4559:4:0"}],"id":296,"name":"VariableDeclaration","src":"4559:24:0"},{"attributes":{"constant":false,"name":"balances","scope":964,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":297,"name":"ElementaryTypeName","src":"4598:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":298,"name":"ElementaryTypeName","src":"4609:4:0"}],"id":299,"name":"Mapping","src":"4590:24:0"}],"id":300,"name":"VariableDeclaration","src":"4590:33:0"},{"attributes":{"constant":false,"name":"allowed","scope":964,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":301,"name":"ElementaryTypeName","src":"4642:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":302,"name":"ElementaryTypeName","src":"4661:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":303,"name":"ElementaryTypeName","src":"4672:4:0"}],"id":304,"name":"Mapping","src":"4653:24:0"}],"id":305,"name":"Mapping","src":"4634:44:0"}],"id":306,"name":"VariableDeclaration","src":"4634:52:0"},{"attributes":{"anonymous":false,"name":"Mint"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":316,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":307,"name":"ElementaryTypeName","src":"4707:7:0"}],"id":308,"name":"VariableDeclaration","src":"4707:20:0"},{"attributes":{"constant":false,"indexed":false,"name":"reward_amount","scope":316,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":309,"name":"ElementaryTypeName","src":"4729:4:0"}],"id":310,"name":"VariableDeclaration","src":"4729:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"epochCount","scope":316,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":311,"name":"ElementaryTypeName","src":"4749:4:0"}],"id":312,"name":"VariableDeclaration","src":"4749:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"newChallengeNumber","scope":316,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":313,"name":"ElementaryTypeName","src":"4766:7:0"}],"id":314,"name":"VariableDeclaration","src":"4766:26:0"}],"id":315,"name":"ParameterList","src":"4706:87:0"}],"id":316,"name":"EventDefinition","src":"4696:98:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":true,"name":"_0xBitcoinToken","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":317,"name":"ParameterList","src":"5006:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":320,"name":"ParameterList","src":"5025:0:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":318,"name":"Identifier","src":"5016:9:0"}],"id":319,"name":"ModifierInvocation","src":"5016:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":253,"type":"string storage ref","value":"symbol"},"id":321,"name":"Identifier","src":"5036:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3078425443","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"0xBTC\"","value":"0xBTC"},"id":322,"name":"Literal","src":"5045:7:0"}],"id":323,"name":"Assignment","src":"5036:16:0"}],"id":324,"name":"ExpressionStatement","src":"5036:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"string storage ref","value":"name"},"id":325,"name":"Identifier","src":"5063:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3078426974636f696e20546f6b656e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"0xBitcoin Token\"","value":"0xBitcoin Token"},"id":326,"name":"Literal","src":"5070:17:0"}],"id":327,"name":"Assignment","src":"5063:24:0"}],"id":328,"name":"ExpressionStatement","src":"5063:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint8","value":"decimals"},"id":329,"name":"Identifier","src":"5098:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":330,"name":"Literal","src":"5109:1:0"}],"id":331,"name":"Assignment","src":"5098:12:0"}],"id":332,"name":"ExpressionStatement","src":"5098:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":333,"name":"Identifier","src":"5121:12:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3231303030303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21000000","value":"21000000"},"id":334,"name":"Literal","src":"5136:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":335,"name":"Literal","src":"5147:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":336,"name":"ElementaryTypeNameExpression","src":"5151:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint8","value":"decimals"},"id":337,"name":"Identifier","src":"5156:8:0"}],"id":338,"name":"FunctionCall","src":"5151:14:0"}],"id":339,"name":"BinaryOperation","src":"5147:18:0"}],"id":340,"name":"BinaryOperation","src":"5136:29:0"}],"id":341,"name":"Assignment","src":"5121:44:0"}],"id":342,"name":"ExpressionStatement","src":"5121:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":343,"name":"Identifier","src":"5175:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":344,"name":"Literal","src":"5190:1:0"}],"id":345,"name":"Assignment","src":"5175:16:0"}],"id":346,"name":"ExpressionStatement","src":"5175:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":347,"name":"Identifier","src":"5202:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":348,"name":"Literal","src":"5214:1:0"}],"id":349,"name":"Assignment","src":"5202:13:0"}],"id":350,"name":"ExpressionStatement","src":"5202:13:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"uint256","value":"maxSupplyForEra"},"id":351,"name":"Identifier","src":"5225:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":352,"name":"Identifier","src":"5243:12:0"}],"id":353,"name":"MemberAccess","src":"5243:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":354,"name":"Literal","src":"5260:1:0"}],"id":355,"name":"FunctionCall","src":"5243:19:0"}],"id":356,"name":"Assignment","src":"5225:37:0"}],"id":357,"name":"ExpressionStatement","src":"5225:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":358,"name":"Identifier","src":"5273:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":359,"name":"Identifier","src":"5288:15:0"}],"id":360,"name":"Assignment","src":"5273:30:0"}],"id":361,"name":"ExpressionStatement","src":"5273:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":261,"type":"uint256","value":"latestDifficultyPeriodStarted"},"id":362,"name":"Identifier","src":"5314:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":363,"name":"Identifier","src":"5346:5:0"}],"id":364,"name":"MemberAccess","src":"5346:12:0"}],"id":365,"name":"Assignment","src":"5314:44:0"}],"id":366,"name":"ExpressionStatement","src":"5314:44:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"function ()","value":"_startNewMiningEpoch"},"id":367,"name":"Identifier","src":"5369:20:0"}],"id":368,"name":"FunctionCall","src":"5369:22:0"}],"id":369,"name":"ExpressionStatement","src":"5369:22:0"}],"id":370,"name":"Block","src":"5025:471:0"}],"id":371,"name":"FunctionDefinition","src":"4982:514:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"_startNewMiningEpoch","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":372,"name":"ParameterList","src":"5531:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":373,"name":"ParameterList","src":"5543:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":374,"name":"Identifier","src":"5630:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"uint256","value":"maxSupplyForEra"},"id":375,"name":"Identifier","src":"5646:15:0"}],"id":376,"name":"BinaryOperation","src":"5630:31:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":377,"name":"Identifier","src":"5665:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 32","value":"32"},"id":378,"name":"Literal","src":"5677:2:0"}],"id":379,"name":"BinaryOperation","src":"5665:14:0"}],"id":380,"name":"BinaryOperation","src":"5630:49:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":381,"name":"Identifier","src":"5745:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":382,"name":"Identifier","src":"5757:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":383,"name":"Literal","src":"5769:1:0"}],"id":384,"name":"BinaryOperation","src":"5757:13:0"}],"id":385,"name":"Assignment","src":"5745:25:0"}],"id":386,"name":"ExpressionStatement","src":"5745:25:0"}],"id":387,"name":"Block","src":"5735:44:0"}],"id":388,"name":"IfStatement","src":"5627:152:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"uint256","value":"maxSupplyForEra"},"id":389,"name":"Identifier","src":"5851:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":390,"name":"Identifier","src":"5869:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":391,"name":"Identifier","src":"5884:12:0"}],"id":392,"name":"MemberAccess","src":"5884:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":393,"name":"Literal","src":"5902:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":394,"name":"Identifier","src":"5906:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":395,"name":"Literal","src":"5918:1:0"}],"id":396,"name":"BinaryOperation","src":"5906:13:0"}],"id":397,"name":"TupleExpression","src":"5905:15:0"}],"id":398,"name":"BinaryOperation","src":"5902:18:0"}],"id":399,"name":"FunctionCall","src":"5884:37:0"}],"id":400,"name":"BinaryOperation","src":"5869:52:0"}],"id":401,"name":"Assignment","src":"5851:70:0"}],"id":402,"name":"ExpressionStatement","src":"5851:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":403,"name":"Identifier","src":"6047:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"blockhash","referencedDeclaration":null,"type":"function (uint256) view returns (bytes32)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":404,"name":"Identifier","src":"6065:5:0"}],"id":405,"name":"MemberAccess","src":"6065:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":406,"name":"Identifier","src":"6081:5:0"}],"id":407,"name":"MemberAccess","src":"6081:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":408,"name":"Literal","src":"6096:1:0"}],"id":409,"name":"BinaryOperation","src":"6081:16:0"}],"id":410,"name":"FunctionCall","src":"6065:33:0"}],"id":411,"name":"Assignment","src":"6047:51:0"}],"id":412,"name":"ExpressionStatement","src":"6047:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":413,"name":"Identifier","src":"6108:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":414,"name":"Identifier","src":"6121:10:0"}],"id":415,"name":"MemberAccess","src":"6121:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":416,"name":"Literal","src":"6136:1:0"}],"id":417,"name":"FunctionCall","src":"6121:17:0"}],"id":418,"name":"Assignment","src":"6108:30:0"}],"id":419,"name":"ExpressionStatement","src":"6108:30:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":420,"name":"Identifier","src":"6224:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":266,"type":"uint256","value":"_BLOCKS_PER_READJUSTMENT"},"id":421,"name":"Identifier","src":"6237:24:0"}],"id":422,"name":"BinaryOperation","src":"6224:37:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":423,"name":"Literal","src":"6265:1:0"}],"id":424,"name":"BinaryOperation","src":"6224:42:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":501,"type":"function ()","value":"_reAdjustDifficulty"},"id":425,"name":"Identifier","src":"6284:19:0"}],"id":426,"name":"FunctionCall","src":"6284:21:0"}],"id":427,"name":"ExpressionStatement","src":"6284:21:0"}],"id":428,"name":"Block","src":"6274:40:0"}],"id":429,"name":"IfStatement","src":"6221:93:0"}],"id":430,"name":"Block","src":"5543:780:0"}],"id":431,"name":"FunctionDefinition","src":"5502:821:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"_reAdjustDifficulty","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":432,"name":"ParameterList","src":"6575:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":433,"name":"ParameterList","src":"6587:0:0"},{"children":[{"attributes":{"assignments":[435]},"children":[{"attributes":{"constant":false,"name":"ethBlocksSinceLastDifficultyPeriod","scope":501,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":434,"name":"ElementaryTypeName","src":"6599:4:0"}],"id":435,"name":"VariableDeclaration","src":"6599:39:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":436,"name":"Identifier","src":"6641:5:0"}],"id":437,"name":"MemberAccess","src":"6641:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":261,"type":"uint256","value":"latestDifficultyPeriodStarted"},"id":438,"name":"Identifier","src":"6656:29:0"}],"id":439,"name":"BinaryOperation","src":"6641:44:0"}],"id":440,"name":"VariableDeclarationStatement","src":"6599:86:0"},{"attributes":{"assignments":[442]},"children":[{"attributes":{"constant":false,"name":"epochsMined","scope":501,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":441,"name":"ElementaryTypeName","src":"6857:4:0"}],"id":442,"name":"VariableDeclaration","src":"6857:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":266,"type":"uint256","value":"_BLOCKS_PER_READJUSTMENT"},"id":443,"name":"Identifier","src":"6876:24:0"}],"id":444,"name":"VariableDeclarationStatement","src":"6857:43:0"},{"attributes":{"assignments":[446]},"children":[{"attributes":{"constant":false,"name":"targetEthBlocksPerEpoch","scope":501,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":445,"name":"ElementaryTypeName","src":"6917:4:0"}],"id":446,"name":"VariableDeclaration","src":"6917:28:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":442,"type":"uint256","value":"epochsMined"},"id":447,"name":"Identifier","src":"6948:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3630","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 60","value":"60"},"id":448,"name":"Literal","src":"6962:2:0"}],"id":449,"name":"BinaryOperation","src":"6948:16:0"}],"id":450,"name":"VariableDeclarationStatement","src":"6917:47:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":435,"type":"uint256","value":"ethBlocksSinceLastDifficultyPeriod"},"id":451,"name":"Identifier","src":"7090:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":446,"type":"uint256","value":"targetEthBlocksPerEpoch"},"id":452,"name":"Identifier","src":"7127:23:0"}],"id":453,"name":"BinaryOperation","src":"7090:60:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":454,"name":"Identifier","src":"7200:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":455,"name":"Identifier","src":"7215:12:0"}],"id":456,"name":"MemberAccess","src":"7215:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":457,"name":"Identifier","src":"7232:12:0"}],"id":458,"name":"MemberAccess","src":"7232:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3230","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 20","value":"20"},"id":459,"name":"Literal","src":"7249:2:0"}],"id":460,"name":"FunctionCall","src":"7232:20:0"}],"id":461,"name":"FunctionCall","src":"7215:38:0"}],"id":462,"name":"Assignment","src":"7200:53:0"}],"id":463,"name":"ExpressionStatement","src":"7200:53:0"}],"id":464,"name":"Block","src":"7161:103:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":465,"name":"Identifier","src":"7307:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":466,"name":"Identifier","src":"7322:12:0"}],"id":467,"name":"MemberAccess","src":"7322:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":468,"name":"Identifier","src":"7339:12:0"}],"id":469,"name":"MemberAccess","src":"7339:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3230","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 20","value":"20"},"id":470,"name":"Literal","src":"7356:2:0"}],"id":471,"name":"FunctionCall","src":"7339:20:0"}],"id":472,"name":"FunctionCall","src":"7322:38:0"}],"id":473,"name":"Assignment","src":"7307:53:0"}],"id":474,"name":"ExpressionStatement","src":"7307:53:0"}],"id":475,"name":"Block","src":"7268:103:0"}],"id":476,"name":"IfStatement","src":"7086:285:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":261,"type":"uint256","value":"latestDifficultyPeriodStarted"},"id":477,"name":"Identifier","src":"7383:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":478,"name":"Identifier","src":"7415:5:0"}],"id":479,"name":"MemberAccess","src":"7415:12:0"}],"id":480,"name":"Assignment","src":"7383:44:0"}],"id":481,"name":"ExpressionStatement","src":"7383:44:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":482,"name":"Identifier","src":"7441:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":271,"type":"uint256","value":"_MINIMUM_TARGET"},"id":483,"name":"Identifier","src":"7456:15:0"}],"id":484,"name":"BinaryOperation","src":"7441:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":485,"name":"Identifier","src":"7497:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":271,"type":"uint256","value":"_MINIMUM_TARGET"},"id":486,"name":"Identifier","src":"7512:15:0"}],"id":487,"name":"Assignment","src":"7497:30:0"}],"id":488,"name":"ExpressionStatement","src":"7497:30:0"}],"id":489,"name":"Block","src":"7485:53:0"}],"id":490,"name":"IfStatement","src":"7438:100:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":491,"name":"Identifier","src":"7551:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":492,"name":"Identifier","src":"7566:15:0"}],"id":493,"name":"BinaryOperation","src":"7551:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":494,"name":"Identifier","src":"7608:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":495,"name":"Identifier","src":"7623:15:0"}],"id":496,"name":"Assignment","src":"7608:30:0"}],"id":497,"name":"ExpressionStatement","src":"7608:30:0"}],"id":498,"name":"Block","src":"7596:53:0"}],"id":499,"name":"IfStatement","src":"7548:101:0"}],"id":500,"name":"Block","src":"6587:1068:0"}],"id":501,"name":"FunctionDefinition","src":"6547:1108:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMintDigest","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"nonce","scope":524,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":502,"name":"ElementaryTypeName","src":"7685:7:0"}],"id":503,"name":"VariableDeclaration","src":"7685:13:0"},{"attributes":{"constant":false,"name":"challenge_digest","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":504,"name":"ElementaryTypeName","src":"7700:7:0"}],"id":505,"name":"VariableDeclaration","src":"7700:24:0"},{"attributes":{"constant":false,"name":"challenge_number","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":506,"name":"ElementaryTypeName","src":"7726:7:0"}],"id":507,"name":"VariableDeclaration","src":"7726:24:0"}],"id":508,"name":"ParameterList","src":"7684:67:0"},{"children":[{"attributes":{"constant":false,"name":"digesttest","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":509,"name":"ElementaryTypeName","src":"7768:7:0"}],"id":510,"name":"VariableDeclaration","src":"7768:18:0"}],"id":511,"name":"ParameterList","src":"7767:20:0"},{"children":[{"attributes":{"assignments":[513]},"children":[{"attributes":{"constant":false,"name":"digest","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":512,"name":"ElementaryTypeName","src":"7799:7:0"}],"id":513,"name":"VariableDeclaration","src":"7799:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":970,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":514,"name":"Identifier","src":"7816:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":507,"type":"bytes32","value":"challenge_number"},"id":515,"name":"Identifier","src":"7826:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":516,"name":"Identifier","src":"7843:3:0"}],"id":517,"name":"MemberAccess","src":"7843:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":503,"type":"uint256","value":"nonce"},"id":518,"name":"Identifier","src":"7854:5:0"}],"id":519,"name":"FunctionCall","src":"7816:44:0"}],"id":520,"name":"VariableDeclarationStatement","src":"7799:61:0"},{"attributes":{"functionReturnParameters":511},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":513,"type":"bytes32","value":"digest"},"id":521,"name":"Identifier","src":"7878:6:0"}],"id":522,"name":"Return","src":"7871:13:0"}],"id":523,"name":"Block","src":"7788:106:0"}],"id":524,"name":"FunctionDefinition","src":"7662:232:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"checkMintSolution","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"nonce","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":525,"name":"ElementaryTypeName","src":"7929:7:0"}],"id":526,"name":"VariableDeclaration","src":"7929:13:0"},{"attributes":{"constant":false,"name":"challenge_digest","scope":570,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":527,"name":"ElementaryTypeName","src":"7944:7:0"}],"id":528,"name":"VariableDeclaration","src":"7944:24:0"},{"attributes":{"constant":false,"name":"challenge_number","scope":570,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":529,"name":"ElementaryTypeName","src":"7970:7:0"}],"id":530,"name":"VariableDeclaration","src":"7970:24:0"},{"attributes":{"constant":false,"name":"testDifficulty","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":531,"name":"ElementaryTypeName","src":"7996:4:0"}],"id":532,"name":"VariableDeclaration","src":"7996:19:0"}],"id":533,"name":"ParameterList","src":"7928:88:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":570,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":534,"name":"ElementaryTypeName","src":"8033:4:0"}],"id":535,"name":"VariableDeclaration","src":"8033:12:0"}],"id":536,"name":"ParameterList","src":"8032:14:0"},{"children":[{"attributes":{"assignments":[538]},"children":[{"attributes":{"constant":false,"name":"difficulty","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":537,"name":"ElementaryTypeName","src":"8060:4:0"}],"id":538,"name":"VariableDeclaration","src":"8060:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":532,"type":"uint256","value":"testDifficulty"},"id":539,"name":"Identifier","src":"8078:14:0"}],"id":540,"name":"VariableDeclarationStatement","src":"8060:32:0"},{"attributes":{"assignments":[542]},"children":[{"attributes":{"constant":false,"name":"reward_amount","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":541,"name":"ElementaryTypeName","src":"8104:4:0"}],"id":542,"name":"VariableDeclaration","src":"8104:18:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":723,"type":"function () view returns (uint256)","value":"getMiningReward"},"id":543,"name":"Identifier","src":"8125:15:0"}],"id":544,"name":"FunctionCall","src":"8125:17:0"}],"id":545,"name":"VariableDeclarationStatement","src":"8104:38:0"},{"attributes":{"assignments":[547]},"children":[{"attributes":{"constant":false,"name":"digest","scope":570,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":546,"name":"ElementaryTypeName","src":"8155:7:0"}],"id":547,"name":"VariableDeclaration","src":"8155:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":970,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":548,"name":"Identifier","src":"8172:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":530,"type":"bytes32","value":"challenge_number"},"id":549,"name":"Identifier","src":"8182:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":550,"name":"Identifier","src":"8199:3:0"}],"id":551,"name":"MemberAccess","src":"8199:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":526,"type":"uint256","value":"nonce"},"id":552,"name":"Identifier","src":"8210:5:0"}],"id":553,"name":"FunctionCall","src":"8172:44:0"}],"id":554,"name":"VariableDeclarationStatement","src":"8155:61:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":555,"name":"ElementaryTypeNameExpression","src":"8286:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":547,"type":"bytes32","value":"digest"},"id":556,"name":"Identifier","src":"8294:6:0"}],"id":557,"name":"FunctionCall","src":"8286:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":558,"name":"Identifier","src":"8304:12:0"}],"id":559,"name":"BinaryOperation","src":"8286:30:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":560,"name":"Identifier","src":"8318:6:0"}],"id":561,"name":"FunctionCall","src":"8318:8:0"}],"id":562,"name":"ExpressionStatement","src":"8318:8:0"}],"id":563,"name":"IfStatement","src":"8283:43:0"},{"attributes":{"functionReturnParameters":536},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":547,"type":"bytes32","value":"digest"},"id":564,"name":"Identifier","src":"8347:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":528,"type":"bytes32","value":"challenge_digest"},"id":565,"name":"Identifier","src":"8357:16:0"}],"id":566,"name":"BinaryOperation","src":"8347:26:0"}],"id":567,"name":"TupleExpression","src":"8346:28:0"}],"id":568,"name":"Return","src":"8339:35:0"}],"id":569,"name":"Block","src":"8047:339:0"}],"id":570,"name":"FunctionDefinition","src":"7902:484:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mint","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"nonce","scope":676,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":571,"name":"ElementaryTypeName","src":"8407:7:0"}],"id":572,"name":"VariableDeclaration","src":"8407:13:0"},{"attributes":{"constant":false,"name":"challenge_digest","scope":676,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":573,"name":"ElementaryTypeName","src":"8422:7:0"}],"id":574,"name":"VariableDeclaration","src":"8422:24:0"}],"id":575,"name":"ParameterList","src":"8406:41:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":676,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":576,"name":"ElementaryTypeName","src":"8464:4:0"}],"id":577,"name":"VariableDeclaration","src":"8464:12:0"}],"id":578,"name":"ParameterList","src":"8463:14:0"},{"children":[{"attributes":{"assignments":[580]},"children":[{"attributes":{"constant":false,"name":"reward_amount","scope":676,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":579,"name":"ElementaryTypeName","src":"8540:4:0"}],"id":580,"name":"VariableDeclaration","src":"8540:18:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":723,"type":"function () view returns (uint256)","value":"getMiningReward"},"id":581,"name":"Identifier","src":"8561:15:0"}],"id":582,"name":"FunctionCall","src":"8561:17:0"}],"id":583,"name":"VariableDeclarationStatement","src":"8540:38:0"},{"attributes":{"assignments":[585]},"children":[{"attributes":{"constant":false,"name":"digest","scope":676,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":584,"name":"ElementaryTypeName","src":"8739:7:0"}],"id":585,"name":"VariableDeclaration","src":"8739:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":970,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":586,"name":"Identifier","src":"8757:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":587,"name":"Identifier","src":"8767:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":588,"name":"Identifier","src":"8784:3:0"}],"id":589,"name":"MemberAccess","src":"8784:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":572,"type":"uint256","value":"nonce"},"id":590,"name":"Identifier","src":"8796:5:0"}],"id":591,"name":"FunctionCall","src":"8757:46:0"}],"id":592,"name":"VariableDeclarationStatement","src":"8739:64:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":593,"name":"Identifier","src":"8873:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"bytes32","value":"challenge_digest"},"id":594,"name":"Identifier","src":"8883:16:0"}],"id":595,"name":"BinaryOperation","src":"8873:26:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":596,"name":"Identifier","src":"8901:6:0"}],"id":597,"name":"FunctionCall","src":"8901:8:0"}],"id":598,"name":"ExpressionStatement","src":"8901:8:0"}],"id":599,"name":"IfStatement","src":"8869:40:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":600,"name":"ElementaryTypeNameExpression","src":"8976:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":601,"name":"Identifier","src":"8984:6:0"}],"id":602,"name":"FunctionCall","src":"8976:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":603,"name":"Identifier","src":"8994:12:0"}],"id":604,"name":"BinaryOperation","src":"8976:30:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":605,"name":"Identifier","src":"9008:6:0"}],"id":606,"name":"FunctionCall","src":"9008:8:0"}],"id":607,"name":"ExpressionStatement","src":"9008:8:0"}],"id":608,"name":"IfStatement","src":"8973:43:0"},{"attributes":{"assignments":[610]},"children":[{"attributes":{"constant":false,"name":"hashFound","scope":676,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":609,"name":"ElementaryTypeName","src":"9139:4:0"}],"id":610,"name":"VariableDeclaration","src":"9139:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":294,"type":"mapping(bytes32 => uint256)","value":"rewardHashesFound"},"id":611,"name":"Identifier","src":"9156:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":612,"name":"Identifier","src":"9174:6:0"}],"id":613,"name":"IndexAccess","src":"9156:25:0"}],"id":614,"name":"VariableDeclarationStatement","src":"9139:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":294,"type":"mapping(bytes32 => uint256)","value":"rewardHashesFound"},"id":615,"name":"Identifier","src":"9192:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":616,"name":"Identifier","src":"9210:6:0"}],"id":617,"name":"IndexAccess","src":"9192:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":618,"name":"Identifier","src":"9220:10:0"}],"id":619,"name":"Assignment","src":"9192:38:0"}],"id":620,"name":"ExpressionStatement","src":"9192:38:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":610,"type":"uint256","value":"hashFound"},"id":621,"name":"Identifier","src":"9244:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":622,"name":"Literal","src":"9257:1:0"}],"id":623,"name":"BinaryOperation","src":"9244:14:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":624,"name":"Identifier","src":"9260:6:0"}],"id":625,"name":"FunctionCall","src":"9260:8:0"}],"id":626,"name":"ExpressionStatement","src":"9260:8:0"}],"id":627,"name":"IfStatement","src":"9241:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":628,"name":"Identifier","src":"9328:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":629,"name":"Identifier","src":"9337:3:0"}],"id":630,"name":"MemberAccess","src":"9337:10:0"}],"id":631,"name":"IndexAccess","src":"9328:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":632,"name":"Identifier","src":"9351:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":633,"name":"Identifier","src":"9360:3:0"}],"id":634,"name":"MemberAccess","src":"9360:10:0"}],"id":635,"name":"IndexAccess","src":"9351:20:0"}],"id":636,"name":"MemberAccess","src":"9351:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":637,"name":"Identifier","src":"9376:13:0"}],"id":638,"name":"FunctionCall","src":"9351:39:0"}],"id":639,"name":"Assignment","src":"9328:62:0"}],"id":640,"name":"ExpressionStatement","src":"9328:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":641,"name":"Identifier","src":"9402:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":642,"name":"Identifier","src":"9417:12:0"}],"id":643,"name":"MemberAccess","src":"9417:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":644,"name":"Identifier","src":"9434:13:0"}],"id":645,"name":"FunctionCall","src":"9417:31:0"}],"id":646,"name":"Assignment","src":"9402:46:0"}],"id":647,"name":"ExpressionStatement","src":"9402:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":286,"type":"address","value":"lastRewardTo"},"id":648,"name":"Identifier","src":"9500:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":649,"name":"Identifier","src":"9515:3:0"}],"id":650,"name":"MemberAccess","src":"9515:10:0"}],"id":651,"name":"Assignment","src":"9500:25:0"}],"id":652,"name":"ExpressionStatement","src":"9500:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"lastRewardAmount"},"id":653,"name":"Identifier","src":"9535:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":654,"name":"Identifier","src":"9554:13:0"}],"id":655,"name":"Assignment","src":"9535:32:0"}],"id":656,"name":"ExpressionStatement","src":"9535:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":290,"type":"uint256","value":"lastRewardEthBlockNumber"},"id":657,"name":"Identifier","src":"9577:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":658,"name":"Identifier","src":"9604:5:0"}],"id":659,"name":"MemberAccess","src":"9604:12:0"}],"id":660,"name":"Assignment","src":"9577:39:0"}],"id":661,"name":"ExpressionStatement","src":"9577:39:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"function ()","value":"_startNewMiningEpoch"},"id":662,"name":"Identifier","src":"9629:20:0"}],"id":663,"name":"FunctionCall","src":"9629:22:0"}],"id":664,"name":"ExpressionStatement","src":"9629:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":316,"type":"function (address,uint256,uint256,bytes32)","value":"Mint"},"id":665,"name":"Identifier","src":"9664:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":666,"name":"Identifier","src":"9669:3:0"}],"id":667,"name":"MemberAccess","src":"9669:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":668,"name":"Identifier","src":"9681:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":669,"name":"Identifier","src":"9696:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":670,"name":"Identifier","src":"9708:15:0"}],"id":671,"name":"FunctionCall","src":"9664:61:0"}],"id":672,"name":"ExpressionStatement","src":"9664:61:0"},{"attributes":{"functionReturnParameters":578},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":673,"name":"Literal","src":"9742:4:0"}],"id":674,"name":"Return","src":"9735:11:0"}],"id":675,"name":"Block","src":"8478:1276:0"}],"id":676,"name":"FunctionDefinition","src":"8393:1361:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getChallengeNumber","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":677,"name":"ParameterList","src":"9871:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":684,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":678,"name":"ElementaryTypeName","src":"9899:7:0"}],"id":679,"name":"VariableDeclaration","src":"9899:7:0"}],"id":680,"name":"ParameterList","src":"9898:9:0"},{"children":[{"attributes":{"functionReturnParameters":680},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":681,"name":"Identifier","src":"9925:15:0"}],"id":682,"name":"Return","src":"9918:22:0"}],"id":683,"name":"Block","src":"9908:39:0"}],"id":684,"name":"FunctionDefinition","src":"9844:103:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMiningDifficulty","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":685,"name":"ParameterList","src":"10064:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":695,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":686,"name":"ElementaryTypeName","src":"10092:4:0"}],"id":687,"name":"VariableDeclaration","src":"10092:4:0"}],"id":688,"name":"ParameterList","src":"10091:6:0"},{"children":[{"attributes":{"functionReturnParameters":688},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":689,"name":"Identifier","src":"10115:15:0"}],"id":690,"name":"MemberAccess","src":"10115:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":691,"name":"Identifier","src":"10135:12:0"}],"id":692,"name":"FunctionCall","src":"10115:33:0"}],"id":693,"name":"Return","src":"10108:40:0"}],"id":694,"name":"Block","src":"10098:57:0"}],"id":695,"name":"FunctionDefinition","src":"10036:119:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMiningTarget","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":696,"name":"ParameterList","src":"10185:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":703,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":697,"name":"ElementaryTypeName","src":"10213:4:0"}],"id":698,"name":"VariableDeclaration","src":"10213:4:0"}],"id":699,"name":"ParameterList","src":"10212:6:0"},{"children":[{"attributes":{"functionReturnParameters":699},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":700,"name":"Identifier","src":"10235:12:0"}],"id":701,"name":"Return","src":"10228:19:0"}],"id":702,"name":"Block","src":"10219:34:0"}],"id":703,"name":"FunctionDefinition","src":"10161:92:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMiningReward","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":704,"name":"ParameterList","src":"10391:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":723,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":705,"name":"ElementaryTypeName","src":"10419:4:0"}],"id":706,"name":"VariableDeclaration","src":"10419:4:0"}],"id":707,"name":"ParameterList","src":"10418:6:0"},{"children":[{"attributes":{"functionReturnParameters":707},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3530","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 50","value":"50"},"id":708,"name":"Literal","src":"10570:2:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":709,"name":"Literal","src":"10575:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":710,"name":"ElementaryTypeNameExpression","src":"10579:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint8","value":"decimals"},"id":711,"name":"Identifier","src":"10584:8:0"}],"id":712,"name":"FunctionCall","src":"10579:14:0"}],"id":713,"name":"BinaryOperation","src":"10575:18:0"}],"id":714,"name":"BinaryOperation","src":"10570:23:0"}],"id":715,"name":"TupleExpression","src":"10569:26:0"}],"id":716,"name":"MemberAccess","src":"10569:30:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":717,"name":"Literal","src":"10601:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":718,"name":"Identifier","src":"10604:9:0"}],"id":719,"name":"BinaryOperation","src":"10601:12:0"}],"id":720,"name":"FunctionCall","src":"10569:46:0"}],"id":721,"name":"Return","src":"10562:53:0"}],"id":722,"name":"Block","src":"10425:199:0"}],"id":723,"name":"FunctionDefinition","src":"10367:257:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":964,"stateMutability":"view","superFunction":101,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":724,"name":"ParameterList","src":"10835:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":737,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":725,"name":"ElementaryTypeName","src":"10863:4:0"}],"id":726,"name":"VariableDeclaration","src":"10863:4:0"}],"id":727,"name":"ParameterList","src":"10862:6:0"},{"children":[{"attributes":{"functionReturnParameters":727},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":728,"name":"Identifier","src":"10887:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":729,"name":"Identifier","src":"10903:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":730,"name":"ElementaryTypeNameExpression","src":"10912:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":731,"name":"Literal","src":"10920:1:0"}],"id":732,"name":"FunctionCall","src":"10912:10:0"}],"id":733,"name":"IndexAccess","src":"10903:20:0"}],"id":734,"name":"BinaryOperation","src":"10887:36:0"}],"id":735,"name":"Return","src":"10880:43:0"}],"id":736,"name":"Block","src":"10869:62:0"}],"id":737,"name":"FunctionDefinition","src":"10815:116:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":964,"stateMutability":"view","superFunction":108,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":749,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":738,"name":"ElementaryTypeName","src":"11175:7:0"}],"id":739,"name":"VariableDeclaration","src":"11175:18:0"}],"id":740,"name":"ParameterList","src":"11174:20:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":749,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":741,"name":"ElementaryTypeName","src":"11220:4:0"}],"id":742,"name":"VariableDeclaration","src":"11220:12:0"}],"id":743,"name":"ParameterList","src":"11219:14:0"},{"children":[{"attributes":{"functionReturnParameters":743},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":744,"name":"Identifier","src":"11252:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":739,"type":"address","value":"tokenOwner"},"id":745,"name":"Identifier","src":"11261:10:0"}],"id":746,"name":"IndexAccess","src":"11252:20:0"}],"id":747,"name":"Return","src":"11245:27:0"}],"id":748,"name":"Block","src":"11234:46:0"}],"id":749,"name":"FunctionDefinition","src":"11156:124:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":126,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":792,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":750,"name":"ElementaryTypeName","src":"11647:7:0"}],"id":751,"name":"VariableDeclaration","src":"11647:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":792,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":752,"name":"ElementaryTypeName","src":"11659:4:0"}],"id":753,"name":"VariableDeclaration","src":"11659:11:0"}],"id":754,"name":"ParameterList","src":"11646:25:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":792,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":755,"name":"ElementaryTypeName","src":"11688:4:0"}],"id":756,"name":"VariableDeclaration","src":"11688:12:0"}],"id":757,"name":"ParameterList","src":"11687:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":758,"name":"Identifier","src":"11713:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":759,"name":"Identifier","src":"11722:3:0"}],"id":760,"name":"MemberAccess","src":"11722:10:0"}],"id":761,"name":"IndexAccess","src":"11713:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":762,"name":"Identifier","src":"11736:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":763,"name":"Identifier","src":"11745:3:0"}],"id":764,"name":"MemberAccess","src":"11745:10:0"}],"id":765,"name":"IndexAccess","src":"11736:20:0"}],"id":766,"name":"MemberAccess","src":"11736:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":753,"type":"uint256","value":"tokens"},"id":767,"name":"Identifier","src":"11761:6:0"}],"id":768,"name":"FunctionCall","src":"11736:32:0"}],"id":769,"name":"Assignment","src":"11713:55:0"}],"id":770,"name":"ExpressionStatement","src":"11713:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":771,"name":"Identifier","src":"11779:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":751,"type":"address","value":"to"},"id":772,"name":"Identifier","src":"11788:2:0"}],"id":773,"name":"IndexAccess","src":"11779:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":774,"name":"Identifier","src":"11794:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":751,"type":"address","value":"to"},"id":775,"name":"Identifier","src":"11803:2:0"}],"id":776,"name":"IndexAccess","src":"11794:12:0"}],"id":777,"name":"MemberAccess","src":"11794:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":753,"type":"uint256","value":"tokens"},"id":778,"name":"Identifier","src":"11811:6:0"}],"id":779,"name":"FunctionCall","src":"11794:24:0"}],"id":780,"name":"Assignment","src":"11779:39:0"}],"id":781,"name":"ExpressionStatement","src":"11779:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"function (address,address,uint256)","value":"Transfer"},"id":782,"name":"Identifier","src":"11829:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":783,"name":"Identifier","src":"11838:3:0"}],"id":784,"name":"MemberAccess","src":"11838:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":751,"type":"address","value":"to"},"id":785,"name":"Identifier","src":"11850:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":753,"type":"uint256","value":"tokens"},"id":786,"name":"Identifier","src":"11854:6:0"}],"id":787,"name":"FunctionCall","src":"11829:32:0"}],"id":788,"name":"ExpressionStatement","src":"11829:32:0"},{"attributes":{"functionReturnParameters":757},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":789,"name":"Literal","src":"11879:4:0"}],"id":790,"name":"Return","src":"11872:11:0"}],"id":791,"name":"Block","src":"11702:189:0"}],"id":792,"name":"FunctionDefinition","src":"11629:262:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":135,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":820,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":793,"name":"ElementaryTypeName","src":"12422:7:0"}],"id":794,"name":"VariableDeclaration","src":"12422:15:0"},{"attributes":{"constant":false,"name":"tokens","scope":820,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":795,"name":"ElementaryTypeName","src":"12439:4:0"}],"id":796,"name":"VariableDeclaration","src":"12439:11:0"}],"id":797,"name":"ParameterList","src":"12421:30:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":820,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":798,"name":"ElementaryTypeName","src":"12468:4:0"}],"id":799,"name":"VariableDeclaration","src":"12468:12:0"}],"id":800,"name":"ParameterList","src":"12467:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":801,"name":"Identifier","src":"12493:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":802,"name":"Identifier","src":"12501:3:0"}],"id":803,"name":"MemberAccess","src":"12501:10:0"}],"id":805,"name":"IndexAccess","src":"12493:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":794,"type":"address","value":"spender"},"id":804,"name":"Identifier","src":"12513:7:0"}],"id":806,"name":"IndexAccess","src":"12493:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":796,"type":"uint256","value":"tokens"},"id":807,"name":"Identifier","src":"12524:6:0"}],"id":808,"name":"Assignment","src":"12493:37:0"}],"id":809,"name":"ExpressionStatement","src":"12493:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":162,"type":"function (address,address,uint256)","value":"Approval"},"id":810,"name":"Identifier","src":"12541:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":811,"name":"Identifier","src":"12550:3:0"}],"id":812,"name":"MemberAccess","src":"12550:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":794,"type":"address","value":"spender"},"id":813,"name":"Identifier","src":"12562:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":796,"type":"uint256","value":"tokens"},"id":814,"name":"Identifier","src":"12571:6:0"}],"id":815,"name":"FunctionCall","src":"12541:37:0"}],"id":816,"name":"ExpressionStatement","src":"12541:37:0"},{"attributes":{"functionReturnParameters":800},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":817,"name":"Literal","src":"12596:4:0"}],"id":818,"name":"Return","src":"12589:11:0"}],"id":819,"name":"Block","src":"12482:126:0"}],"id":820,"name":"FunctionDefinition","src":"12405:203:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":146,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":879,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":821,"name":"ElementaryTypeName","src":"13171:7:0"}],"id":822,"name":"VariableDeclaration","src":"13171:12:0"},{"attributes":{"constant":false,"name":"to","scope":879,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":823,"name":"ElementaryTypeName","src":"13185:7:0"}],"id":824,"name":"VariableDeclaration","src":"13185:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":879,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":825,"name":"ElementaryTypeName","src":"13197:4:0"}],"id":826,"name":"VariableDeclaration","src":"13197:11:0"}],"id":827,"name":"ParameterList","src":"13170:39:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":879,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":828,"name":"ElementaryTypeName","src":"13226:4:0"}],"id":829,"name":"VariableDeclaration","src":"13226:12:0"}],"id":830,"name":"ParameterList","src":"13225:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":831,"name":"Identifier","src":"13251:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":832,"name":"Identifier","src":"13260:4:0"}],"id":833,"name":"IndexAccess","src":"13251:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":834,"name":"Identifier","src":"13268:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":835,"name":"Identifier","src":"13277:4:0"}],"id":836,"name":"IndexAccess","src":"13268:14:0"}],"id":837,"name":"MemberAccess","src":"13268:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":838,"name":"Identifier","src":"13287:6:0"}],"id":839,"name":"FunctionCall","src":"13268:26:0"}],"id":840,"name":"Assignment","src":"13251:43:0"}],"id":841,"name":"ExpressionStatement","src":"13251:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":842,"name":"Identifier","src":"13305:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":843,"name":"Identifier","src":"13313:4:0"}],"id":846,"name":"IndexAccess","src":"13305:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":844,"name":"Identifier","src":"13319:3:0"}],"id":845,"name":"MemberAccess","src":"13319:10:0"}],"id":847,"name":"IndexAccess","src":"13305:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":848,"name":"Identifier","src":"13333:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":849,"name":"Identifier","src":"13341:4:0"}],"id":850,"name":"IndexAccess","src":"13333:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":851,"name":"Identifier","src":"13347:3:0"}],"id":852,"name":"MemberAccess","src":"13347:10:0"}],"id":853,"name":"IndexAccess","src":"13333:25:0"}],"id":854,"name":"MemberAccess","src":"13333:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":855,"name":"Identifier","src":"13363:6:0"}],"id":856,"name":"FunctionCall","src":"13333:37:0"}],"id":857,"name":"Assignment","src":"13305:65:0"}],"id":858,"name":"ExpressionStatement","src":"13305:65:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":859,"name":"Identifier","src":"13381:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":824,"type":"address","value":"to"},"id":860,"name":"Identifier","src":"13390:2:0"}],"id":861,"name":"IndexAccess","src":"13381:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":862,"name":"Identifier","src":"13396:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":824,"type":"address","value":"to"},"id":863,"name":"Identifier","src":"13405:2:0"}],"id":864,"name":"IndexAccess","src":"13396:12:0"}],"id":865,"name":"MemberAccess","src":"13396:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":866,"name":"Identifier","src":"13413:6:0"}],"id":867,"name":"FunctionCall","src":"13396:24:0"}],"id":868,"name":"Assignment","src":"13381:39:0"}],"id":869,"name":"ExpressionStatement","src":"13381:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"function (address,address,uint256)","value":"Transfer"},"id":870,"name":"Identifier","src":"13431:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":871,"name":"Identifier","src":"13440:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":824,"type":"address","value":"to"},"id":872,"name":"Identifier","src":"13446:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":873,"name":"Identifier","src":"13450:6:0"}],"id":874,"name":"FunctionCall","src":"13431:26:0"}],"id":875,"name":"ExpressionStatement","src":"13431:26:0"},{"attributes":{"functionReturnParameters":830},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":876,"name":"Literal","src":"13475:4:0"}],"id":877,"name":"Return","src":"13468:11:0"}],"id":878,"name":"Block","src":"13240:247:0"}],"id":879,"name":"FunctionDefinition","src":"13149:338:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":964,"stateMutability":"view","superFunction":117,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":895,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":880,"name":"ElementaryTypeName","src":"13792:7:0"}],"id":881,"name":"VariableDeclaration","src":"13792:18:0"},{"attributes":{"constant":false,"name":"spender","scope":895,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":882,"name":"ElementaryTypeName","src":"13812:7:0"}],"id":883,"name":"VariableDeclaration","src":"13812:15:0"}],"id":884,"name":"ParameterList","src":"13791:37:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":895,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":885,"name":"ElementaryTypeName","src":"13854:4:0"}],"id":886,"name":"VariableDeclaration","src":"13854:14:0"}],"id":887,"name":"ParameterList","src":"13853:16:0"},{"children":[{"attributes":{"functionReturnParameters":887},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":888,"name":"Identifier","src":"13888:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":881,"type":"address","value":"tokenOwner"},"id":889,"name":"Identifier","src":"13896:10:0"}],"id":890,"name":"IndexAccess","src":"13888:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":883,"type":"address","value":"spender"},"id":891,"name":"Identifier","src":"13908:7:0"}],"id":892,"name":"IndexAccess","src":"13888:28:0"}],"id":893,"name":"Return","src":"13881:35:0"}],"id":894,"name":"Block","src":"13870:54:0"}],"id":895,"name":"FunctionDefinition","src":"13773:151:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"approveAndCall","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":936,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":896,"name":"ElementaryTypeName","src":"14314:7:0"}],"id":897,"name":"VariableDeclaration","src":"14314:15:0"},{"attributes":{"constant":false,"name":"tokens","scope":936,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":898,"name":"ElementaryTypeName","src":"14331:4:0"}],"id":899,"name":"VariableDeclaration","src":"14331:11:0"},{"attributes":{"constant":false,"name":"data","scope":936,"stateVariable":false,"storageLocation":"default","type":"bytes memory","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes storage pointer"},"id":900,"name":"ElementaryTypeName","src":"14344:5:0"}],"id":901,"name":"VariableDeclaration","src":"14344:10:0"}],"id":902,"name":"ParameterList","src":"14313:42:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":936,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":903,"name":"ElementaryTypeName","src":"14372:4:0"}],"id":904,"name":"VariableDeclaration","src":"14372:12:0"}],"id":905,"name":"ParameterList","src":"14371:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":906,"name":"Identifier","src":"14397:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":907,"name":"Identifier","src":"14405:3:0"}],"id":908,"name":"MemberAccess","src":"14405:10:0"}],"id":910,"name":"IndexAccess","src":"14397:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":897,"type":"address","value":"spender"},"id":909,"name":"Identifier","src":"14417:7:0"}],"id":911,"name":"IndexAccess","src":"14397:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":899,"type":"uint256","value":"tokens"},"id":912,"name":"Identifier","src":"14428:6:0"}],"id":913,"name":"Assignment","src":"14397:37:0"}],"id":914,"name":"ExpressionStatement","src":"14397:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":162,"type":"function (address,address,uint256)","value":"Approval"},"id":915,"name":"Identifier","src":"14445:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":916,"name":"Identifier","src":"14454:3:0"}],"id":917,"name":"MemberAccess","src":"14454:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":897,"type":"address","value":"spender"},"id":918,"name":"Identifier","src":"14466:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":899,"type":"uint256","value":"tokens"},"id":919,"name":"Identifier","src":"14475:6:0"}],"id":920,"name":"FunctionCall","src":"14445:37:0"}],"id":921,"name":"ExpressionStatement","src":"14445:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$__0xBitcoinToken_$964","typeString":"contract _0xBitcoinToken"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"receiveApproval","referencedDeclaration":174,"type":"function (address,uint256,address,bytes memory) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract ApproveAndCallFallBack","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"type(contract ApproveAndCallFallBack)","value":"ApproveAndCallFallBack"},"id":922,"name":"Identifier","src":"14493:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":897,"type":"address","value":"spender"},"id":923,"name":"Identifier","src":"14516:7:0"}],"id":924,"name":"FunctionCall","src":"14493:31:0"}],"id":925,"name":"MemberAccess","src":"14493:47:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":926,"name":"Identifier","src":"14541:3:0"}],"id":927,"name":"MemberAccess","src":"14541:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":899,"type":"uint256","value":"tokens"},"id":928,"name":"Identifier","src":"14553:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":995,"type":"contract _0xBitcoinToken","value":"this"},"id":929,"name":"Identifier","src":"14561:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":901,"type":"bytes memory","value":"data"},"id":930,"name":"Identifier","src":"14567:4:0"}],"id":931,"name":"FunctionCall","src":"14493:79:0"}],"id":932,"name":"ExpressionStatement","src":"14493:79:0"},{"attributes":{"functionReturnParameters":905},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":933,"name":"Literal","src":"14590:4:0"}],"id":934,"name":"Return","src":"14583:11:0"}],"id":935,"name":"Block","src":"14386:216:0"}],"id":936,"name":"FunctionDefinition","src":"14290:312:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"","payable":true,"scope":964,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":937,"name":"ParameterList","src":"14806:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":938,"name":"ParameterList","src":"14824:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":939,"name":"Identifier","src":"14835:6:0"}],"id":940,"name":"FunctionCall","src":"14835:8:0"}],"id":941,"name":"ExpressionStatement","src":"14835:8:0"}],"id":942,"name":"Block","src":"14824:27:0"}],"id":943,"name":"FunctionDefinition","src":"14797:54:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"transferAnyERC20Token","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenAddress","scope":963,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":944,"name":"ElementaryTypeName","src":"15118:7:0"}],"id":945,"name":"VariableDeclaration","src":"15118:20:0"},{"attributes":{"constant":false,"name":"tokens","scope":963,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":946,"name":"ElementaryTypeName","src":"15140:4:0"}],"id":947,"name":"VariableDeclaration","src":"15140:11:0"}],"id":948,"name":"ParameterList","src":"15117:35:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":963,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":951,"name":"ElementaryTypeName","src":"15179:4:0"}],"id":952,"name":"VariableDeclaration","src":"15179:12:0"}],"id":953,"name":"ParameterList","src":"15178:14:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":949,"name":"Identifier","src":"15160:9:0"}],"id":950,"name":"ModifierInvocation","src":"15160:9:0"},{"children":[{"attributes":{"functionReturnParameters":953},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":126,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract ERC20Interface","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":163,"type":"type(contract ERC20Interface)","value":"ERC20Interface"},"id":954,"name":"Identifier","src":"15211:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":945,"type":"address","value":"tokenAddress"},"id":955,"name":"Identifier","src":"15226:12:0"}],"id":956,"name":"FunctionCall","src":"15211:28:0"}],"id":957,"name":"MemberAccess","src":"15211:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":958,"name":"Identifier","src":"15249:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":947,"type":"uint256","value":"tokens"},"id":959,"name":"Identifier","src":"15256:6:0"}],"id":960,"name":"FunctionCall","src":"15211:52:0"}],"id":961,"name":"Return","src":"15204:59:0"}],"id":962,"name":"Block","src":"15193:78:0"}],"id":963,"name":"FunctionDefinition","src":"15087:184:0"}],"id":964,"name":"ContractDefinition","src":"3478:11796:0"}],"id":965,"name":"SourceUnit","src":"0:15275:0"},"compiler":{"name":"solc","version":"0.4.18+commit.9cf6e910.Emscripten.clang"},"networks":{},"schemaVersion":"1.0.1","updatedAt":"2018-02-03T22:55:50.574Z"}

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = {"contractName":"LavaWallet","abi":[{"constant":false,"inputs":[{"name":"token","type":"address"},{"name":"tokens","type":"uint256"}],"name":"withdrawTokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"wrappingContract","type":"address"}],"name":"depositAndWrap","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"},{"name":"relayerReward","type":"uint256"},{"name":"expires","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"withdrawTokensFromWithSignature","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"token","type":"address"},{"name":"tokens","type":"uint256"}],"name":"unwrapAndWithdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"}],"name":"depositTokens","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"walletAddress","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"},{"name":"relayerReward","type":"uint256"},{"name":"expires","type":"uint256"},{"name":"nonce","type":"uint256"}],"name":"getLavaTypedDataHash","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"},{"name":"relayerReward","type":"uint256"},{"name":"expires","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"burnSignature","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"token","type":"address"},{"name":"tokenOwner","type":"address"},{"name":"spender","type":"address"}],"name":"tokenAllowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"tokens","type":"uint256"},{"name":"token","type":"address"},{"name":"data","type":"bytes"}],"name":"receiveApproval","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"}],"name":"approveTokens","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"},{"name":"relayerReward","type":"uint256"},{"name":"expires","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"approveTokensWithSignature","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferTokens","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"token","type":"address"},{"name":"tokens","type":"uint256"},{"name":"relayerReward","type":"uint256"},{"name":"expires","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"transferTokensFromWithSignature","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"digest","type":"bytes32"}],"name":"signatureBurned","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"token","type":"address"},{"indexed":false,"name":"user","type":"address"},{"indexed":false,"name":"amount","type":"uint256"},{"indexed":false,"name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"token","type":"address"},{"indexed":false,"name":"user","type":"address"},{"indexed":false,"name":"amount","type":"uint256"},{"indexed":false,"name":"balance","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"token","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"tokenOwner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"token","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Approval","type":"event"},{"constant":true,"inputs":[{"name":"token","type":"address"},{"name":"user","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x6060604052341561000f57600080fd5b612c628061001e6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306b091f9146100e0578063141bc5061461012257806320acbc83146101505780632486c7291461024657806339dc5ef21461028857806339e69c6e146103015780633e9ed7e4146103d75780638e8758d8146104cd5780638f4ffcb114610558578063912d6e2814610614578063a51fbb3f1461068d578063a64b6e5f14610783578063a9ff2a5e146107fc578063df8f373e146108f2578063f7888aec14610931575b600080fd5b34156100eb57600080fd5b610120600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061099d565b005b61014e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c97565b005b341561015b57600080fd5b61022c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610f90565b604051808215151515815260200191505060405180910390f35b341561025157600080fd5b610286600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fd4565b005b341561029357600080fd5b6102e7600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611219565b604051808215151515815260200191505060405180910390f35b341561030c57600080fd5b6103b9600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091908035906020019091908035906020019091905050611550565b60405180826000191660001916815260200191505060405180910390f35b34156103e257600080fd5b6104b3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506116f5565b604051808215151515815260200191505060405180910390f35b34156104d857600080fd5b610542600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118ac565b6040518082815260200191505060405180910390f35b341561056357600080fd5b6105fa600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611971565b604051808215151515815260200191505060405180910390f35b341561061f57600080fd5b610673600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611988565b604051808215151515815260200191505060405180910390f35b341561069857600080fd5b610769600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611aec565b604051808215151515815260200191505060405180910390f35b341561078e57600080fd5b6107e2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611f76565b604051808215151515815260200191505060405180910390f35b341561080757600080fd5b6108d8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050612236565b604051808215151515815260200191505060405180910390f35b34156108fd57600080fd5b61091760048080356000191690602001909190505061227a565b604051808215151515815260200191505060405180910390f35b341561093c57600080fd5b610987600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506122a2565b6040518082815260200191505060405180910390f35b610a2b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610b5557600080fd5b6102c65a03f11515610b6657600080fd5b50505060405180519050507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678233836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30346000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610d4257600080fd5b6102c65a03f11515610d5357600080fd5b5050506040518051905050610dec346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78133346000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a150565b6000610fa28989898989898989611aec565b1515610fad57600080fd5b610fb98989898961235f565b1515610fc457600080fd5b6001905098975050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff16319050610ffb838484611f76565b508273ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b151561106a57600080fd5b6102c65a03f1151561107b57600080fd5b505050816110a9823073ffffffffffffffffffffffffffffffffffffffff163161232890919063ffffffff16565b1415156110b257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156110f257600080fd5b7ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678333846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1505050565b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd8530856000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15156112fa57600080fd5b6102c65a03f1151561130b57600080fd5b50505060405180519050506113a4826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78385846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1600190509392505050565b60008060007f313236b6cd8d12125421e44528d8f5ba070a781aeac3e5ae45e314b818734ec36001029150818b8b8b8b8b8b8b8b604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140185815260200184815260200183815260200182815260200198505050505050505050604051809103902060405180836000191660001916815260200182600019166000191681526020019250505060405180910390209050809250505098975050505050505050565b60008060008061170b8c8c308d8d8d8d8d611550565b925073__ECRecovery____________________________6319045a2584876000604051602001526040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117ab578082015181840152602081019050611790565b50505050905090810190601f1680156117d85780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15156117f557600080fd5b6102c65a03f4151561180657600080fd5b5050506040518051905091508b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151561184c57600080fd5b600260008460001916600019168152602001908152602001600020549050600280600085600019166000191681526020019081526020016000208190555060008114151561189957600080fd5b6001935050505098975050505050505050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b600061197e858486611219565b9050949350505050565b600081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a618685604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3600190509392505050565b600080600080611b028c8c308d8d8d8d8d611550565b925073__ECRecovery____________________________6319045a2584876000604051602001526040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ba2578082015181840152602081019050611b87565b50505050905090810190601f168015611bcf5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1515611bec57600080fd5b6102c65a03f41515611bfd57600080fd5b5050506040518051905091508173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16141515611c4357600080fd5b86431115611c5057600080fd5b600260008460001916600019168152602001908152602001600020549050600160026000856000191660001916815260200190815260200160002081905550600081141515611c9e57600080fd5b88600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508973ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff167fa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a618d8c604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a387600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508973ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff167fa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61338b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3611f588c338c8b6127ec565b1515611f6357600080fd5b6001935050505098975050505050505050565b6000612006826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612113826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f8685604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3600190509392505050565b60006122488989898989898989611aec565b151561225357600080fd5b61225f898989896127ec565b151561226a57600080fd5b6001905098975050505050505050565b6000806002600084600019166000191681526020019081526020016000205414159050919050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561233657fe5b818303905092915050565b600080828401905083811015151561235557fe5b8091505092915050565b60006123ef826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061253a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156126a257600080fd5b6102c65a03f115156126b357600080fd5b50505060405180519050507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678386846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a160019050949350505050565b600061287c826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506129c782600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b12826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f8685604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3600190509493505050505600a165627a7a72305820c715e8af6248d174151ef91472c856c2833722e2ae8c45a72cc2f9a2935959730029","deployedBytecode":"0x6060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306b091f9146100e0578063141bc5061461012257806320acbc83146101505780632486c7291461024657806339dc5ef21461028857806339e69c6e146103015780633e9ed7e4146103d75780638e8758d8146104cd5780638f4ffcb114610558578063912d6e2814610614578063a51fbb3f1461068d578063a64b6e5f14610783578063a9ff2a5e146107fc578063df8f373e146108f2578063f7888aec14610931575b600080fd5b34156100eb57600080fd5b610120600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061099d565b005b61014e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c97565b005b341561015b57600080fd5b61022c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610f90565b604051808215151515815260200191505060405180910390f35b341561025157600080fd5b610286600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fd4565b005b341561029357600080fd5b6102e7600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611219565b604051808215151515815260200191505060405180910390f35b341561030c57600080fd5b6103b9600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091908035906020019091908035906020019091905050611550565b60405180826000191660001916815260200191505060405180910390f35b34156103e257600080fd5b6104b3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506116f5565b604051808215151515815260200191505060405180910390f35b34156104d857600080fd5b610542600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118ac565b6040518082815260200191505060405180910390f35b341561056357600080fd5b6105fa600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611971565b604051808215151515815260200191505060405180910390f35b341561061f57600080fd5b610673600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611988565b604051808215151515815260200191505060405180910390f35b341561069857600080fd5b610769600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611aec565b604051808215151515815260200191505060405180910390f35b341561078e57600080fd5b6107e2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611f76565b604051808215151515815260200191505060405180910390f35b341561080757600080fd5b6108d8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803590602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050612236565b604051808215151515815260200191505060405180910390f35b34156108fd57600080fd5b61091760048080356000191690602001909190505061227a565b604051808215151515815260200191505060405180910390f35b341561093c57600080fd5b610987600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506122a2565b6040518082815260200191505060405180910390f35b610a2b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610b5557600080fd5b6102c65a03f11515610b6657600080fd5b50505060405180519050507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678233836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30346000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610d4257600080fd5b6102c65a03f11515610d5357600080fd5b5050506040518051905050610dec346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78133346000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a150565b6000610fa28989898989898989611aec565b1515610fad57600080fd5b610fb98989898961235f565b1515610fc457600080fd5b6001905098975050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff16319050610ffb838484611f76565b508273ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b151561106a57600080fd5b6102c65a03f1151561107b57600080fd5b505050816110a9823073ffffffffffffffffffffffffffffffffffffffff163161232890919063ffffffff16565b1415156110b257fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156110f257600080fd5b7ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678333846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1505050565b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd8530856000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15156112fa57600080fd5b6102c65a03f1151561130b57600080fd5b50505060405180519050506113a4826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78385846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1600190509392505050565b60008060007f313236b6cd8d12125421e44528d8f5ba070a781aeac3e5ae45e314b818734ec36001029150818b8b8b8b8b8b8b8b604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140185815260200184815260200183815260200182815260200198505050505050505050604051809103902060405180836000191660001916815260200182600019166000191681526020019250505060405180910390209050809250505098975050505050505050565b60008060008061170b8c8c308d8d8d8d8d611550565b925073__ECRecovery____________________________6319045a2584876000604051602001526040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117ab578082015181840152602081019050611790565b50505050905090810190601f1680156117d85780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15156117f557600080fd5b6102c65a03f4151561180657600080fd5b5050506040518051905091508b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151561184c57600080fd5b600260008460001916600019168152602001908152602001600020549050600280600085600019166000191681526020019081526020016000208190555060008114151561189957600080fd5b6001935050505098975050505050505050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b600061197e858486611219565b9050949350505050565b600081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a618685604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3600190509392505050565b600080600080611b028c8c308d8d8d8d8d611550565b925073__ECRecovery____________________________6319045a2584876000604051602001526040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ba2578082015181840152602081019050611b87565b50505050905090810190601f168015611bcf5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1515611bec57600080fd5b6102c65a03f41515611bfd57600080fd5b5050506040518051905091508173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16141515611c4357600080fd5b86431115611c5057600080fd5b600260008460001916600019168152602001908152602001600020549050600160026000856000191660001916815260200190815260200160002081905550600081141515611c9e57600080fd5b88600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508973ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff167fa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a618d8c604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a387600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508973ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff167fa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61338b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3611f588c338c8b6127ec565b1515611f6357600080fd5b6001935050505098975050505050505050565b6000612006826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612113826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f8685604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3600190509392505050565b60006122488989898989898989611aec565b151561225357600080fd5b61225f898989896127ec565b151561226a57600080fd5b6001905098975050505050505050565b6000806002600084600019166000191681526020019081526020016000205414159050919050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561233657fe5b818303905092915050565b600080828401905083811015151561235557fe5b8091505092915050565b60006123ef826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061253a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156126a257600080fd5b6102c65a03f115156126b357600080fd5b50505060405180519050507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678386846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a160019050949350505050565b600061287c826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506129c782600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232890919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b12826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461234190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f8685604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a3600190509493505050505600a165627a7a72305820c715e8af6248d174151ef91472c856c2833722e2ae8c45a72cc2f9a2935959730029","sourceMap":"1636:10029:1:-;;;2637:36;;;;;;;;1636:10029;;;;;;","deployedSourceMap":"1636:10029:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:8;;;5046:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2889:770;;;;;;;;;;;;;;;;;;;;8856:622;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:633;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4612:407;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6944:550;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10336:843;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10149:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11416:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5918:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7501:1317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6174:313;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9520:622;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11186:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5707:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5046:263;5137:39;5169:6;5137:8;:15;5146:5;5137:15;;;;;;;;;;;;;;;:27;5153:10;5137:27;;;;;;;;;;;;;;;;:31;;:39;;;;:::i;:::-;5107:8;:15;5116:5;5107:15;;;;;;;;;;;;;;;:27;5123:10;5107:27;;;;;;;;;;;;;;;:69;;;;5198:5;5183:30;;;5214:10;5226:6;5183:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:64;5249:5;5256:10;5268:6;5276:8;:15;5285:5;5276:15;;;;;;;;;;;;;;;:27;5292:10;5276:27;;;;;;;;;;;;;;;;5240:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5046:263;;:::o;2889:770::-;3165:16;3148:43;;;3192:4;3198:9;3148:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3503:53;3546:9;3503:8;:26;3512:16;3503:26;;;;;;;;;;;;;;;:38;3530:10;3503:38;;;;;;;;;;;;;;;;:42;;:53;;;;:::i;:::-;3462:8;:26;3471:16;3462:26;;;;;;;;;;;;;;;:38;3489:10;3462:38;;;;;;;;;;;;;;;:94;;;;3566:88;3574:16;3592:10;3604:9;3615:8;:26;3624:16;3615:26;;;;;;;;;;;;;;;:38;3642:10;3615:38;;;;;;;;;;;;;;;;3566:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2889:770;:::o;8856:622::-;9080:4;9166:86;9193:4;9198:2;9201:5;9207:6;9214:13;9228:7;9236:5;9242:9;9166:26;:86::i;:::-;9165:87;9162:100;;;9254:8;;;9162:100;9397:44;9417:4;9423:2;9427:5;9434:6;9397:18;:44::i;:::-;9396:45;9393:58;;;9443:8;;;9393:58;9468:4;9461:11;;8856:622;;;;;;;;;;:::o;3902:633::-;4066:18;4087:4;:12;;;4066:33;;4108:34;4123:5;4129;4135:6;4108:14;:34::i;:::-;;4168:5;4151:32;;;4184:6;4151:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4373:6;4338:31;4355:13;4338:4;:12;;;:16;;:31;;;;:::i;:::-;:41;4331:49;;;;;;4428:10;:19;;:27;4448:6;4428:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4465:64;4474:5;4481:10;4493:6;4501:8;:15;4510:5;4501:15;;;;;;;;;;;;;;;:27;4517:10;4501:27;;;;;;;;;;;;;;;;4465:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:633;;;:::o;4612:407::-;4697:4;4828:5;4813:34;;;4848:4;4854;4860:6;4813:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:33;4925:6;4899:8;:15;4908:5;4899:15;;;;;;;;;;;;;;;:21;4915:4;4899:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;4875:8;:15;4884:5;4875:15;;;;;;;;;;;;;;;:21;4891:4;4875:21;;;;;;;;;;;;;;;:57;;;;4943:51;4951:5;4958:4;4964:6;4972:8;:15;4981:5;4972:15;;;;;;;;;;;;;;;:21;4988:4;4972:21;;;;;;;;;;;;;;;;4943:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5010:4;5003:11;;4612:407;;;;;:::o;6944:550::-;7172:7;7194:27;7302:21;7224:66;7194:96;;;;7344:19;7382:4;7387:2;7390:13;7404:5;7410:6;7417:13;7431:7;7439:5;7377:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7326:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7302:155;;7475:13;7468:20;;6944:550;;;;;;;;;;;;:::o;10336:843::-;10505:4;10641:15;10747:32;10997:20;10659:75;10680:4;10685:2;10688:4;10693:5;10699:6;10706:13;10720:7;10728:5;10659:20;:75::i;:::-;10641:93;;10782:10;:18;10801:7;10809:9;10782:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10747:72:1;;10914:4;10886:32;;:24;:32;;;;10883:45;;;10920:8;;;10883:45;11020:16;:25;11037:7;11020:25;;;;;;;;;;;;;;;;;;10997:48;;11084:3;11056:16;:25;11073:7;11056:25;;;;;;;;;;;;;;;;;:31;;;;11134:3;11115:15;:22;;11112:36;;;11140:8;;;11112:36;11167:4;11160:11;;10336:843;;;;;;;;;;;;;:::o;10149:178::-;10250:14;10284:7;:14;10292:5;10284:14;;;;;;;;;;;;;;;:26;10299:10;10284:26;;;;;;;;;;;;;;;:35;10311:7;10284:35;;;;;;;;;;;;;;;;10277:42;;10149:178;;;;;:::o;11416:244::-;11514:4;11620:35;11634:4;11640:5;11647:6;11620:13;:35::i;:::-;11613:42;;11416:244;;;;;;:::o;5918:226::-;6002:12;6062:6;6024:7;:14;6032:5;6024:14;;;;;;;;;;;;;;;:26;6039:10;6024:26;;;;;;;;;;;;;;;:35;6051:7;6024:35;;;;;;;;;;;;;;;:44;;;;6097:5;6076:44;;6085:10;6076:44;;;6104:7;6113:6;6076:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;6135:4;6128:11;;5918:226;;;;;:::o;7501:1317::-;7719:4;7868:15;7971:32;8263:20;7886:75;7907:4;7912:2;7915:4;7920:5;7926:6;7933:13;7947:7;7955:5;7886:20;:75::i;:::-;7868:93;;8006:10;:18;8025:7;8033:9;8006:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7971:72:1;;8125:24;8117:32;;:4;:32;;;;8114:45;;;8151:8;;;8114:45;8236:7;8221:12;:22;8218:35;;;8245:8;;;8218:35;8286:16;:25;8303:7;8286:25;;;;;;;;;;;;;;;;;;8263:48;;8348:3;8320:16;:25;8337:7;8320:25;;;;;;;;;;;;;;;;;:31;;;;8390:3;8371:15;:22;;8368:36;;;8396:8;;;8368:36;8478:6;8451:7;:14;8459:5;8451:14;;;;;;;;;;;;;;;:20;8466:4;8451:20;;;;;;;;;;;;;;;:24;8472:2;8451:24;;;;;;;;;;;;;;;:33;;;;8508:5;8493:33;;8502:4;8493:33;;;8515:2;8519:6;8493:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;8607:13;8572:7;:14;8580:5;8572:14;;;;;;;;;;;;;;;:20;8587:4;8572:20;;;;;;;;;;;;;;;:32;8593:10;8572:32;;;;;;;;;;;;;;;:48;;;;8644:5;8629:48;;8638:4;8629:48;;;8651:10;8663:13;8629:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;8722:58;8741:4;8747:10;8759:5;8766:13;8722:18;:58::i;:::-;8721:59;8718:72;;;8782:8;;;8718:72;8808:4;8801:11;;7501:1317;;;;;;;;;;;;;:::o;6174:313::-;6254:12;6308:39;6340:6;6308:8;:15;6317:5;6308:15;;;;;;;;;;;;;;;:27;6324:10;6308:27;;;;;;;;;;;;;;;;:31;;:39;;;;:::i;:::-;6278:8;:15;6287:5;6278:15;;;;;;;;;;;;;;;:27;6294:10;6278:27;;;;;;;;;;;;;;;:69;;;;6379:31;6403:6;6379:8;:15;6388:5;6379:15;;;;;;;;;;;;;;;:19;6395:2;6379:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;6357:8;:15;6366:5;6357:15;;;;;;;;;;;;;;;:19;6373:2;6357:19;;;;;;;;;;;;;;;:53;;;;6441:5;6420:39;;6429:10;6420:39;;;6448:2;6452:6;6420:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;6476:4;6469:11;;6174:313;;;;;:::o;9520:622::-;9744:4;9830:86;9857:4;9862:2;9865:5;9871:6;9878:13;9892:7;9900:5;9906:9;9830:26;:86::i;:::-;9829:87;9826:100;;;9918:8;;;9826:100;10061:44;10081:4;10087:2;10091:5;10098:6;10061:18;:44::i;:::-;10060:45;10057:58;;;10107:8;;;10057:58;10132:4;10125:11;;9520:622;;;;;;;;;;:::o;11186:130::-;11248:4;11304:3;11276:16;:24;11293:6;11276:24;;;;;;;;;;;;;;;;;;:31;;11268:40;;11186:130;;;:::o;5707:121::-;5779:4;5801:8;:15;5810:5;5801:15;;;;;;;;;;;;;;;:21;5817:4;5801:21;;;;;;;;;;;;;;;;5794:28;;5707:121;;;;:::o;836:110:2:-;894:7;921:1;916;:6;;909:14;;;;;;940:1;936;:5;929:12;;836:110;;;;:::o;1008:129::-;1066:7;1081:9;1097:1;1093;:5;1081:17;;1116:1;1111;:6;;1104:14;;;;;;1131:1;1124:8;;1008:129;;;;;:::o;5314:387:1:-;5415:12;5461:33;5487:6;5461:8;:15;5470:5;5461:15;;;;;;;;;;;;;;;:21;5477:4;5461:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;5437:8;:15;5446:5;5437:15;;;;;;;;;;;;;;;:21;5453:4;5437:21;;;;;;;;;;;;;;;:57;;;;5529:36;5558:6;5529:7;:14;5537:5;5529:14;;;;;;;;;;;;;;;:20;5544:4;5529:20;;;;;;;;;;;;;;;:24;5550:2;5529:24;;;;;;;;;;;;;;;;:28;;:36;;;;:::i;:::-;5502:7;:14;5510:5;5502:14;;;;;;;;;;;;;;;:20;5517:4;5502:20;;;;;;;;;;;;;;;:24;5523:2;5502:24;;;;;;;;;;;;;;;:63;;;;5589:5;5574:30;;;5605:2;5609:6;5574:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5625:52;5634:5;5641:4;5647:6;5655:8;:15;5664:5;5655:15;;;;;;;;;;;;;;;:21;5671:4;5655:21;;;;;;;;;;;;;;;;5625:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5692:4;5685:11;;5314:387;;;;;;:::o;6493:383::-;6594:12;6641:33;6667:6;6641:8;:15;6650:5;6641:15;;;;;;;;;;;;;;;:21;6657:4;6641:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;6617:8;:15;6626:5;6617:15;;;;;;;;;;;;;;;:21;6633:4;6617:21;;;;;;;;;;;;;;;:57;;;;6710:36;6739:6;6710:7;:14;6718:5;6710:14;;;;;;;;;;;;;;;:20;6725:4;6710:20;;;;;;;;;;;;;;;:24;6731:2;6710:24;;;;;;;;;;;;;;;;:28;;:36;;;;:::i;:::-;6683:7;:14;6691:5;6683:14;;;;;;;;;;;;;;;:20;6698:4;6683:20;;;;;;;;;;;;;;;:24;6704:2;6683:24;;;;;;;;;;;;;;;:63;;;;6777:31;6801:6;6777:8;:15;6786:5;6777:15;;;;;;;;;;;;;;;:19;6793:2;6777:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;6755:8;:15;6764:5;6755:15;;;;;;;;;;;;;;;:19;6771:2;6755:19;;;;;;;;;;;;;;;:53;;;;6833:4;6817:33;;6826:5;6817:33;;;6839:2;6843:6;6817:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;6866:4;6859:11;;6493:383;;;;;;:::o","source":"pragma solidity ^0.4.18;\n\nimport \"./ECRecovery.sol\";\n\nimport \"./SafeMath.sol\";\n\n\n/*\n\nThis is a token wallet contract\n\nStore your tokens in this contract to give them super powers\n\nTokens can be spent from the contract with only an ecSignature from the owner - onchain approve is not needed\n\n\n*/\n\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\n//wEth interface\ncontract WrapperInterface\n{\n  function() public payable;\n  function deposit() public payable ;\n  function withdraw(uint wad) public;\n  function totalSupply() public view returns (uint);\n  function approve(address guy, uint wad) public returns (bool);\n  function transfer(address dst, uint wad) public returns (bool);\n  function transferFrom(address src, address dst, uint wad);\n\n\n  event  Approval(address indexed src, address indexed guy, uint wad);\n  event  Transfer(address indexed src, address indexed dst, uint wad);\n  event  Deposit(address indexed dst, uint wad);\n  event  Withdrawal(address indexed src, uint wad);\n\n}\n\n\n\n\n\ncontract LavaWallet {\n\n\n  using SafeMath for uint;\n\n  // balances[tokenContractAddress][EthereumAccountAddress] = 0\n   mapping(address => mapping (address => uint256)) balances;\n\n   //token => owner => spender : amount\n   mapping(address => mapping (address => mapping (address => uint256))) allowed;\n\n\n   //like orderFills in lavadex..\n   //how much of the offchain sig approval has been 'drained' or used up\n  // mapping (address => mapping (bytes32 => uint)) public signatureApprovalDrained; //mapping of user accounts to mapping of order hashes to uints (amount of order that has been filled)\n\n\n   //deprecated\n   mapping(bytes32 => uint256) burnedSignatures;\n\n\n  event Deposit(address token, address user, uint amount, uint balance);\n  event Withdraw(address token, address user, uint amount, uint balance);\n  event Transfer(address indexed from, address indexed to,address token, uint tokens);\n  event Approval(address indexed tokenOwner, address indexed spender,address token, uint tokens);\n\n  function LavaWallet() public  {\n\n  }\n\n\n  //do not allow ether to enter\n  function() public payable {\n      revert();\n  }\n\n\n  //send Ether into this method, it gets wrapped and then deposited in this contract as a token balance assigned to the sender\n  function depositAndWrap(address wrappingContract ) public payable\n  {\n\n    //forward this payable ether into the wrapping contract\n    WrapperInterface(wrappingContract).deposit.value(msg.value);\n\n\n    //send the tokens from the wrapping contract to here\n    WrapperInterface(wrappingContract).transfer(this, msg.value);\n\n    // make sure that the amount of tokens we got are equal to the amount of ether we got\n    //assert(this.balance.sub(balanceBefore) == tokens);\n\n    //since the token balance is recorded in terms of the exact ether balance, no assert is needed\n    balances[wrappingContract][msg.sender] = balances[wrappingContract][msg.sender].add(msg.value);\n\n\n\n\n    Deposit(wrappingContract, msg.sender, msg.value, balances[wrappingContract][msg.sender]);\n  }\n\n  //when this contract has control of wrapped eth, this is a way to easily withdraw it as ether\n  //if there is any Ether in the contract before this function is called, it can be withdrawn using this method and a false wrapping contract.\n  function unwrapAndWithdraw(address token, uint256 tokens) public\n  {\n      //transfer the tokens into the wrapping contract which is also the token contract\n\n      uint balanceBefore = this.balance;\n\n      transferTokens(token,token,tokens);\n\n      WrapperInterface(token).withdraw(tokens);\n\n      //make sure it is not a faulty wrapping contract\n      //make sure the wrapper contract just sent us ether equal to 'tokens'\n      assert(this.balance.sub(balanceBefore) == tokens);\n\n      //send ether to the token-sender\n      msg.sender.transfer(tokens);\n\n\n      Withdraw(token, msg.sender, tokens, balances[token][msg.sender]);\n\n  }\n\n\n   //remember you need pre-approval for this - nice with ApproveAndCall\n  function depositTokens(address from, address token, uint256 tokens ) public returns (bool)\n  {\n      //we already have approval so lets do a transferFrom - transfer the tokens into this contract\n      ERC20Interface(token).transferFrom(from, this, tokens);\n      balances[token][from] = balances[token][from].add(tokens);\n\n\n\n      Deposit(token, from, tokens, balances[token][from]);\n\n      return true;\n  }\n\n\n  //no approve needed\n  function withdrawTokens(address token, uint256 tokens) {\n    balances[token][msg.sender] = balances[token][msg.sender].sub(tokens);\n\n    ERC20Interface(token).transfer(msg.sender, tokens);\n\n    Withdraw(token, msg.sender, tokens, balances[token][msg.sender]);\n  }\n\n\n  function withdrawTokensFrom( address from, address to,address token,  uint tokens) internal returns (bool success) {\n      balances[token][from] = balances[token][from].sub(tokens);\n      allowed[token][from][to] = allowed[token][from][to].sub(tokens);\n\n      ERC20Interface(token).transfer(to, tokens);\n\n      Withdraw(token, from, tokens, balances[token][from]);\n      return true;\n  }\n\n\n\n  function balanceOf(address token,address user) public constant returns (uint) {\n       return balances[token][user];\n   }\n\n\n\n\n  //remember... can also be used to remove approval by using a 'tokens' value of 0\n  function approveTokens(address spender, address token, uint tokens) public returns (bool success) {\n      allowed[token][msg.sender][spender] = tokens;\n      Approval(msg.sender, token, spender, tokens);\n      return true;\n  }\n\n \n\n  //no approve needed\n   function transferTokens(address to, address token, uint tokens) public returns (bool success) {\n        balances[token][msg.sender] = balances[token][msg.sender].sub(tokens);\n        balances[token][to] = balances[token][to].add(tokens);\n        Transfer(msg.sender, token, to, tokens);\n        return true;\n    }\n\n\n   function transferTokensFrom( address from, address to,address token,  uint tokens) internal returns (bool success) {\n       balances[token][from] = balances[token][from].sub(tokens);\n       allowed[token][from][to] = allowed[token][from][to].sub(tokens);\n       balances[token][to] = balances[token][to].add(tokens);\n       Transfer(token, from, to, tokens);\n       return true;\n   }\n\n   //nonce is the same thing as a 'check number'\n\n   //EIP 712\n   function getLavaTypedDataHash( address from, address to, address walletAddress, address token, uint256 tokens, uint256 relayerReward,\n                                     uint256 expires, uint256 nonce) public constant returns (bytes32)\n   {\n        bytes32 hardcodedSchemaHash = 0x313236b6cd8d12125421e44528d8f5ba070a781aeac3e5ae45e314b818734ec3 ;\n\n        bytes32 typedDataHash = sha3(\n            hardcodedSchemaHash,\n            sha3(from,to,walletAddress,token,tokens,relayerReward,expires,nonce)\n          );\n\n        return typedDataHash;\n   }\n\n\n\n   function approveTokensWithSignature(address from, address to, address token, uint256 tokens, uint256 relayerReward,\n                                     uint256 expires, uint256 nonce, bytes signature) public returns (bool)\n   {\n       //bytes32 sigHash = sha3(\"\\x19Ethereum Signed Message:\\n32\",this, from, to, token, tokens, relayerReward, expires, nonce);\n\n       bytes32 sigHash = getLavaTypedDataHash(from,to,this,token,tokens,relayerReward,expires,nonce);\n\n       address recoveredSignatureSigner = ECRecovery.recover(sigHash,signature);\n\n       //make sure the signer is the depositor of the tokens\n       if(from != recoveredSignatureSigner) revert();\n\n       //make sure the signature has not expired\n       if(block.number > expires) revert();\n\n       uint burnedSignature = burnedSignatures[sigHash];\n       burnedSignatures[sigHash] = 0x1; //spent\n       if(burnedSignature != 0x0 ) revert();\n\n\n       //approve transfer of tokens\n       allowed[token][from][to] = tokens;\n       Approval(from, token, to, tokens);\n\n       //approve the relayer reward\n       allowed[token][from][msg.sender] = relayerReward;\n       Approval(from, token, msg.sender, relayerReward);\n\n       //transferRelayerReward\n       if(!transferTokensFrom(from, msg.sender, token, relayerReward)) revert();\n\n\n       return true;\n   }\n\n   //the tokens leave lava wallet\n  function withdrawTokensFromWithSignature(address from, address to,  address token, uint256 tokens,  uint256 relayerReward,\n                                    uint256 expires, uint256 nonce, bytes signature) public returns (bool)\n  {\n      //check to make sure that signature == ecrecover signature\n\n      if(!approveTokensWithSignature(from,to,token,tokens,relayerReward,expires,nonce,signature)) revert();\n\n      //it can be requested that fewer tokens be sent that were approved -- the whole approval will be invalidated though\n      if(!withdrawTokensFrom( from, to, token, tokens)) revert();\n\n\n      return true;\n\n  }\n\n   //the tokens remain in lava wallet\n  function transferTokensFromWithSignature(address from, address to,  address token, uint256 tokens,  uint256 relayerReward,\n                                    uint256 expires, uint256 nonce, bytes signature) public returns (bool)\n  {\n      //check to make sure that signature == ecrecover signature\n\n      if(!approveTokensWithSignature(from,to,token,tokens,relayerReward,expires,nonce,signature)) revert();\n\n      //it can be requested that fewer tokens be sent that were approved -- the whole approval will be invalidated though\n      if(!transferTokensFrom( from, to, token, tokens)) revert();\n\n\n      return true;\n\n  }\n\n\n    function tokenAllowance(address token, address tokenOwner, address spender) public constant returns (uint remaining) {\n\n        return allowed[token][tokenOwner][spender];\n\n    }\n\n\n\n     function burnSignature(address from, address to, address token, uint256 tokens, uint256 relayerReward, uint256 expires, uint256 nonce,  bytes signature) public returns (bool)\n     {\n\n       //bytes32 sigHash = sha3(\"\\x19Ethereum Signed Message:\\n32\",this, from, to, token, tokens, expires, nonce);\n       bytes32 sigHash = getLavaTypedDataHash(from,to,this,token,tokens,relayerReward,expires,nonce);\n\n\n         address recoveredSignatureSigner = ECRecovery.recover(sigHash,signature);\n\n         //maker sure the invalidator is the signer\n         if(recoveredSignatureSigner != from) revert();\n\n\n         //make sure this signature has never been used\n         uint burnedSignature = burnedSignatures[sigHash];\n         burnedSignatures[sigHash] = 0x2; //invalidated\n         if(burnedSignature != 0x0 ) revert();\n\n         return true;\n     }\n\n     function signatureBurned(bytes32 digest) public view returns (bool)\n     {\n       return (burnedSignatures[digest] != 0x0);\n     }\n\n\n   /*\n     Receive approval to spend tokens and perform any action all in one transaction\n   */\n function receiveApproval(address from, uint256 tokens, address token, bytes data) public returns (bool) {\n\n   //parse the data:   first byte is for 'action_id'\n   //byte action_id = data[0];\n\n\n\n   return depositTokens(from, token, tokens );\n\n }\n\n\n\n}\n","sourcePath":"/home/andy/dev/lava-wallet/contracts/LavaWallet.sol","ast":{"absolutePath":"/home/andy/dev/lava-wallet/contracts/LavaWallet.sol","exportedSymbols":{"ERC20Interface":[135],"LavaWallet":[1130],"WrapperInterface":[207]},"id":1131,"nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.4",".18"],"nodeType":"PragmaDirective","src":"0:24:1"},{"absolutePath":"/home/andy/dev/lava-wallet/contracts/ECRecovery.sol","file":"./ECRecovery.sol","id":67,"nodeType":"ImportDirective","scope":1131,"sourceUnit":65,"src":"26:26:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/andy/dev/lava-wallet/contracts/SafeMath.sol","file":"./SafeMath.sol","id":68,"nodeType":"ImportDirective","scope":1131,"sourceUnit":1229,"src":"54:24:1","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":false,"id":135,"linearizedBaseContracts":[135],"name":"ERC20Interface","nodeType":"ContractDefinition","nodes":[{"body":null,"id":73,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"346:2:1"},"payable":false,"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"name":"","nodeType":"VariableDeclaration","scope":73,"src":"374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint","nodeType":"ElementaryTypeName","src":"374:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"373:6:1"},"scope":135,"src":"326:54:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":80,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":80,"src":"404:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"403:20:1"},"payable":false,"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"name":"balance","nodeType":"VariableDeclaration","scope":80,"src":"449:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint","nodeType":"ElementaryTypeName","src":"449:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"448:14:1"},"scope":135,"src":"385:78:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":89,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":89,"src":"487:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":84,"name":"spender","nodeType":"VariableDeclaration","scope":89,"src":"507:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"486:37:1"},"payable":false,"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"remaining","nodeType":"VariableDeclaration","scope":89,"src":"549:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint","nodeType":"ElementaryTypeName","src":"549:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"548:16:1"},"scope":135,"src":"468:97:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":98,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"name":"to","nodeType":"VariableDeclaration","scope":98,"src":"588:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":93,"name":"tokens","nodeType":"VariableDeclaration","scope":98,"src":"600:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint","nodeType":"ElementaryTypeName","src":"600:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"587:25:1"},"payable":false,"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"name":"success","nodeType":"VariableDeclaration","scope":98,"src":"629:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":95,"name":"bool","nodeType":"ElementaryTypeName","src":"629:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"628:14:1"},"scope":135,"src":"570:73:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":107,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"name":"spender","nodeType":"VariableDeclaration","scope":107,"src":"665:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":102,"name":"tokens","nodeType":"VariableDeclaration","scope":107,"src":"682:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint","nodeType":"ElementaryTypeName","src":"682:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"664:30:1"},"payable":false,"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"name":"success","nodeType":"VariableDeclaration","scope":107,"src":"711:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104,"name":"bool","nodeType":"ElementaryTypeName","src":"711:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"710:14:1"},"scope":135,"src":"648:77:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":118,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"name":"from","nodeType":"VariableDeclaration","scope":118,"src":"752:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"752:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":111,"name":"to","nodeType":"VariableDeclaration","scope":118,"src":"766:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":113,"name":"tokens","nodeType":"VariableDeclaration","scope":118,"src":"778:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint","nodeType":"ElementaryTypeName","src":"778:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"751:39:1"},"payable":false,"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"name":"success","nodeType":"VariableDeclaration","scope":118,"src":"807:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":115,"name":"bool","nodeType":"ElementaryTypeName","src":"807:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"806:14:1"},"scope":135,"src":"730:91:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"anonymous":false,"id":126,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"indexed":true,"name":"from","nodeType":"VariableDeclaration","scope":126,"src":"842:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":126,"src":"864:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"864:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":124,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":126,"src":"884:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint","nodeType":"ElementaryTypeName","src":"884:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"841:55:1"},"src":"827:70:1"},{"anonymous":false,"id":134,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"indexed":true,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":134,"src":"917:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":130,"indexed":true,"name":"spender","nodeType":"VariableDeclaration","scope":134,"src":"945:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":132,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":134,"src":"970:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint","nodeType":"ElementaryTypeName","src":"970:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"916:66:1"},"src":"902:81:1"}],"scope":1131,"src":"296:689:1"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":false,"id":207,"linearizedBaseContracts":[207],"name":"WrapperInterface","nodeType":"ContractDefinition","nodes":[{"body":null,"id":138,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"1043:2:1"},"payable":true,"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[],"src":"1060:0:1"},"scope":207,"src":"1035:26:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":null,"id":141,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[],"src":"1080:2:1"},"payable":true,"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"1098:0:1"},"scope":207,"src":"1064:35:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":null,"id":146,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"name":"wad","nodeType":"VariableDeclaration","scope":146,"src":"1120:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint","nodeType":"ElementaryTypeName","src":"1120:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1119:10:1"},"payable":false,"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[],"src":"1136:0:1"},"scope":207,"src":"1102:35:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":151,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"1160:2:1"},"payable":false,"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"name":"","nodeType":"VariableDeclaration","scope":151,"src":"1184:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint","nodeType":"ElementaryTypeName","src":"1184:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1183:6:1"},"scope":207,"src":"1140:50:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":160,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"name":"guy","nodeType":"VariableDeclaration","scope":160,"src":"1210:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"1210:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":155,"name":"wad","nodeType":"VariableDeclaration","scope":160,"src":"1223:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint","nodeType":"ElementaryTypeName","src":"1223:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1209:23:1"},"payable":false,"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"name":"","nodeType":"VariableDeclaration","scope":160,"src":"1249:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":157,"name":"bool","nodeType":"ElementaryTypeName","src":"1249:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1248:6:1"},"scope":207,"src":"1193:62:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":169,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"dst","nodeType":"VariableDeclaration","scope":169,"src":"1276:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1276:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":164,"name":"wad","nodeType":"VariableDeclaration","scope":169,"src":"1289:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint","nodeType":"ElementaryTypeName","src":"1289:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1275:23:1"},"payable":false,"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"name":"","nodeType":"VariableDeclaration","scope":169,"src":"1315:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"1315:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1314:6:1"},"scope":207,"src":"1258:63:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":178,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"name":"src","nodeType":"VariableDeclaration","scope":178,"src":"1346:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":173,"name":"dst","nodeType":"VariableDeclaration","scope":178,"src":"1359:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"1359:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":175,"name":"wad","nodeType":"VariableDeclaration","scope":178,"src":"1372:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint","nodeType":"ElementaryTypeName","src":"1372:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1345:36:1"},"payable":false,"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"1381:0:1"},"scope":207,"src":"1324:58:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"anonymous":false,"id":186,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"indexed":true,"name":"src","nodeType":"VariableDeclaration","scope":186,"src":"1403:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":182,"indexed":true,"name":"guy","nodeType":"VariableDeclaration","scope":186,"src":"1424:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":184,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":186,"src":"1445:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint","nodeType":"ElementaryTypeName","src":"1445:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1402:52:1"},"src":"1387:68:1"},{"anonymous":false,"id":194,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"indexed":true,"name":"src","nodeType":"VariableDeclaration","scope":194,"src":"1474:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":190,"indexed":true,"name":"dst","nodeType":"VariableDeclaration","scope":194,"src":"1495:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"1495:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":192,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":194,"src":"1516:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint","nodeType":"ElementaryTypeName","src":"1516:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1473:52:1"},"src":"1458:68:1"},{"anonymous":false,"id":200,"name":"Deposit","nodeType":"EventDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"indexed":true,"name":"dst","nodeType":"VariableDeclaration","scope":200,"src":"1544:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":198,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":200,"src":"1565:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint","nodeType":"ElementaryTypeName","src":"1565:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1543:31:1"},"src":"1529:46:1"},{"anonymous":false,"id":206,"name":"Withdrawal","nodeType":"EventDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"indexed":true,"name":"src","nodeType":"VariableDeclaration","scope":206,"src":"1596:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":204,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":206,"src":"1617:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint","nodeType":"ElementaryTypeName","src":"1617:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1595:31:1"},"src":"1578:49:1"}],"scope":1131,"src":"1005:625:1"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":1130,"linearizedBaseContracts":[1130],"name":"LavaWallet","nodeType":"ContractDefinition","nodes":[{"id":210,"libraryName":{"contractScope":null,"id":208,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":1228,"src":"1668:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$1228","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1662:24:1","typeName":{"id":209,"name":"uint","nodeType":"ElementaryTypeName","src":"1681:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":216,"name":"balances","nodeType":"VariableDeclaration","scope":1130,"src":"1755:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":215,"keyType":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"1763:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1755:48:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":214,"keyType":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1783:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1774:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"value":null,"visibility":"internal"},{"constant":false,"id":224,"name":"allowed","nodeType":"VariableDeclaration","scope":1130,"src":"1858:77:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"},"typeName":{"id":223,"keyType":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1858:69:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"},"valueType":{"id":222,"keyType":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1877:49:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":221,"keyType":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"1906:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1897:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"value":null,"visibility":"internal"},{"constant":false,"id":228,"name":"burnedSignatures","nodeType":"VariableDeclaration","scope":1130,"src":"2254:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":227,"keyType":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2262:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2254:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"internal"},{"anonymous":false,"id":238,"name":"Deposit","nodeType":"EventDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":238,"src":"2318:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"2318:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":232,"indexed":false,"name":"user","nodeType":"VariableDeclaration","scope":238,"src":"2333:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"2333:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":234,"indexed":false,"name":"amount","nodeType":"VariableDeclaration","scope":238,"src":"2347:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint","nodeType":"ElementaryTypeName","src":"2347:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":236,"indexed":false,"name":"balance","nodeType":"VariableDeclaration","scope":238,"src":"2360:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint","nodeType":"ElementaryTypeName","src":"2360:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2317:56:1"},"src":"2304:70:1"},{"anonymous":false,"id":248,"name":"Withdraw","nodeType":"EventDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":248,"src":"2392:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":242,"indexed":false,"name":"user","nodeType":"VariableDeclaration","scope":248,"src":"2407:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":244,"indexed":false,"name":"amount","nodeType":"VariableDeclaration","scope":248,"src":"2421:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint","nodeType":"ElementaryTypeName","src":"2421:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":246,"indexed":false,"name":"balance","nodeType":"VariableDeclaration","scope":248,"src":"2434:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint","nodeType":"ElementaryTypeName","src":"2434:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2391:56:1"},"src":"2377:71:1"},{"anonymous":false,"id":258,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"indexed":true,"name":"from","nodeType":"VariableDeclaration","scope":258,"src":"2466:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":252,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":258,"src":"2488:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"2488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":258,"src":"2507:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":258,"src":"2522:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint","nodeType":"ElementaryTypeName","src":"2522:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2465:69:1"},"src":"2451:84:1"},{"anonymous":false,"id":268,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"indexed":true,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":268,"src":"2553:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"2553:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":262,"indexed":true,"name":"spender","nodeType":"VariableDeclaration","scope":268,"src":"2581:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"2581:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":264,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":268,"src":"2605:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"2605:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":266,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":268,"src":"2620:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint","nodeType":"ElementaryTypeName","src":"2620:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2552:80:1"},"src":"2538:95:1"},{"body":{"id":271,"nodeType":"Block","src":"2667:6:1","statements":[]},"id":272,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"LavaWallet","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"payable":false,"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":1130,"src":"2637:36:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":278,"nodeType":"Block","src":"2736:21:1","statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":275,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"2744:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"2744:8:1"}]},"id":279,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"2718:2:1"},"payable":true,"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"2736:0:1"},"scope":1130,"src":"2710:47:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":334,"nodeType":"Block","src":"2957:702:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3073:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3073:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":285,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3041:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"WrapperInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3024:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WrapperInterface_$207_$","typeString":"type(contract WrapperInterface)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3024:34:1","typeDescriptions":{"typeIdentifier":"t_contract$_WrapperInterface_$207","typeString":"contract WrapperInterface"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":141,"src":"3024:42:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3024:48:1","typeDescriptions":{"typeIdentifier":"t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$","typeString":"function (uint256) returns (function () payable external)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3024:59:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":292,"nodeType":"ExpressionStatement","src":"3024:59:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":297,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"3192:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3198:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3198:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":294,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3165:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":293,"name":"WrapperInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3148:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WrapperInterface_$207_$","typeString":"type(contract WrapperInterface)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3148:34:1","typeDescriptions":{"typeIdentifier":"t_contract$_WrapperInterface_$207","typeString":"contract WrapperInterface"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":169,"src":"3148:43:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3148:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":301,"nodeType":"ExpressionStatement","src":"3148:60:1"},{"expression":{"argumentTypes":null,"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":302,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3462:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":306,"indexExpression":{"argumentTypes":null,"id":303,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3471:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3462:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":307,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3489:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3489:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3462:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3546:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3546:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":308,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3503:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":310,"indexExpression":{"argumentTypes":null,"id":309,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3512:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3503:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":313,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":311,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3530:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3530:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3503:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"3503:42:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3503:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3462:94:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"3462:94:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":321,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3574:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3592:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3592:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":324,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3604:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3604:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":326,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3615:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":328,"indexExpression":{"argumentTypes":null,"id":327,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3624:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3615:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":331,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":329,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3642:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3642:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3615:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":320,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"3566:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3566:88:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"3566:88:1"}]},"id":335,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"depositAndWrap","nodeType":"FunctionDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"name":"wrappingContract","nodeType":"VariableDeclaration","scope":335,"src":"2913:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"2913:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2912:27:1"},"payable":true,"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[],"src":"2957:0:1"},"scope":1130,"src":"2889:770:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":391,"nodeType":"Block","src":"3969:566:1","statements":[{"assignments":[343],"declarations":[{"constant":false,"id":343,"name":"balanceBefore","nodeType":"VariableDeclaration","scope":392,"src":"4066:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint","nodeType":"ElementaryTypeName","src":"4066:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":346,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4087:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4087:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4066:33:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4123:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":349,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4129:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":350,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4135:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":347,"name":"transferTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4108:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4108:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":352,"nodeType":"ExpressionStatement","src":"4108:34:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":357,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4184:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":354,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4168:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":353,"name":"WrapperInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"4151:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WrapperInterface_$207_$","typeString":"type(contract WrapperInterface)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4151:23:1","typeDescriptions":{"typeIdentifier":"t_contract$_WrapperInterface_$207","typeString":"contract WrapperInterface"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":146,"src":"4151:32:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4151:40:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"4151:40:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":364,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"4355:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":361,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4338:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4338:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"4338:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4338:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":366,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4373:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4338:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":360,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4331:6:1","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4331:49:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"4331:49:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":375,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4448:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4428:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4428:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4428:19:1","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4428:27:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"4428:27:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":379,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4474:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4481:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4481:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":382,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4493:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":383,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4501:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":385,"indexExpression":{"argumentTypes":null,"id":384,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4510:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4501:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":388,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4517:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4517:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4501:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":378,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4465:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4465:64:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"4465:64:1"}]},"id":392,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"unwrapAndWithdraw","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"name":"token","nodeType":"VariableDeclaration","scope":392,"src":"3929:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3929:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":339,"name":"tokens","nodeType":"VariableDeclaration","scope":392,"src":"3944:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3944:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3928:31:1"},"payable":false,"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"3969:0:1"},"scope":1130,"src":"3902:633:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":440,"nodeType":"Block","src":"4705:314:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":407,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4848:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4854:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"id":409,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4860:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":404,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4828:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":403,"name":"ERC20Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"4813:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Interface_$135_$","typeString":"type(contract ERC20Interface)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4813:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Interface_$135","typeString":"contract ERC20Interface"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":118,"src":"4813:34:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4813:54:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":411,"nodeType":"ExpressionStatement","src":"4813:54:1"},{"expression":{"argumentTypes":null,"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":412,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4875:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":415,"indexExpression":{"argumentTypes":null,"id":413,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4884:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4875:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":416,"indexExpression":{"argumentTypes":null,"id":414,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4891:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4875:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":423,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4925:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":417,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4899:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":419,"indexExpression":{"argumentTypes":null,"id":418,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4908:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4899:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"argumentTypes":null,"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4915:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4899:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"4899:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4899:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4875:57:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"4875:57:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":428,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4951:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":429,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4958:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":430,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4964:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":431,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4972:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":433,"indexExpression":{"argumentTypes":null,"id":432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4981:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4972:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":435,"indexExpression":{"argumentTypes":null,"id":434,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4988:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4972:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":427,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"4943:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4943:51:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"4943:51:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5010:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":402,"id":439,"nodeType":"Return","src":"5003:11:1"}]},"id":441,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"depositTokens","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"name":"from","nodeType":"VariableDeclaration","scope":441,"src":"4635:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"4635:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":396,"name":"token","nodeType":"VariableDeclaration","scope":441,"src":"4649:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":398,"name":"tokens","nodeType":"VariableDeclaration","scope":441,"src":"4664:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"4664:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4634:46:1"},"payable":false,"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"name":"","nodeType":"VariableDeclaration","scope":441,"src":"4697:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":400,"name":"bool","nodeType":"ElementaryTypeName","src":"4697:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4696:6:1"},"scope":1130,"src":"4612:407:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":487,"nodeType":"Block","src":"5101:208:1","statements":[{"expression":{"argumentTypes":null,"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":448,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5107:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":452,"indexExpression":{"argumentTypes":null,"id":449,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5107:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":453,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5123:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5123:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5107:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":461,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5169:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":454,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5137:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":456,"indexExpression":{"argumentTypes":null,"id":455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5146:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5137:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":459,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5153:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5153:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5137:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5137:31:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5107:69:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":464,"nodeType":"ExpressionStatement","src":"5107:69:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5214:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5214:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":471,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5226:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5198:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":465,"name":"ERC20Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5183:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Interface_$135_$","typeString":"type(contract ERC20Interface)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5183:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Interface_$135","typeString":"contract ERC20Interface"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":98,"src":"5183:30:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5183:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":473,"nodeType":"ExpressionStatement","src":"5183:50:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":475,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5256:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5256:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":478,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5268:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":479,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5276:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":481,"indexExpression":{"argumentTypes":null,"id":480,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5285:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5276:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":484,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5292:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5292:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5276:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":474,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5240:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5240:64:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"ExpressionStatement","src":"5240:64:1"}]},"id":488,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawTokens","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"name":"token","nodeType":"VariableDeclaration","scope":488,"src":"5070:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"5070:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":445,"name":"tokens","nodeType":"VariableDeclaration","scope":488,"src":"5085:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5085:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5069:31:1"},"payable":false,"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"5101:0:1"},"scope":1130,"src":"5046:263:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":556,"nodeType":"Block","src":"5429:272:1","statements":[{"expression":{"argumentTypes":null,"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":501,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5437:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":504,"indexExpression":{"argumentTypes":null,"id":502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5446:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5437:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":505,"indexExpression":{"argumentTypes":null,"id":503,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5453:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5437:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":512,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5487:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":506,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5461:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"argumentTypes":null,"id":507,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5470:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":510,"indexExpression":{"argumentTypes":null,"id":509,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5477:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5461:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5461:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5437:57:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":515,"nodeType":"ExpressionStatement","src":"5437:57:1"},{"expression":{"argumentTypes":null,"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":516,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5502:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":520,"indexExpression":{"argumentTypes":null,"id":517,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5510:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5502:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":521,"indexExpression":{"argumentTypes":null,"id":518,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5517:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5502:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":522,"indexExpression":{"argumentTypes":null,"id":519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5523:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5502:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5558:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":523,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5529:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":525,"indexExpression":{"argumentTypes":null,"id":524,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5537:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5529:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":527,"indexExpression":{"argumentTypes":null,"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5544:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5529:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":529,"indexExpression":{"argumentTypes":null,"id":528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5550:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5529:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5529:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5529:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5502:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"nodeType":"ExpressionStatement","src":"5502:63:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":539,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5605:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":540,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5609:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":536,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5589:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC20Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5574:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Interface_$135_$","typeString":"type(contract ERC20Interface)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5574:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Interface_$135","typeString":"contract ERC20Interface"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":98,"src":"5574:30:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5574:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":542,"nodeType":"ExpressionStatement","src":"5574:42:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5634:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":545,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5641:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":546,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5647:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":547,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5655:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":549,"indexExpression":{"argumentTypes":null,"id":548,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5664:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5655:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":551,"indexExpression":{"argumentTypes":null,"id":550,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5671:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5655:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":543,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5625:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5625:52:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"5625:52:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5692:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":500,"id":555,"nodeType":"Return","src":"5685:11:1"}]},"id":557,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawTokensFrom","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"name":"from","nodeType":"VariableDeclaration","scope":557,"src":"5343:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"5343:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":492,"name":"to","nodeType":"VariableDeclaration","scope":557,"src":"5357:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"5357:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":494,"name":"token","nodeType":"VariableDeclaration","scope":557,"src":"5368:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5368:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":496,"name":"tokens","nodeType":"VariableDeclaration","scope":557,"src":"5384:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint","nodeType":"ElementaryTypeName","src":"5384:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5341:55:1"},"payable":false,"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"name":"success","nodeType":"VariableDeclaration","scope":557,"src":"5415:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":498,"name":"bool","nodeType":"ElementaryTypeName","src":"5415:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5414:14:1"},"scope":1130,"src":"5314:387:1","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":572,"nodeType":"Block","src":"5785:43:1","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":566,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5801:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":568,"indexExpression":{"argumentTypes":null,"id":567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"5810:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5801:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":570,"indexExpression":{"argumentTypes":null,"id":569,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"5817:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5801:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":565,"id":571,"nodeType":"Return","src":"5794:28:1"}]},"id":573,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"name":"token","nodeType":"VariableDeclaration","scope":573,"src":"5726:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"5726:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":561,"name":"user","nodeType":"VariableDeclaration","scope":573,"src":"5740:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"5740:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5725:28:1"},"payable":false,"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"","nodeType":"VariableDeclaration","scope":573,"src":"5779:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint","nodeType":"ElementaryTypeName","src":"5779:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5778:6:1"},"scope":1130,"src":"5707:121:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":605,"nodeType":"Block","src":"6016:128:1","statements":[{"expression":{"argumentTypes":null,"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":584,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6024:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":589,"indexExpression":{"argumentTypes":null,"id":585,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6032:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6024:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":590,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6039:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6039:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6024:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":591,"indexExpression":{"argumentTypes":null,"id":588,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6051:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6024:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":592,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"6062:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6024:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"nodeType":"ExpressionStatement","src":"6024:44:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":596,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6085:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6085:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":598,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6097:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":599,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6104:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":600,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"6113:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"6076:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6076:44:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"6076:44:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6135:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":583,"id":604,"nodeType":"Return","src":"6128:11:1"}]},"id":606,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approveTokens","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"name":"spender","nodeType":"VariableDeclaration","scope":606,"src":"5941:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":577,"name":"token","nodeType":"VariableDeclaration","scope":606,"src":"5958:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":579,"name":"tokens","nodeType":"VariableDeclaration","scope":606,"src":"5973:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint","nodeType":"ElementaryTypeName","src":"5973:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5940:45:1"},"payable":false,"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"name":"success","nodeType":"VariableDeclaration","scope":606,"src":"6002:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":581,"name":"bool","nodeType":"ElementaryTypeName","src":"6002:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6001:14:1"},"scope":1130,"src":"5918:226:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":659,"nodeType":"Block","src":"6268:219:1","statements":[{"expression":{"argumentTypes":null,"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":617,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6278:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"argumentTypes":null,"id":618,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6287:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6278:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6294:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6294:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6278:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":630,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6340:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":623,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6308:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":625,"indexExpression":{"argumentTypes":null,"id":624,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6317:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6308:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":628,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6324:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6324:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6308:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"6308:31:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6308:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6278:69:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":633,"nodeType":"ExpressionStatement","src":"6278:69:1"},{"expression":{"argumentTypes":null,"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":634,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6357:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":637,"indexExpression":{"argumentTypes":null,"id":635,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6366:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6357:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":638,"indexExpression":{"argumentTypes":null,"id":636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6373:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6357:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":645,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6403:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":639,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6379:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":641,"indexExpression":{"argumentTypes":null,"id":640,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6388:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6379:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":643,"indexExpression":{"argumentTypes":null,"id":642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6395:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6379:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"6379:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6357:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ExpressionStatement","src":"6357:53:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6429:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6429:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":652,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6441:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":653,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6448:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":654,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6452:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"6420:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6420:39:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":656,"nodeType":"ExpressionStatement","src":"6420:39:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6476:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":616,"id":658,"nodeType":"Return","src":"6469:11:1"}]},"id":660,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferTokens","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"name":"to","nodeType":"VariableDeclaration","scope":660,"src":"6198:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"6198:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":610,"name":"token","nodeType":"VariableDeclaration","scope":660,"src":"6210:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"6210:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":612,"name":"tokens","nodeType":"VariableDeclaration","scope":660,"src":"6225:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint","nodeType":"ElementaryTypeName","src":"6225:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6197:40:1"},"payable":false,"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"name":"success","nodeType":"VariableDeclaration","scope":660,"src":"6254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":614,"name":"bool","nodeType":"ElementaryTypeName","src":"6254:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6253:14:1"},"scope":1130,"src":"6174:313:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":731,"nodeType":"Block","src":"6608:268:1","statements":[{"expression":{"argumentTypes":null,"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":673,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6617:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":676,"indexExpression":{"argumentTypes":null,"id":674,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6626:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6617:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":677,"indexExpression":{"argumentTypes":null,"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6633:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6617:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":684,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6667:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":678,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6641:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":680,"indexExpression":{"argumentTypes":null,"id":679,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6650:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6641:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":682,"indexExpression":{"argumentTypes":null,"id":681,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6657:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6641:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"6641:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6641:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6617:57:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":687,"nodeType":"ExpressionStatement","src":"6617:57:1"},{"expression":{"argumentTypes":null,"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":688,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6683:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":692,"indexExpression":{"argumentTypes":null,"id":689,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6691:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6683:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":693,"indexExpression":{"argumentTypes":null,"id":690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6698:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6683:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":694,"indexExpression":{"argumentTypes":null,"id":691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6704:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6683:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":703,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6739:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":695,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6710:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":697,"indexExpression":{"argumentTypes":null,"id":696,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6718:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6710:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":699,"indexExpression":{"argumentTypes":null,"id":698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6725:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6710:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":701,"indexExpression":{"argumentTypes":null,"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6731:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6710:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"6710:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6710:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6683:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":706,"nodeType":"ExpressionStatement","src":"6683:63:1"},{"expression":{"argumentTypes":null,"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":707,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6755:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":710,"indexExpression":{"argumentTypes":null,"id":708,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6764:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6755:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":711,"indexExpression":{"argumentTypes":null,"id":709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6771:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6755:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":718,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6801:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":712,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6777:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":714,"indexExpression":{"argumentTypes":null,"id":713,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6786:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6777:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":716,"indexExpression":{"argumentTypes":null,"id":715,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6793:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6777:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"6777:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6777:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6755:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":721,"nodeType":"ExpressionStatement","src":"6755:53:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":723,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6826:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6833:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":725,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6839:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":726,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6843:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":722,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"6817:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6817:33:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"6817:33:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6866:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":672,"id":730,"nodeType":"Return","src":"6859:11:1"}]},"id":732,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferTokensFrom","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"name":"from","nodeType":"VariableDeclaration","scope":732,"src":"6522:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"6522:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":664,"name":"to","nodeType":"VariableDeclaration","scope":732,"src":"6536:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"6536:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":666,"name":"token","nodeType":"VariableDeclaration","scope":732,"src":"6547:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"6547:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":668,"name":"tokens","nodeType":"VariableDeclaration","scope":732,"src":"6563:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint","nodeType":"ElementaryTypeName","src":"6563:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6520:55:1"},"payable":false,"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"name":"success","nodeType":"VariableDeclaration","scope":732,"src":"6594:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":670,"name":"bool","nodeType":"ElementaryTypeName","src":"6594:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6593:14:1"},"scope":1130,"src":"6493:383:1","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"7184:310:1","statements":[{"assignments":[754],"declarations":[{"constant":false,"id":754,"name":"hardcodedSchemaHash","nodeType":"VariableDeclaration","scope":776,"src":"7194:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7194:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":756,"initialValue":{"argumentTypes":null,"hexValue":"307833313332333662366364386431323132353432316534343532386438663562613037306137383161656163336535616534356533313462383138373334656333","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7224:66:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_22252049556479045226268356700395165653463586391483087482349250600108450598595_by_1","typeString":"int_const 22252049556479045226268356700395165653463586391483087482349250600108450598595"},"value":"0x313236b6cd8d12125421e44528d8f5ba070a781aeac3e5ae45e314b818734ec3"},"nodeType":"VariableDeclarationStatement","src":"7194:96:1"},{"assignments":[758],"declarations":[{"constant":false,"id":758,"name":"typedDataHash","nodeType":"VariableDeclaration","scope":776,"src":"7302:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7302:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":772,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":760,"name":"hardcodedSchemaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7344:19:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":762,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"7382:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7387:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":764,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7390:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":765,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7404:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":766,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"7410:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":767,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"7417:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":768,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"7431:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":769,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7439:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":761,"name":"sha3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7377:4:1","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7377:68:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":759,"name":"sha3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7326:4:1","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7326:131:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7302:155:1"},{"expression":{"argumentTypes":null,"id":773,"name":"typedDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7475:13:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":752,"id":774,"nodeType":"Return","src":"7468:20:1"}]},"id":776,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getLavaTypedDataHash","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"name":"from","nodeType":"VariableDeclaration","scope":776,"src":"6975:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"6975:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":736,"name":"to","nodeType":"VariableDeclaration","scope":776,"src":"6989:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"6989:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":738,"name":"walletAddress","nodeType":"VariableDeclaration","scope":776,"src":"7001:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"7001:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"token","nodeType":"VariableDeclaration","scope":776,"src":"7024:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"7024:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":742,"name":"tokens","nodeType":"VariableDeclaration","scope":776,"src":"7039:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"7039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":744,"name":"relayerReward","nodeType":"VariableDeclaration","scope":776,"src":"7055:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"7055:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":746,"name":"expires","nodeType":"VariableDeclaration","scope":776,"src":"7115:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"7115:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":748,"name":"nonce","nodeType":"VariableDeclaration","scope":776,"src":"7132:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6973:173:1"},"payable":false,"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"name":"","nodeType":"VariableDeclaration","scope":776,"src":"7172:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7172:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"7171:9:1"},"scope":1130,"src":"6944:550:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":902,"nodeType":"Block","src":"7728:1090:1","statements":[{"assignments":[798],"declarations":[{"constant":false,"id":798,"name":"sigHash","nodeType":"VariableDeclaration","scope":903,"src":"7868:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7868:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":809,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":800,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7907:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7912:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":802,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7915:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"id":803,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"7920:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":804,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7926:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":805,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"7933:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":806,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7947:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":807,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7955:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":799,"name":"getLavaTypedDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7886:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,address,address,uint256,uint256,uint256,uint256) view returns (bytes32)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7886:75:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7868:93:1"},{"assignments":[811],"declarations":[{"constant":false,"id":811,"name":"recoveredSignatureSigner","nodeType":"VariableDeclaration","scope":903,"src":"7971:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"7971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":817,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":814,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8025:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":815,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8033:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":812,"name":"ECRecovery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"8006:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECRecovery_$64_$","typeString":"type(library ECRecovery)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":63,"src":"8006:18:1","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8006:37:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7971:72:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8117:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":819,"name":"recoveredSignatureSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8125:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8117:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":824,"nodeType":"IfStatement","src":"8114:45:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":821,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8151:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8151:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"8151:8:1"}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":825,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"8221:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8221:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":827,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"8236:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8221:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":832,"nodeType":"IfStatement","src":"8218:35:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":829,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8245:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8245:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"8245:8:1"}},{"assignments":[834],"declarations":[{"constant":false,"id":834,"name":"burnedSignature","nodeType":"VariableDeclaration","scope":903,"src":"8263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint","nodeType":"ElementaryTypeName","src":"8263:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":838,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":835,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"8286:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":837,"indexExpression":{"argumentTypes":null,"id":836,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8303:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8286:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8263:48:1"},{"expression":{"argumentTypes":null,"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":839,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"8320:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":841,"indexExpression":{"argumentTypes":null,"id":840,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8337:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8320:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"307831","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8348:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"8320:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":844,"nodeType":"ExpressionStatement","src":"8320:31:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":845,"name":"burnedSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8371:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8390:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"8371:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":851,"nodeType":"IfStatement","src":"8368:36:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8396:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8396:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"ExpressionStatement","src":"8396:8:1"}},{"expression":{"argumentTypes":null,"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":852,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"8451:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":856,"indexExpression":{"argumentTypes":null,"id":853,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8459:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8451:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":857,"indexExpression":{"argumentTypes":null,"id":854,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8466:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8451:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":858,"indexExpression":{"argumentTypes":null,"id":855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"8472:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8451:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":859,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8478:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8451:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":861,"nodeType":"ExpressionStatement","src":"8451:33:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":863,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8502:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":864,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8508:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"8515:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":866,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8519:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":862,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"8493:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8493:33:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"8493:33:1"},{"expression":{"argumentTypes":null,"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":869,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"8572:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":874,"indexExpression":{"argumentTypes":null,"id":870,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8580:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8572:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":875,"indexExpression":{"argumentTypes":null,"id":871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8587:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8572:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":876,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8593:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8593:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8572:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":877,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"8607:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8572:48:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"8572:48:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":881,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8638:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":882,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8644:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8651:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8651:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":885,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"8663:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":880,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"8629:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8629:48:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":887,"nodeType":"ExpressionStatement","src":"8629:48:1"},{"condition":{"argumentTypes":null,"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8721:59:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":889,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8741:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8747:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8747:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":892,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":893,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"8766:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":888,"name":"transferTokensFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8722:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8722:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":899,"nodeType":"IfStatement","src":"8718:72:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":896,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8782:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8782:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"8782:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8808:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":796,"id":901,"nodeType":"Return","src":"8801:11:1"}]},"id":903,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approveTokensWithSignature","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"name":"from","nodeType":"VariableDeclaration","scope":903,"src":"7537:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"7537:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":780,"name":"to","nodeType":"VariableDeclaration","scope":903,"src":"7551:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7551:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":782,"name":"token","nodeType":"VariableDeclaration","scope":903,"src":"7563:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"7563:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":784,"name":"tokens","nodeType":"VariableDeclaration","scope":903,"src":"7578:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":786,"name":"relayerReward","nodeType":"VariableDeclaration","scope":903,"src":"7594:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"7594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":788,"name":"expires","nodeType":"VariableDeclaration","scope":903,"src":"7654:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"7654:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":790,"name":"nonce","nodeType":"VariableDeclaration","scope":903,"src":"7671:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"7671:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":792,"name":"signature","nodeType":"VariableDeclaration","scope":903,"src":"7686:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"7686:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"7536:166:1"},"payable":false,"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"","nodeType":"VariableDeclaration","scope":903,"src":"7719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":794,"name":"bool","nodeType":"ElementaryTypeName","src":"7719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"7718:6:1"},"scope":1130,"src":"7501:1317:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":952,"nodeType":"Block","src":"9088:390:1","statements":[{"condition":{"argumentTypes":null,"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9165:87:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":925,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"9193:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9198:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":927,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9201:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":928,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9207:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":929,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9214:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":930,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"9228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":931,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"9236:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":932,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9242:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":924,"name":"approveTokensWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9166:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,address,uint256,uint256,uint256,uint256,bytes memory) returns (bool)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9166:86:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":938,"nodeType":"IfStatement","src":"9162:100:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":935,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"9254:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9254:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"9254:8:1"}},{"condition":{"argumentTypes":null,"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9396:45:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":940,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"9417:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":941,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9423:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":942,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9427:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":943,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9434:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":939,"name":"withdrawTokensFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"9397:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9397:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":949,"nodeType":"IfStatement","src":"9393:58:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":946,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"9443:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9443:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"9443:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9468:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":923,"id":951,"nodeType":"Return","src":"9461:11:1"}]},"id":953,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawTokensFromWithSignature","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"name":"from","nodeType":"VariableDeclaration","scope":953,"src":"8897:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"8897:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":907,"name":"to","nodeType":"VariableDeclaration","scope":953,"src":"8911:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"8911:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":909,"name":"token","nodeType":"VariableDeclaration","scope":953,"src":"8924:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":911,"name":"tokens","nodeType":"VariableDeclaration","scope":953,"src":"8939:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"8939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":913,"name":"relayerReward","nodeType":"VariableDeclaration","scope":953,"src":"8956:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8956:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":915,"name":"expires","nodeType":"VariableDeclaration","scope":953,"src":"9015:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"9015:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":917,"name":"nonce","nodeType":"VariableDeclaration","scope":953,"src":"9032:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"9032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":919,"name":"signature","nodeType":"VariableDeclaration","scope":953,"src":"9047:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"9047:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"8896:167:1"},"payable":false,"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"name":"","nodeType":"VariableDeclaration","scope":953,"src":"9080:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":921,"name":"bool","nodeType":"ElementaryTypeName","src":"9080:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"9079:6:1"},"scope":1130,"src":"8856:622:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1002,"nodeType":"Block","src":"9752:390:1","statements":[{"condition":{"argumentTypes":null,"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9829:87:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":975,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"9857:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"9862:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":977,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"9865:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":978,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"9871:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":979,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"9878:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":980,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"9892:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":981,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"9900:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":982,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"9906:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":974,"name":"approveTokensWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9830:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,address,uint256,uint256,uint256,uint256,bytes memory) returns (bool)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9830:86:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":988,"nodeType":"IfStatement","src":"9826:100:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":985,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"9918:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9918:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"9918:8:1"}},{"condition":{"argumentTypes":null,"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10060:45:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":990,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"10081:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10087:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":992,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10091:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":993,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10098:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"transferTokensFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"10061:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10061:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":999,"nodeType":"IfStatement","src":"10057:58:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":996,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10107:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10107:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"ExpressionStatement","src":"10107:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10132:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":973,"id":1001,"nodeType":"Return","src":"10125:11:1"}]},"id":1003,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferTokensFromWithSignature","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"name":"from","nodeType":"VariableDeclaration","scope":1003,"src":"9561:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"9561:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":957,"name":"to","nodeType":"VariableDeclaration","scope":1003,"src":"9575:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"9575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":959,"name":"token","nodeType":"VariableDeclaration","scope":1003,"src":"9588:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"9588:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":961,"name":"tokens","nodeType":"VariableDeclaration","scope":1003,"src":"9603:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"9603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":963,"name":"relayerReward","nodeType":"VariableDeclaration","scope":1003,"src":"9620:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"9620:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":965,"name":"expires","nodeType":"VariableDeclaration","scope":1003,"src":"9679:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":967,"name":"nonce","nodeType":"VariableDeclaration","scope":1003,"src":"9696:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"9696:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":969,"name":"signature","nodeType":"VariableDeclaration","scope":1003,"src":"9711:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"9711:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"9560:167:1"},"payable":false,"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"name":"","nodeType":"VariableDeclaration","scope":1003,"src":"9744:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":971,"name":"bool","nodeType":"ElementaryTypeName","src":"9744:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"9743:6:1"},"scope":1130,"src":"9520:622:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1022,"nodeType":"Block","src":"10266:61:1","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1014,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"10284:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":1016,"indexExpression":{"argumentTypes":null,"id":1015,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10292:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1018,"indexExpression":{"argumentTypes":null,"id":1017,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10299:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1020,"indexExpression":{"argumentTypes":null,"id":1019,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10311:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1013,"id":1021,"nodeType":"Return","src":"10277:42:1"}]},"id":1023,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"tokenAllowance","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"name":"token","nodeType":"VariableDeclaration","scope":1023,"src":"10173:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"10173:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1007,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":1023,"src":"10188:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"10188:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1009,"name":"spender","nodeType":"VariableDeclaration","scope":1023,"src":"10208:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"10208:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"10172:52:1"},"payable":false,"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"name":"remaining","nodeType":"VariableDeclaration","scope":1023,"src":"10250:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint","nodeType":"ElementaryTypeName","src":"10250:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10249:16:1"},"scope":1130,"src":"10149:178:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1093,"nodeType":"Block","src":"10516:663:1","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"name":"sigHash","nodeType":"VariableDeclaration","scope":1094,"src":"10641:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":1056,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"10680:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"10685:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1049,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"10688:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"id":1050,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"10693:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1051,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"10699:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1052,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10706:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1053,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1054,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"10728:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1046,"name":"getLavaTypedDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"10659:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,address,address,uint256,uint256,uint256,uint256) view returns (bytes32)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:75:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10641:93:1"},{"assignments":[1058],"declarations":[{"constant":false,"id":1058,"name":"recoveredSignatureSigner","nodeType":"VariableDeclaration","scope":1094,"src":"10747:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"10747:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":1064,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1061,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"10801:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1062,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"10809:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1059,"name":"ECRecovery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"10782:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECRecovery_$64_$","typeString":"type(library ECRecovery)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":63,"src":"10782:18:1","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10782:37:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10747:72:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1065,"name":"recoveredSignatureSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"10886:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":1066,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"10914:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10886:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1071,"nodeType":"IfStatement","src":"10883:45:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1068,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10920:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10920:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"10920:8:1"}},{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"name":"burnedSignature","nodeType":"VariableDeclaration","scope":1094,"src":"10997:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint","nodeType":"ElementaryTypeName","src":"10997:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1077,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1074,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"11020:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1076,"indexExpression":{"argumentTypes":null,"id":1075,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11037:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11020:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10997:48:1"},{"expression":{"argumentTypes":null,"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1078,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"11056:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1080,"indexExpression":{"argumentTypes":null,"id":1079,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11073:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11056:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"307832","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11084:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"11056:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ExpressionStatement","src":"11056:31:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1084,"name":"burnedSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"11115:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11134:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"11115:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1090,"nodeType":"IfStatement","src":"11112:36:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1087,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"11140:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11140:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"11140:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11167:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1043,"id":1092,"nodeType":"Return","src":"11160:11:1"}]},"id":1094,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"burnSignature","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"name":"from","nodeType":"VariableDeclaration","scope":1094,"src":"10359:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1027,"name":"to","nodeType":"VariableDeclaration","scope":1094,"src":"10373:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"10373:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1029,"name":"token","nodeType":"VariableDeclaration","scope":1094,"src":"10385:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"10385:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1031,"name":"tokens","nodeType":"VariableDeclaration","scope":1094,"src":"10400:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"10400:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1033,"name":"relayerReward","nodeType":"VariableDeclaration","scope":1094,"src":"10416:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"10416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1035,"name":"expires","nodeType":"VariableDeclaration","scope":1094,"src":"10439:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1037,"name":"nonce","nodeType":"VariableDeclaration","scope":1094,"src":"10456:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"10456:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1039,"name":"signature","nodeType":"VariableDeclaration","scope":1094,"src":"10472:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"10472:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"10358:130:1"},"payable":false,"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"name":"","nodeType":"VariableDeclaration","scope":1094,"src":"10505:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1041,"name":"bool","nodeType":"ElementaryTypeName","src":"10505:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"10504:6:1"},"scope":1130,"src":"10336:843:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1108,"nodeType":"Block","src":"11259:57:1","statements":[{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1101,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"11276:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1103,"indexExpression":{"argumentTypes":null,"id":1102,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11293:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11276:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11304:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"11276:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11275:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1100,"id":1107,"nodeType":"Return","src":"11268:40:1"}]},"id":1109,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"signatureBurned","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"name":"digest","nodeType":"VariableDeclaration","scope":1109,"src":"11211:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11211:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"11210:16:1"},"payable":false,"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"name":"","nodeType":"VariableDeclaration","scope":1109,"src":"11248:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1098,"name":"bool","nodeType":"ElementaryTypeName","src":"11248:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"11247:6:1"},"scope":1130,"src":"11186:130:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1128,"nodeType":"Block","src":"11520:140:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"11634:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1124,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"11640:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1125,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"11647:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"depositTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"11620:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11620:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1121,"id":1127,"nodeType":"Return","src":"11613:42:1"}]},"id":1129,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"receiveApproval","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"name":"from","nodeType":"VariableDeclaration","scope":1129,"src":"11441:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"11441:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1113,"name":"tokens","nodeType":"VariableDeclaration","scope":1129,"src":"11455:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11455:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1115,"name":"token","nodeType":"VariableDeclaration","scope":1129,"src":"11471:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"11471:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1117,"name":"data","nodeType":"VariableDeclaration","scope":1129,"src":"11486:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":1116,"name":"bytes","nodeType":"ElementaryTypeName","src":"11486:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"11440:57:1"},"payable":false,"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"name":"","nodeType":"VariableDeclaration","scope":1129,"src":"11514:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1119,"name":"bool","nodeType":"ElementaryTypeName","src":"11514:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"11513:6:1"},"scope":1130,"src":"11416:244:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":1131,"src":"1636:10029:1"}],"src":"0:11666:1"},"legacyAST":{"absolutePath":"/home/andy/dev/lava-wallet/contracts/LavaWallet.sol","exportedSymbols":{"ERC20Interface":[135],"LavaWallet":[1130],"WrapperInterface":[207]},"id":1131,"nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.4",".18"],"nodeType":"PragmaDirective","src":"0:24:1"},{"absolutePath":"/home/andy/dev/lava-wallet/contracts/ECRecovery.sol","file":"./ECRecovery.sol","id":67,"nodeType":"ImportDirective","scope":1131,"sourceUnit":65,"src":"26:26:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/andy/dev/lava-wallet/contracts/SafeMath.sol","file":"./SafeMath.sol","id":68,"nodeType":"ImportDirective","scope":1131,"sourceUnit":1229,"src":"54:24:1","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":false,"id":135,"linearizedBaseContracts":[135],"name":"ERC20Interface","nodeType":"ContractDefinition","nodes":[{"body":null,"id":73,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"346:2:1"},"payable":false,"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"name":"","nodeType":"VariableDeclaration","scope":73,"src":"374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint","nodeType":"ElementaryTypeName","src":"374:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"373:6:1"},"scope":135,"src":"326:54:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":80,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":80,"src":"404:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"403:20:1"},"payable":false,"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"name":"balance","nodeType":"VariableDeclaration","scope":80,"src":"449:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint","nodeType":"ElementaryTypeName","src":"449:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"448:14:1"},"scope":135,"src":"385:78:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":89,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":89,"src":"487:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":84,"name":"spender","nodeType":"VariableDeclaration","scope":89,"src":"507:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"486:37:1"},"payable":false,"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"remaining","nodeType":"VariableDeclaration","scope":89,"src":"549:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint","nodeType":"ElementaryTypeName","src":"549:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"548:16:1"},"scope":135,"src":"468:97:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":98,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"name":"to","nodeType":"VariableDeclaration","scope":98,"src":"588:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":93,"name":"tokens","nodeType":"VariableDeclaration","scope":98,"src":"600:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint","nodeType":"ElementaryTypeName","src":"600:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"587:25:1"},"payable":false,"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"name":"success","nodeType":"VariableDeclaration","scope":98,"src":"629:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":95,"name":"bool","nodeType":"ElementaryTypeName","src":"629:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"628:14:1"},"scope":135,"src":"570:73:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":107,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"name":"spender","nodeType":"VariableDeclaration","scope":107,"src":"665:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":102,"name":"tokens","nodeType":"VariableDeclaration","scope":107,"src":"682:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint","nodeType":"ElementaryTypeName","src":"682:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"664:30:1"},"payable":false,"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"name":"success","nodeType":"VariableDeclaration","scope":107,"src":"711:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104,"name":"bool","nodeType":"ElementaryTypeName","src":"711:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"710:14:1"},"scope":135,"src":"648:77:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":118,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"name":"from","nodeType":"VariableDeclaration","scope":118,"src":"752:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"752:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":111,"name":"to","nodeType":"VariableDeclaration","scope":118,"src":"766:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":113,"name":"tokens","nodeType":"VariableDeclaration","scope":118,"src":"778:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint","nodeType":"ElementaryTypeName","src":"778:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"751:39:1"},"payable":false,"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"name":"success","nodeType":"VariableDeclaration","scope":118,"src":"807:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":115,"name":"bool","nodeType":"ElementaryTypeName","src":"807:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"806:14:1"},"scope":135,"src":"730:91:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"anonymous":false,"id":126,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"indexed":true,"name":"from","nodeType":"VariableDeclaration","scope":126,"src":"842:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":126,"src":"864:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"864:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":124,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":126,"src":"884:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint","nodeType":"ElementaryTypeName","src":"884:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"841:55:1"},"src":"827:70:1"},{"anonymous":false,"id":134,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"indexed":true,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":134,"src":"917:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":130,"indexed":true,"name":"spender","nodeType":"VariableDeclaration","scope":134,"src":"945:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":132,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":134,"src":"970:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint","nodeType":"ElementaryTypeName","src":"970:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"916:66:1"},"src":"902:81:1"}],"scope":1131,"src":"296:689:1"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":false,"id":207,"linearizedBaseContracts":[207],"name":"WrapperInterface","nodeType":"ContractDefinition","nodes":[{"body":null,"id":138,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"1043:2:1"},"payable":true,"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[],"src":"1060:0:1"},"scope":207,"src":"1035:26:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":null,"id":141,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[],"src":"1080:2:1"},"payable":true,"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"1098:0:1"},"scope":207,"src":"1064:35:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":null,"id":146,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"name":"wad","nodeType":"VariableDeclaration","scope":146,"src":"1120:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint","nodeType":"ElementaryTypeName","src":"1120:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1119:10:1"},"payable":false,"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[],"src":"1136:0:1"},"scope":207,"src":"1102:35:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":151,"implemented":false,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"1160:2:1"},"payable":false,"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"name":"","nodeType":"VariableDeclaration","scope":151,"src":"1184:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint","nodeType":"ElementaryTypeName","src":"1184:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1183:6:1"},"scope":207,"src":"1140:50:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":null,"id":160,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"name":"guy","nodeType":"VariableDeclaration","scope":160,"src":"1210:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"1210:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":155,"name":"wad","nodeType":"VariableDeclaration","scope":160,"src":"1223:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint","nodeType":"ElementaryTypeName","src":"1223:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1209:23:1"},"payable":false,"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"name":"","nodeType":"VariableDeclaration","scope":160,"src":"1249:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":157,"name":"bool","nodeType":"ElementaryTypeName","src":"1249:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1248:6:1"},"scope":207,"src":"1193:62:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":169,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"dst","nodeType":"VariableDeclaration","scope":169,"src":"1276:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1276:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":164,"name":"wad","nodeType":"VariableDeclaration","scope":169,"src":"1289:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint","nodeType":"ElementaryTypeName","src":"1289:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1275:23:1"},"payable":false,"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"name":"","nodeType":"VariableDeclaration","scope":169,"src":"1315:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"1315:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1314:6:1"},"scope":207,"src":"1258:63:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":null,"id":178,"implemented":false,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"name":"src","nodeType":"VariableDeclaration","scope":178,"src":"1346:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":173,"name":"dst","nodeType":"VariableDeclaration","scope":178,"src":"1359:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"1359:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":175,"name":"wad","nodeType":"VariableDeclaration","scope":178,"src":"1372:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint","nodeType":"ElementaryTypeName","src":"1372:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1345:36:1"},"payable":false,"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"1381:0:1"},"scope":207,"src":"1324:58:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"anonymous":false,"id":186,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"indexed":true,"name":"src","nodeType":"VariableDeclaration","scope":186,"src":"1403:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":182,"indexed":true,"name":"guy","nodeType":"VariableDeclaration","scope":186,"src":"1424:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":184,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":186,"src":"1445:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint","nodeType":"ElementaryTypeName","src":"1445:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1402:52:1"},"src":"1387:68:1"},{"anonymous":false,"id":194,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"indexed":true,"name":"src","nodeType":"VariableDeclaration","scope":194,"src":"1474:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":190,"indexed":true,"name":"dst","nodeType":"VariableDeclaration","scope":194,"src":"1495:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"1495:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":192,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":194,"src":"1516:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint","nodeType":"ElementaryTypeName","src":"1516:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1473:52:1"},"src":"1458:68:1"},{"anonymous":false,"id":200,"name":"Deposit","nodeType":"EventDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"indexed":true,"name":"dst","nodeType":"VariableDeclaration","scope":200,"src":"1544:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":198,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":200,"src":"1565:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint","nodeType":"ElementaryTypeName","src":"1565:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1543:31:1"},"src":"1529:46:1"},{"anonymous":false,"id":206,"name":"Withdrawal","nodeType":"EventDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"indexed":true,"name":"src","nodeType":"VariableDeclaration","scope":206,"src":"1596:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":204,"indexed":false,"name":"wad","nodeType":"VariableDeclaration","scope":206,"src":"1617:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint","nodeType":"ElementaryTypeName","src":"1617:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1595:31:1"},"src":"1578:49:1"}],"scope":1131,"src":"1005:625:1"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":1130,"linearizedBaseContracts":[1130],"name":"LavaWallet","nodeType":"ContractDefinition","nodes":[{"id":210,"libraryName":{"contractScope":null,"id":208,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":1228,"src":"1668:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$1228","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1662:24:1","typeName":{"id":209,"name":"uint","nodeType":"ElementaryTypeName","src":"1681:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":216,"name":"balances","nodeType":"VariableDeclaration","scope":1130,"src":"1755:57:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":215,"keyType":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"1763:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1755:48:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":214,"keyType":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1783:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1774:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"value":null,"visibility":"internal"},{"constant":false,"id":224,"name":"allowed","nodeType":"VariableDeclaration","scope":1130,"src":"1858:77:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"},"typeName":{"id":223,"keyType":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1858:69:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"},"valueType":{"id":222,"keyType":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1877:49:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":221,"keyType":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"1906:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1897:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"value":null,"visibility":"internal"},{"constant":false,"id":228,"name":"burnedSignatures","nodeType":"VariableDeclaration","scope":1130,"src":"2254:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":227,"keyType":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2262:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2254:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"internal"},{"anonymous":false,"id":238,"name":"Deposit","nodeType":"EventDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":238,"src":"2318:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"2318:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":232,"indexed":false,"name":"user","nodeType":"VariableDeclaration","scope":238,"src":"2333:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"2333:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":234,"indexed":false,"name":"amount","nodeType":"VariableDeclaration","scope":238,"src":"2347:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint","nodeType":"ElementaryTypeName","src":"2347:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":236,"indexed":false,"name":"balance","nodeType":"VariableDeclaration","scope":238,"src":"2360:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint","nodeType":"ElementaryTypeName","src":"2360:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2317:56:1"},"src":"2304:70:1"},{"anonymous":false,"id":248,"name":"Withdraw","nodeType":"EventDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":248,"src":"2392:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":242,"indexed":false,"name":"user","nodeType":"VariableDeclaration","scope":248,"src":"2407:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":244,"indexed":false,"name":"amount","nodeType":"VariableDeclaration","scope":248,"src":"2421:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint","nodeType":"ElementaryTypeName","src":"2421:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":246,"indexed":false,"name":"balance","nodeType":"VariableDeclaration","scope":248,"src":"2434:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint","nodeType":"ElementaryTypeName","src":"2434:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2391:56:1"},"src":"2377:71:1"},{"anonymous":false,"id":258,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"indexed":true,"name":"from","nodeType":"VariableDeclaration","scope":258,"src":"2466:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":252,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":258,"src":"2488:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"2488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":258,"src":"2507:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":258,"src":"2522:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint","nodeType":"ElementaryTypeName","src":"2522:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2465:69:1"},"src":"2451:84:1"},{"anonymous":false,"id":268,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"indexed":true,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":268,"src":"2553:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"2553:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":262,"indexed":true,"name":"spender","nodeType":"VariableDeclaration","scope":268,"src":"2581:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"2581:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":264,"indexed":false,"name":"token","nodeType":"VariableDeclaration","scope":268,"src":"2605:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"2605:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":266,"indexed":false,"name":"tokens","nodeType":"VariableDeclaration","scope":268,"src":"2620:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint","nodeType":"ElementaryTypeName","src":"2620:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2552:80:1"},"src":"2538:95:1"},{"body":{"id":271,"nodeType":"Block","src":"2667:6:1","statements":[]},"id":272,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"LavaWallet","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"payable":false,"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":1130,"src":"2637:36:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":278,"nodeType":"Block","src":"2736:21:1","statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":275,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"2744:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"2744:8:1"}]},"id":279,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"2718:2:1"},"payable":true,"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"2736:0:1"},"scope":1130,"src":"2710:47:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":334,"nodeType":"Block","src":"2957:702:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3073:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3073:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":285,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3041:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"WrapperInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3024:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WrapperInterface_$207_$","typeString":"type(contract WrapperInterface)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3024:34:1","typeDescriptions":{"typeIdentifier":"t_contract$_WrapperInterface_$207","typeString":"contract WrapperInterface"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":141,"src":"3024:42:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3024:48:1","typeDescriptions":{"typeIdentifier":"t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$","typeString":"function (uint256) returns (function () payable external)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3024:59:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":292,"nodeType":"ExpressionStatement","src":"3024:59:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":297,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"3192:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3198:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3198:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":294,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3165:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":293,"name":"WrapperInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3148:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WrapperInterface_$207_$","typeString":"type(contract WrapperInterface)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3148:34:1","typeDescriptions":{"typeIdentifier":"t_contract$_WrapperInterface_$207","typeString":"contract WrapperInterface"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":169,"src":"3148:43:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3148:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":301,"nodeType":"ExpressionStatement","src":"3148:60:1"},{"expression":{"argumentTypes":null,"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":302,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3462:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":306,"indexExpression":{"argumentTypes":null,"id":303,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3471:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3462:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":307,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3489:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3489:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3462:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3546:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3546:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":308,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3503:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":310,"indexExpression":{"argumentTypes":null,"id":309,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3512:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3503:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":313,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":311,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3530:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3530:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3503:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"3503:42:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3503:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3462:94:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"3462:94:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":321,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3574:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3592:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3592:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":324,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3604:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3604:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":326,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3615:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":328,"indexExpression":{"argumentTypes":null,"id":327,"name":"wrappingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3624:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3615:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":331,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":329,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3642:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3642:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3615:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":320,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"3566:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3566:88:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"3566:88:1"}]},"id":335,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"depositAndWrap","nodeType":"FunctionDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"name":"wrappingContract","nodeType":"VariableDeclaration","scope":335,"src":"2913:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"2913:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2912:27:1"},"payable":true,"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[],"src":"2957:0:1"},"scope":1130,"src":"2889:770:1","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":391,"nodeType":"Block","src":"3969:566:1","statements":[{"assignments":[343],"declarations":[{"constant":false,"id":343,"name":"balanceBefore","nodeType":"VariableDeclaration","scope":392,"src":"4066:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint","nodeType":"ElementaryTypeName","src":"4066:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":346,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4087:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4087:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4066:33:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4123:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":349,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4129:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":350,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4135:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":347,"name":"transferTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4108:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4108:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":352,"nodeType":"ExpressionStatement","src":"4108:34:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":357,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4184:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":354,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4168:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":353,"name":"WrapperInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"4151:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WrapperInterface_$207_$","typeString":"type(contract WrapperInterface)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4151:23:1","typeDescriptions":{"typeIdentifier":"t_contract$_WrapperInterface_$207","typeString":"contract WrapperInterface"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":146,"src":"4151:32:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4151:40:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"4151:40:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":364,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"4355:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":361,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4338:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4338:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"4338:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4338:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":366,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4373:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4338:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":360,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4331:6:1","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4331:49:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"4331:49:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":375,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4448:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4428:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4428:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4428:19:1","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4428:27:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"4428:27:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":379,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4474:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4481:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4481:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":382,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"4493:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":383,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4501:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":385,"indexExpression":{"argumentTypes":null,"id":384,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4510:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4501:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":388,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4517:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4517:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4501:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":378,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4465:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4465:64:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"4465:64:1"}]},"id":392,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"unwrapAndWithdraw","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"name":"token","nodeType":"VariableDeclaration","scope":392,"src":"3929:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3929:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":339,"name":"tokens","nodeType":"VariableDeclaration","scope":392,"src":"3944:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3944:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3928:31:1"},"payable":false,"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"3969:0:1"},"scope":1130,"src":"3902:633:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":440,"nodeType":"Block","src":"4705:314:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":407,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4848:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4854:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"id":409,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4860:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":404,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4828:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":403,"name":"ERC20Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"4813:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Interface_$135_$","typeString":"type(contract ERC20Interface)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4813:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Interface_$135","typeString":"contract ERC20Interface"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":118,"src":"4813:34:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4813:54:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":411,"nodeType":"ExpressionStatement","src":"4813:54:1"},{"expression":{"argumentTypes":null,"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":412,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4875:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":415,"indexExpression":{"argumentTypes":null,"id":413,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4884:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4875:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":416,"indexExpression":{"argumentTypes":null,"id":414,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4891:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4875:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":423,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4925:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":417,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4899:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":419,"indexExpression":{"argumentTypes":null,"id":418,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4908:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4899:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"argumentTypes":null,"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4915:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4899:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"4899:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4899:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4875:57:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"4875:57:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":428,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4951:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":429,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4958:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":430,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4964:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":431,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4972:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":433,"indexExpression":{"argumentTypes":null,"id":432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4981:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4972:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":435,"indexExpression":{"argumentTypes":null,"id":434,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4988:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4972:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":427,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"4943:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4943:51:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"4943:51:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5010:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":402,"id":439,"nodeType":"Return","src":"5003:11:1"}]},"id":441,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"depositTokens","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"name":"from","nodeType":"VariableDeclaration","scope":441,"src":"4635:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"4635:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":396,"name":"token","nodeType":"VariableDeclaration","scope":441,"src":"4649:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":398,"name":"tokens","nodeType":"VariableDeclaration","scope":441,"src":"4664:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"4664:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4634:46:1"},"payable":false,"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"name":"","nodeType":"VariableDeclaration","scope":441,"src":"4697:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":400,"name":"bool","nodeType":"ElementaryTypeName","src":"4697:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4696:6:1"},"scope":1130,"src":"4612:407:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":487,"nodeType":"Block","src":"5101:208:1","statements":[{"expression":{"argumentTypes":null,"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":448,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5107:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":452,"indexExpression":{"argumentTypes":null,"id":449,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5107:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":453,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5123:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5123:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5107:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":461,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5169:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":454,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5137:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":456,"indexExpression":{"argumentTypes":null,"id":455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5146:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5137:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":459,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5153:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5153:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5137:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5137:31:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5107:69:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":464,"nodeType":"ExpressionStatement","src":"5107:69:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5214:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5214:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":471,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5226:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5198:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":465,"name":"ERC20Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5183:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Interface_$135_$","typeString":"type(contract ERC20Interface)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5183:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Interface_$135","typeString":"contract ERC20Interface"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":98,"src":"5183:30:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5183:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":473,"nodeType":"ExpressionStatement","src":"5183:50:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":475,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5256:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5256:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":478,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5268:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":479,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5276:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":481,"indexExpression":{"argumentTypes":null,"id":480,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5285:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5276:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":484,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5292:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5292:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5276:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":474,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5240:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5240:64:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"ExpressionStatement","src":"5240:64:1"}]},"id":488,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawTokens","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"name":"token","nodeType":"VariableDeclaration","scope":488,"src":"5070:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"5070:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":445,"name":"tokens","nodeType":"VariableDeclaration","scope":488,"src":"5085:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5085:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5069:31:1"},"payable":false,"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"5101:0:1"},"scope":1130,"src":"5046:263:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":556,"nodeType":"Block","src":"5429:272:1","statements":[{"expression":{"argumentTypes":null,"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":501,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5437:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":504,"indexExpression":{"argumentTypes":null,"id":502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5446:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5437:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":505,"indexExpression":{"argumentTypes":null,"id":503,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5453:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5437:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":512,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5487:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":506,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5461:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"argumentTypes":null,"id":507,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5470:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":510,"indexExpression":{"argumentTypes":null,"id":509,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5477:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5461:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5461:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5437:57:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":515,"nodeType":"ExpressionStatement","src":"5437:57:1"},{"expression":{"argumentTypes":null,"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":516,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5502:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":520,"indexExpression":{"argumentTypes":null,"id":517,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5510:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5502:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":521,"indexExpression":{"argumentTypes":null,"id":518,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5517:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5502:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":522,"indexExpression":{"argumentTypes":null,"id":519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5523:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5502:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5558:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":523,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5529:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":525,"indexExpression":{"argumentTypes":null,"id":524,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5537:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5529:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":527,"indexExpression":{"argumentTypes":null,"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5544:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5529:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":529,"indexExpression":{"argumentTypes":null,"id":528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5550:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5529:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"5529:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5529:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5502:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"nodeType":"ExpressionStatement","src":"5502:63:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":539,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5605:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":540,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5609:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":536,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5589:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC20Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5574:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Interface_$135_$","typeString":"type(contract ERC20Interface)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5574:21:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Interface_$135","typeString":"contract ERC20Interface"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":98,"src":"5574:30:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5574:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":542,"nodeType":"ExpressionStatement","src":"5574:42:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5634:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":545,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5641:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":546,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5647:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":547,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5655:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":549,"indexExpression":{"argumentTypes":null,"id":548,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5664:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5655:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":551,"indexExpression":{"argumentTypes":null,"id":550,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5671:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5655:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":543,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5625:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5625:52:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"5625:52:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5692:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":500,"id":555,"nodeType":"Return","src":"5685:11:1"}]},"id":557,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawTokensFrom","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"name":"from","nodeType":"VariableDeclaration","scope":557,"src":"5343:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"5343:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":492,"name":"to","nodeType":"VariableDeclaration","scope":557,"src":"5357:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"5357:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":494,"name":"token","nodeType":"VariableDeclaration","scope":557,"src":"5368:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5368:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":496,"name":"tokens","nodeType":"VariableDeclaration","scope":557,"src":"5384:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint","nodeType":"ElementaryTypeName","src":"5384:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5341:55:1"},"payable":false,"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"name":"success","nodeType":"VariableDeclaration","scope":557,"src":"5415:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":498,"name":"bool","nodeType":"ElementaryTypeName","src":"5415:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5414:14:1"},"scope":1130,"src":"5314:387:1","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":572,"nodeType":"Block","src":"5785:43:1","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":566,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"5801:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":568,"indexExpression":{"argumentTypes":null,"id":567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"5810:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5801:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":570,"indexExpression":{"argumentTypes":null,"id":569,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"5817:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5801:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":565,"id":571,"nodeType":"Return","src":"5794:28:1"}]},"id":573,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"name":"token","nodeType":"VariableDeclaration","scope":573,"src":"5726:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"5726:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":561,"name":"user","nodeType":"VariableDeclaration","scope":573,"src":"5740:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"5740:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5725:28:1"},"payable":false,"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"","nodeType":"VariableDeclaration","scope":573,"src":"5779:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint","nodeType":"ElementaryTypeName","src":"5779:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5778:6:1"},"scope":1130,"src":"5707:121:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":605,"nodeType":"Block","src":"6016:128:1","statements":[{"expression":{"argumentTypes":null,"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":584,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6024:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":589,"indexExpression":{"argumentTypes":null,"id":585,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6032:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6024:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":590,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6039:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6039:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6024:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":591,"indexExpression":{"argumentTypes":null,"id":588,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6051:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6024:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":592,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"6062:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6024:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"nodeType":"ExpressionStatement","src":"6024:44:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":596,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6085:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6085:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":598,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6097:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":599,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6104:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":600,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"6113:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"6076:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6076:44:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"6076:44:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6135:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":583,"id":604,"nodeType":"Return","src":"6128:11:1"}]},"id":606,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approveTokens","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"name":"spender","nodeType":"VariableDeclaration","scope":606,"src":"5941:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":577,"name":"token","nodeType":"VariableDeclaration","scope":606,"src":"5958:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":579,"name":"tokens","nodeType":"VariableDeclaration","scope":606,"src":"5973:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint","nodeType":"ElementaryTypeName","src":"5973:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5940:45:1"},"payable":false,"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"name":"success","nodeType":"VariableDeclaration","scope":606,"src":"6002:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":581,"name":"bool","nodeType":"ElementaryTypeName","src":"6002:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6001:14:1"},"scope":1130,"src":"5918:226:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":659,"nodeType":"Block","src":"6268:219:1","statements":[{"expression":{"argumentTypes":null,"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":617,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6278:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"argumentTypes":null,"id":618,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6287:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6278:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6294:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6294:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6278:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":630,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6340:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":623,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6308:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":625,"indexExpression":{"argumentTypes":null,"id":624,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6317:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6308:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":628,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6324:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6324:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6308:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"6308:31:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6308:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6278:69:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":633,"nodeType":"ExpressionStatement","src":"6278:69:1"},{"expression":{"argumentTypes":null,"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":634,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6357:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":637,"indexExpression":{"argumentTypes":null,"id":635,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6366:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6357:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":638,"indexExpression":{"argumentTypes":null,"id":636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6373:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6357:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":645,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6403:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":639,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6379:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":641,"indexExpression":{"argumentTypes":null,"id":640,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6388:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6379:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":643,"indexExpression":{"argumentTypes":null,"id":642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6395:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6379:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"6379:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6357:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ExpressionStatement","src":"6357:53:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"6429:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6429:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":652,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6441:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":653,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6448:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":654,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6452:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"6420:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6420:39:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":656,"nodeType":"ExpressionStatement","src":"6420:39:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6476:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":616,"id":658,"nodeType":"Return","src":"6469:11:1"}]},"id":660,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferTokens","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"name":"to","nodeType":"VariableDeclaration","scope":660,"src":"6198:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"6198:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":610,"name":"token","nodeType":"VariableDeclaration","scope":660,"src":"6210:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"6210:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":612,"name":"tokens","nodeType":"VariableDeclaration","scope":660,"src":"6225:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint","nodeType":"ElementaryTypeName","src":"6225:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6197:40:1"},"payable":false,"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"name":"success","nodeType":"VariableDeclaration","scope":660,"src":"6254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":614,"name":"bool","nodeType":"ElementaryTypeName","src":"6254:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6253:14:1"},"scope":1130,"src":"6174:313:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":731,"nodeType":"Block","src":"6608:268:1","statements":[{"expression":{"argumentTypes":null,"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":673,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6617:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":676,"indexExpression":{"argumentTypes":null,"id":674,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6626:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6617:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":677,"indexExpression":{"argumentTypes":null,"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6633:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6617:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":684,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6667:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":678,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6641:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":680,"indexExpression":{"argumentTypes":null,"id":679,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6650:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6641:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":682,"indexExpression":{"argumentTypes":null,"id":681,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6657:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6641:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"6641:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6641:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6617:57:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":687,"nodeType":"ExpressionStatement","src":"6617:57:1"},{"expression":{"argumentTypes":null,"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":688,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6683:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":692,"indexExpression":{"argumentTypes":null,"id":689,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6691:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6683:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":693,"indexExpression":{"argumentTypes":null,"id":690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6698:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6683:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":694,"indexExpression":{"argumentTypes":null,"id":691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6704:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6683:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":703,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6739:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":695,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6710:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":697,"indexExpression":{"argumentTypes":null,"id":696,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6718:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6710:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":699,"indexExpression":{"argumentTypes":null,"id":698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6725:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6710:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":701,"indexExpression":{"argumentTypes":null,"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6731:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6710:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"6710:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6710:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6683:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":706,"nodeType":"ExpressionStatement","src":"6683:63:1"},{"expression":{"argumentTypes":null,"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":707,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6755:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":710,"indexExpression":{"argumentTypes":null,"id":708,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6764:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6755:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":711,"indexExpression":{"argumentTypes":null,"id":709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6771:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6755:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":718,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6801:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":712,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6777:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":714,"indexExpression":{"argumentTypes":null,"id":713,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6786:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6777:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":716,"indexExpression":{"argumentTypes":null,"id":715,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6793:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6777:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"6777:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6777:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6755:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":721,"nodeType":"ExpressionStatement","src":"6755:53:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":723,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6826:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6833:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":725,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6839:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":726,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6843:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":722,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"6817:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6817:33:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"6817:33:1"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6866:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":672,"id":730,"nodeType":"Return","src":"6859:11:1"}]},"id":732,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferTokensFrom","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"name":"from","nodeType":"VariableDeclaration","scope":732,"src":"6522:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"6522:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":664,"name":"to","nodeType":"VariableDeclaration","scope":732,"src":"6536:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"6536:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":666,"name":"token","nodeType":"VariableDeclaration","scope":732,"src":"6547:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"6547:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":668,"name":"tokens","nodeType":"VariableDeclaration","scope":732,"src":"6563:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint","nodeType":"ElementaryTypeName","src":"6563:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6520:55:1"},"payable":false,"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"name":"success","nodeType":"VariableDeclaration","scope":732,"src":"6594:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":670,"name":"bool","nodeType":"ElementaryTypeName","src":"6594:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6593:14:1"},"scope":1130,"src":"6493:383:1","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"7184:310:1","statements":[{"assignments":[754],"declarations":[{"constant":false,"id":754,"name":"hardcodedSchemaHash","nodeType":"VariableDeclaration","scope":776,"src":"7194:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7194:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":756,"initialValue":{"argumentTypes":null,"hexValue":"307833313332333662366364386431323132353432316534343532386438663562613037306137383161656163336535616534356533313462383138373334656333","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7224:66:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_22252049556479045226268356700395165653463586391483087482349250600108450598595_by_1","typeString":"int_const 22252049556479045226268356700395165653463586391483087482349250600108450598595"},"value":"0x313236b6cd8d12125421e44528d8f5ba070a781aeac3e5ae45e314b818734ec3"},"nodeType":"VariableDeclarationStatement","src":"7194:96:1"},{"assignments":[758],"declarations":[{"constant":false,"id":758,"name":"typedDataHash","nodeType":"VariableDeclaration","scope":776,"src":"7302:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7302:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":772,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":760,"name":"hardcodedSchemaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7344:19:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":762,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"7382:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7387:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":764,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7390:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":765,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7404:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":766,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"7410:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":767,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"7417:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":768,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"7431:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":769,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7439:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":761,"name":"sha3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7377:4:1","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7377:68:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":759,"name":"sha3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7326:4:1","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7326:131:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7302:155:1"},{"expression":{"argumentTypes":null,"id":773,"name":"typedDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7475:13:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":752,"id":774,"nodeType":"Return","src":"7468:20:1"}]},"id":776,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getLavaTypedDataHash","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"name":"from","nodeType":"VariableDeclaration","scope":776,"src":"6975:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"6975:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":736,"name":"to","nodeType":"VariableDeclaration","scope":776,"src":"6989:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"6989:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":738,"name":"walletAddress","nodeType":"VariableDeclaration","scope":776,"src":"7001:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"7001:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"token","nodeType":"VariableDeclaration","scope":776,"src":"7024:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"7024:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":742,"name":"tokens","nodeType":"VariableDeclaration","scope":776,"src":"7039:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"7039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":744,"name":"relayerReward","nodeType":"VariableDeclaration","scope":776,"src":"7055:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"7055:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":746,"name":"expires","nodeType":"VariableDeclaration","scope":776,"src":"7115:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"7115:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":748,"name":"nonce","nodeType":"VariableDeclaration","scope":776,"src":"7132:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6973:173:1"},"payable":false,"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"name":"","nodeType":"VariableDeclaration","scope":776,"src":"7172:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7172:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"7171:9:1"},"scope":1130,"src":"6944:550:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":902,"nodeType":"Block","src":"7728:1090:1","statements":[{"assignments":[798],"declarations":[{"constant":false,"id":798,"name":"sigHash","nodeType":"VariableDeclaration","scope":903,"src":"7868:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7868:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":809,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":800,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7907:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7912:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":802,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7915:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"id":803,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"7920:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":804,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7926:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":805,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"7933:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":806,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7947:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":807,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7955:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":799,"name":"getLavaTypedDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7886:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,address,address,uint256,uint256,uint256,uint256) view returns (bytes32)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7886:75:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7868:93:1"},{"assignments":[811],"declarations":[{"constant":false,"id":811,"name":"recoveredSignatureSigner","nodeType":"VariableDeclaration","scope":903,"src":"7971:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"7971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":817,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":814,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8025:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":815,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8033:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":812,"name":"ECRecovery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"8006:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECRecovery_$64_$","typeString":"type(library ECRecovery)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":63,"src":"8006:18:1","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8006:37:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7971:72:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8117:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":819,"name":"recoveredSignatureSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8125:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8117:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":824,"nodeType":"IfStatement","src":"8114:45:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":821,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8151:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8151:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"8151:8:1"}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":825,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"8221:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8221:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":827,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"8236:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8221:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":832,"nodeType":"IfStatement","src":"8218:35:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":829,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8245:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8245:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"8245:8:1"}},{"assignments":[834],"declarations":[{"constant":false,"id":834,"name":"burnedSignature","nodeType":"VariableDeclaration","scope":903,"src":"8263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint","nodeType":"ElementaryTypeName","src":"8263:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":838,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":835,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"8286:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":837,"indexExpression":{"argumentTypes":null,"id":836,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8303:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8286:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8263:48:1"},{"expression":{"argumentTypes":null,"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":839,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"8320:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":841,"indexExpression":{"argumentTypes":null,"id":840,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8337:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8320:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"307831","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8348:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"8320:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":844,"nodeType":"ExpressionStatement","src":"8320:31:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":845,"name":"burnedSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8371:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8390:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"8371:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":851,"nodeType":"IfStatement","src":"8368:36:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8396:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8396:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"ExpressionStatement","src":"8396:8:1"}},{"expression":{"argumentTypes":null,"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":852,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"8451:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":856,"indexExpression":{"argumentTypes":null,"id":853,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8459:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8451:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":857,"indexExpression":{"argumentTypes":null,"id":854,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8466:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8451:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":858,"indexExpression":{"argumentTypes":null,"id":855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"8472:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8451:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":859,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8478:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8451:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":861,"nodeType":"ExpressionStatement","src":"8451:33:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":863,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8502:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":864,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8508:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"8515:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":866,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8519:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":862,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"8493:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8493:33:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"8493:33:1"},{"expression":{"argumentTypes":null,"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":869,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"8572:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":874,"indexExpression":{"argumentTypes":null,"id":870,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8580:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8572:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":875,"indexExpression":{"argumentTypes":null,"id":871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8587:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8572:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":876,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8593:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8593:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8572:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":877,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"8607:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8572:48:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"8572:48:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":881,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8638:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":882,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8644:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8651:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8651:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":885,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"8663:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":880,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"8629:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8629:48:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":887,"nodeType":"ExpressionStatement","src":"8629:48:1"},{"condition":{"argumentTypes":null,"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8721:59:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":889,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8741:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8747:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8747:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":892,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":893,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"8766:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":888,"name":"transferTokensFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8722:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8722:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":899,"nodeType":"IfStatement","src":"8718:72:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":896,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8782:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8782:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"8782:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8808:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":796,"id":901,"nodeType":"Return","src":"8801:11:1"}]},"id":903,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approveTokensWithSignature","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"name":"from","nodeType":"VariableDeclaration","scope":903,"src":"7537:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"7537:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":780,"name":"to","nodeType":"VariableDeclaration","scope":903,"src":"7551:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7551:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":782,"name":"token","nodeType":"VariableDeclaration","scope":903,"src":"7563:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"7563:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":784,"name":"tokens","nodeType":"VariableDeclaration","scope":903,"src":"7578:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":786,"name":"relayerReward","nodeType":"VariableDeclaration","scope":903,"src":"7594:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"7594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":788,"name":"expires","nodeType":"VariableDeclaration","scope":903,"src":"7654:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"7654:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":790,"name":"nonce","nodeType":"VariableDeclaration","scope":903,"src":"7671:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"7671:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":792,"name":"signature","nodeType":"VariableDeclaration","scope":903,"src":"7686:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"7686:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"7536:166:1"},"payable":false,"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"","nodeType":"VariableDeclaration","scope":903,"src":"7719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":794,"name":"bool","nodeType":"ElementaryTypeName","src":"7719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"7718:6:1"},"scope":1130,"src":"7501:1317:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":952,"nodeType":"Block","src":"9088:390:1","statements":[{"condition":{"argumentTypes":null,"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9165:87:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":925,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"9193:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9198:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":927,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9201:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":928,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9207:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":929,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9214:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":930,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"9228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":931,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"9236:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":932,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9242:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":924,"name":"approveTokensWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9166:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,address,uint256,uint256,uint256,uint256,bytes memory) returns (bool)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9166:86:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":938,"nodeType":"IfStatement","src":"9162:100:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":935,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"9254:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9254:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"9254:8:1"}},{"condition":{"argumentTypes":null,"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9396:45:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":940,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"9417:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":941,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9423:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":942,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9427:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":943,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9434:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":939,"name":"withdrawTokensFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"9397:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9397:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":949,"nodeType":"IfStatement","src":"9393:58:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":946,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"9443:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9443:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"9443:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9468:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":923,"id":951,"nodeType":"Return","src":"9461:11:1"}]},"id":953,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"withdrawTokensFromWithSignature","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"name":"from","nodeType":"VariableDeclaration","scope":953,"src":"8897:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"8897:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":907,"name":"to","nodeType":"VariableDeclaration","scope":953,"src":"8911:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"8911:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":909,"name":"token","nodeType":"VariableDeclaration","scope":953,"src":"8924:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":911,"name":"tokens","nodeType":"VariableDeclaration","scope":953,"src":"8939:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"8939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":913,"name":"relayerReward","nodeType":"VariableDeclaration","scope":953,"src":"8956:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8956:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":915,"name":"expires","nodeType":"VariableDeclaration","scope":953,"src":"9015:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"9015:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":917,"name":"nonce","nodeType":"VariableDeclaration","scope":953,"src":"9032:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"9032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":919,"name":"signature","nodeType":"VariableDeclaration","scope":953,"src":"9047:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"9047:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"8896:167:1"},"payable":false,"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"name":"","nodeType":"VariableDeclaration","scope":953,"src":"9080:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":921,"name":"bool","nodeType":"ElementaryTypeName","src":"9080:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"9079:6:1"},"scope":1130,"src":"8856:622:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1002,"nodeType":"Block","src":"9752:390:1","statements":[{"condition":{"argumentTypes":null,"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9829:87:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":975,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"9857:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"9862:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":977,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"9865:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":978,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"9871:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":979,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"9878:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":980,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"9892:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":981,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"9900:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":982,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"9906:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":974,"name":"approveTokensWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9830:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,address,uint256,uint256,uint256,uint256,bytes memory) returns (bool)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9830:86:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":988,"nodeType":"IfStatement","src":"9826:100:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":985,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"9918:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9918:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"9918:8:1"}},{"condition":{"argumentTypes":null,"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10060:45:1","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":990,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"10081:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10087:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":992,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10091:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":993,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10098:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"transferTokensFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"10061:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10061:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":999,"nodeType":"IfStatement","src":"10057:58:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":996,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10107:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10107:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"ExpressionStatement","src":"10107:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10132:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":973,"id":1001,"nodeType":"Return","src":"10125:11:1"}]},"id":1003,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferTokensFromWithSignature","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"name":"from","nodeType":"VariableDeclaration","scope":1003,"src":"9561:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"9561:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":957,"name":"to","nodeType":"VariableDeclaration","scope":1003,"src":"9575:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"9575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":959,"name":"token","nodeType":"VariableDeclaration","scope":1003,"src":"9588:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"9588:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":961,"name":"tokens","nodeType":"VariableDeclaration","scope":1003,"src":"9603:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"9603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":963,"name":"relayerReward","nodeType":"VariableDeclaration","scope":1003,"src":"9620:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"9620:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":965,"name":"expires","nodeType":"VariableDeclaration","scope":1003,"src":"9679:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":967,"name":"nonce","nodeType":"VariableDeclaration","scope":1003,"src":"9696:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"9696:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":969,"name":"signature","nodeType":"VariableDeclaration","scope":1003,"src":"9711:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"9711:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"9560:167:1"},"payable":false,"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"name":"","nodeType":"VariableDeclaration","scope":1003,"src":"9744:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":971,"name":"bool","nodeType":"ElementaryTypeName","src":"9744:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"9743:6:1"},"scope":1130,"src":"9520:622:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1022,"nodeType":"Block","src":"10266:61:1","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1014,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"10284:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":1016,"indexExpression":{"argumentTypes":null,"id":1015,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10292:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1018,"indexExpression":{"argumentTypes":null,"id":1017,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10299:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:26:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1020,"indexExpression":{"argumentTypes":null,"id":1019,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10311:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1013,"id":1021,"nodeType":"Return","src":"10277:42:1"}]},"id":1023,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"tokenAllowance","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"name":"token","nodeType":"VariableDeclaration","scope":1023,"src":"10173:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"10173:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1007,"name":"tokenOwner","nodeType":"VariableDeclaration","scope":1023,"src":"10188:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"10188:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1009,"name":"spender","nodeType":"VariableDeclaration","scope":1023,"src":"10208:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"10208:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"10172:52:1"},"payable":false,"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"name":"remaining","nodeType":"VariableDeclaration","scope":1023,"src":"10250:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint","nodeType":"ElementaryTypeName","src":"10250:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10249:16:1"},"scope":1130,"src":"10149:178:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1093,"nodeType":"Block","src":"10516:663:1","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"name":"sigHash","nodeType":"VariableDeclaration","scope":1094,"src":"10641:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":1056,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"10680:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"10685:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1049,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"10688:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"}},{"argumentTypes":null,"id":1050,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"10693:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1051,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"10699:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1052,"name":"relayerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10706:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1053,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1054,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"10728:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_LavaWallet_$1130","typeString":"contract LavaWallet"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1046,"name":"getLavaTypedDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"10659:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,address,address,uint256,uint256,uint256,uint256) view returns (bytes32)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:75:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10641:93:1"},{"assignments":[1058],"declarations":[{"constant":false,"id":1058,"name":"recoveredSignatureSigner","nodeType":"VariableDeclaration","scope":1094,"src":"10747:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"10747:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":1064,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1061,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"10801:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1062,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"10809:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1059,"name":"ECRecovery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"10782:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECRecovery_$64_$","typeString":"type(library ECRecovery)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":63,"src":"10782:18:1","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10782:37:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10747:72:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1065,"name":"recoveredSignatureSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"10886:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":1066,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"10914:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10886:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1071,"nodeType":"IfStatement","src":"10883:45:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1068,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10920:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10920:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"10920:8:1"}},{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"name":"burnedSignature","nodeType":"VariableDeclaration","scope":1094,"src":"10997:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint","nodeType":"ElementaryTypeName","src":"10997:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1077,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1074,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"11020:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1076,"indexExpression":{"argumentTypes":null,"id":1075,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11037:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11020:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10997:48:1"},{"expression":{"argumentTypes":null,"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1078,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"11056:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1080,"indexExpression":{"argumentTypes":null,"id":1079,"name":"sigHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11073:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11056:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"307832","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11084:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"11056:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ExpressionStatement","src":"11056:31:1"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1084,"name":"burnedSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"11115:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11134:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"11115:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1090,"nodeType":"IfStatement","src":"11112:36:1","trueBody":{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1087,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"11140:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11140:8:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"11140:8:1"}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11167:4:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1043,"id":1092,"nodeType":"Return","src":"11160:11:1"}]},"id":1094,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"burnSignature","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"name":"from","nodeType":"VariableDeclaration","scope":1094,"src":"10359:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1027,"name":"to","nodeType":"VariableDeclaration","scope":1094,"src":"10373:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"10373:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1029,"name":"token","nodeType":"VariableDeclaration","scope":1094,"src":"10385:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"10385:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1031,"name":"tokens","nodeType":"VariableDeclaration","scope":1094,"src":"10400:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"10400:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1033,"name":"relayerReward","nodeType":"VariableDeclaration","scope":1094,"src":"10416:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"10416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1035,"name":"expires","nodeType":"VariableDeclaration","scope":1094,"src":"10439:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1037,"name":"nonce","nodeType":"VariableDeclaration","scope":1094,"src":"10456:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"10456:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1039,"name":"signature","nodeType":"VariableDeclaration","scope":1094,"src":"10472:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"10472:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"10358:130:1"},"payable":false,"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"name":"","nodeType":"VariableDeclaration","scope":1094,"src":"10505:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1041,"name":"bool","nodeType":"ElementaryTypeName","src":"10505:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"10504:6:1"},"scope":1130,"src":"10336:843:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1108,"nodeType":"Block","src":"11259:57:1","statements":[{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1101,"name":"burnedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"11276:16:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1103,"indexExpression":{"argumentTypes":null,"id":1102,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11293:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11276:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11304:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"11276:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11275:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1100,"id":1107,"nodeType":"Return","src":"11268:40:1"}]},"id":1109,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"signatureBurned","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"name":"digest","nodeType":"VariableDeclaration","scope":1109,"src":"11211:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11211:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"11210:16:1"},"payable":false,"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"name":"","nodeType":"VariableDeclaration","scope":1109,"src":"11248:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1098,"name":"bool","nodeType":"ElementaryTypeName","src":"11248:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"11247:6:1"},"scope":1130,"src":"11186:130:1","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1128,"nodeType":"Block","src":"11520:140:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"11634:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1124,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"11640:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1125,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"11647:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"depositTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"11620:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11620:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1121,"id":1127,"nodeType":"Return","src":"11613:42:1"}]},"id":1129,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"receiveApproval","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"name":"from","nodeType":"VariableDeclaration","scope":1129,"src":"11441:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"11441:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1113,"name":"tokens","nodeType":"VariableDeclaration","scope":1129,"src":"11455:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11455:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1115,"name":"token","nodeType":"VariableDeclaration","scope":1129,"src":"11471:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"11471:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1117,"name":"data","nodeType":"VariableDeclaration","scope":1129,"src":"11486:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},"typeName":{"id":1116,"name":"bytes","nodeType":"ElementaryTypeName","src":"11486:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"value":null,"visibility":"internal"}],"src":"11440:57:1"},"payable":false,"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"name":"","nodeType":"VariableDeclaration","scope":1129,"src":"11514:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1119,"name":"bool","nodeType":"ElementaryTypeName","src":"11514:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"11513:6:1"},"scope":1130,"src":"11416:244:1","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":1131,"src":"1636:10029:1"}],"src":"0:11666:1"},"compiler":{"name":"solc","version":"0.4.19+commit.c4cbbb05.Emscripten.clang"},"networks":{},"schemaVersion":"2.0.0","updatedAt":"2018-05-02T02:18:20.322Z"}

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = {"contractName":"ERC20Interface","abi":[{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"tokenOwner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Approval","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","sourceMap":"","deployedSourceMap":"","source":"pragma solidity ^0.4.18;\n\n\n// ----------------------------------------------------------------------------\n\n// '0xBitcoin Token' contract\n\n//\n\n// Symbol      : 0xBTC\n\n// Name        : 0xBitcoin Token\n\n// Total supply: 21,000,000.00\n\n// Decimals    : 8\n\n//\n\n\n// ----------------------------------------------------------------------------\n\n\n\n// ----------------------------------------------------------------------------\n\n// Safe maths\n\n// ----------------------------------------------------------------------------\n\nlibrary SafeMath {\n\n    function add(uint a, uint b) internal pure returns (uint c) {\n\n        c = a + b;\n\n        require(c >= a);\n\n    }\n\n    function sub(uint a, uint b) internal pure returns (uint c) {\n\n        require(b <= a);\n\n        c = a - b;\n\n    }\n\n    function mul(uint a, uint b) internal pure returns (uint c) {\n\n        c = a * b;\n\n        require(a == 0 || c / a == b);\n\n    }\n\n    function div(uint a, uint b) internal pure returns (uint c) {\n\n        require(b > 0);\n\n        c = a / b;\n\n    }\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// ERC Token Standard #20 Interface\n\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n// ----------------------------------------------------------------------------\n\ncontract ERC20Interface {\n\n    function totalSupply() public constant returns (uint);\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n\n    function transfer(address to, uint tokens) public returns (bool success);\n\n    function approve(address spender, uint tokens) public returns (bool success);\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Contract function to receive approval and execute function in one call\n\n//\n\n// Borrowed from MiniMeToken\n\n// ----------------------------------------------------------------------------\n\ncontract ApproveAndCallFallBack {\n\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Owned contract\n\n// ----------------------------------------------------------------------------\n\ncontract Owned {\n\n    address public owner;\n\n    address public newOwner;\n\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n\n    function Owned() public {\n\n        owner = msg.sender;\n\n    }\n\n\n    modifier onlyOwner {\n\n        require(msg.sender == owner);\n\n        _;\n\n    }\n\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n\n        newOwner = _newOwner;\n\n    }\n\n    function acceptOwnership() public {\n\n        require(msg.sender == newOwner);\n\n        OwnershipTransferred(owner, newOwner);\n\n        owner = newOwner;\n\n        newOwner = address(0);\n\n    }\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// ERC20 Token, with the addition of symbol, name and decimals and an\n\n// initial fixed supply\n\n// ----------------------------------------------------------------------------\n\ncontract _0xBitcoinToken is ERC20Interface, Owned {\n\n    using SafeMath for uint;\n\n\n    string public symbol;\n\n    string public  name;\n\n    uint8 public decimals;\n\n    uint public _totalSupply;\n\n\n\n      //ethereum block number when last 0xbtc was minted\n  //  uint public latestMiningEpochStarted;\n\n    uint public latestDifficultyPeriodStarted;\n\n\n\n    uint public epochCount;//number of 'blocks' mined\n\n\n    uint public _BLOCKS_PER_READJUSTMENT = 256;\n\n\n    //a big number is easier ; just find a solution that is smaller\n    uint public  _MINIMUM_TARGET = 2**8;\n\n    //a little number\n    uint public  _MAXIMUM_TARGET = 2**250;\n\n\n    uint public miningTarget;\n  //  uint public miningDifficulty; //adjusts every 2016 epochs (or blocks)\n\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\n\n\n\n    uint public rewardEra;\n    uint public maxSupplyForEra;\n\n\n    address public lastRewardTo;\n    uint public lastRewardAmount;\n    uint public lastRewardEthBlockNumber;\n\n\n    mapping(bytes32 => uint) rewardHashesFound; //the hash and the nonce\n\n    uint public tokensMinted;\n\n    mapping(address => uint) balances;\n\n\n\n\n\n    mapping(address => mapping(address => uint)) allowed;\n\n\n\n\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n\n    // ------------------------------------------------------------------------\n\n    // Constructor\n\n    // ------------------------------------------------------------------------\n\n    function _0xBitcoinToken() public onlyOwner{\n\n        symbol = \"0xBTC\";\n\n        name = \"0xBitcoin Token\";\n\n        decimals = 8;\n\n        _totalSupply = 21000000 * 10**uint(decimals);\n        tokensMinted = 0;\n\n        rewardEra = 0;\n        maxSupplyForEra = _totalSupply.div(2);\n\n        miningTarget = _MAXIMUM_TARGET;\n\n        latestDifficultyPeriodStarted = block.number;\n\n        _startNewMiningEpoch();\n\n        //balances[owner] = _totalSupply;\n\n        //Transfer(address(0), owner, _totalSupply);\n\n    }\n\n    function _startNewMiningEpoch() internal {//a new block to be mined\n\n      //latestMiningEpochStarted = block.number;\n\n      if(tokensMinted >= maxSupplyForEra && rewardEra < 32) //32 is the final era, almost all tokens minted\n      {\n        rewardEra = rewardEra + 1;\n      }\n\n      //set the next minted supply at which the era will change\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\n      challengeNumber = block.blockhash(block.number - 1);\n\n\n      epochCount = epochCount.add(1);\n\n      //every so often, readjust difficulty, dont readjust when deploying\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\n      {\n        _reAdjustDifficulty();\n      }\n\n\n\n    }\n\n\n\n\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\n\n    //readjust the target by 5 percent\n    function _reAdjustDifficulty() internal {\n\n\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\n\n        //assume 360 ethereum blocks per hour\n\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\n\n        uint targetEthBlocksPerEpoch = epochsMined * 60; //should be 60 times slower than ethereum\n\n        //if there were less eth blocks passed in time than expected\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerEpoch )\n        {\n          //make it harder\n          miningTarget = miningTarget.sub(miningTarget.div(20));\n        }else{\n          //make it easier\n          miningTarget = miningTarget.add(miningTarget.div(20));\n        }\n\n\n\n        latestDifficultyPeriodStarted = block.number;\n\n        if(miningTarget < _MINIMUM_TARGET) //6\n        {\n          miningTarget = _MINIMUM_TARGET;\n        }\n\n        if(miningTarget > _MAXIMUM_TARGET) //54\n        {\n          miningTarget = _MAXIMUM_TARGET;\n        }\n    }\n\n\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public returns (bytes32 digesttest) {\n\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n        return digest;\n\n      }\n\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testDifficulty) public returns (bool success) {\n\n          uint difficulty = testDifficulty;\n          uint reward_amount = getMiningReward();\n\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n          //bytes memory characters = bytes(digest);\n\n          if(uint256(digest) > miningTarget) revert();\n\n          return (digest == challenge_digest);\n\n        }\n\n\n    function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n\n      //  uint difficulty = getMiningDifficulty();\n        uint reward_amount = getMiningReward();\n\n        //the PoW must contain work that includes a recent etherum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\n        bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\n\n        //the challenge digest must match the expected\n        if (digest != challenge_digest) revert();\n\n        //the digest must be smaller than the target\n        if(uint256(digest) > miningTarget) revert();\n      //  for(uint i = 0; i < difficulty    ; i++) {\n      //     if (digest[i] != 0x0 ) revert();\n      //  }\n\n         uint hashFound = rewardHashesFound[digest];\n         rewardHashesFound[digest] = epochCount;\n         if(hashFound != 0) revert();  //prevent the same answer from awarding twice\n\n\n\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\n\n\n        tokensMinted = tokensMinted.add(reward_amount);\n\n\n        //set readonly diagnostics data\n        lastRewardTo = msg.sender;\n        lastRewardAmount = reward_amount;\n        lastRewardEthBlockNumber = block.number;\n\n\n         _startNewMiningEpoch();\n\n          Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n\n       return true;\n\n    }\n\n    //this is a recent ethreum block hash, used to prevent pre-mining future blocks\n    function getChallengeNumber() public constant returns (bytes32) {\n        return challengeNumber;\n    }\n\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n     function getMiningDifficulty() public constant returns (uint) {\n        return _MAXIMUM_TARGET.div(miningTarget);\n    }\n\n    function getMiningTarget() public constant returns (uint) {\n       return miningTarget;\n   }\n\n\n\n    //21m coins total\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\n    function getMiningReward() public constant returns (uint) {\n        //once we get half way thru the coins, only get 25 per block\n\n         //every reward era, the reward amount halves.\n\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Total supply\n\n    // ------------------------------------------------------------------------\n\n    function totalSupply() public constant returns (uint) {\n\n        return _totalSupply  - balances[address(0)];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Get the token balance for account `tokenOwner`\n\n    // ------------------------------------------------------------------------\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n\n        return balances[tokenOwner];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer the balance from token owner's account to `to` account\n\n    // - Owner's account must have sufficient balance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transfer(address to, uint tokens) public returns (bool success) {\n\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(msg.sender, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account\n\n    //\n\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n    // recommends that there are no checks for the approval double-spend attack\n\n    // as this should be implemented in user interfaces\n\n    // ------------------------------------------------------------------------\n\n    function approve(address spender, uint tokens) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer `tokens` from the `from` account to the `to` account\n\n    //\n\n    // The calling account must already have sufficient tokens approve(...)-d\n\n    // for spending from the `from` account and\n\n    // - From account must have sufficient balance to transfer\n\n    // - Spender must have sufficient allowance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n\n        balances[from] = balances[from].sub(tokens);\n\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(from, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Returns the amount of tokens approved by the owner that can be\n\n    // transferred to the spender's account\n\n    // ------------------------------------------------------------------------\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n\n        return allowed[tokenOwner][spender];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account. The `spender` contract function\n\n    // `receiveApproval(...)` is then executed\n\n    // ------------------------------------------------------------------------\n\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Don't accept ETH\n\n    // ------------------------------------------------------------------------\n\n    function () public payable {\n\n        revert();\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Owner can transfer out any accidentally sent ERC20 tokens\n\n    // ------------------------------------------------------------------------\n\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n\n    }\n\n}\n","sourcePath":"/home/andy/dev/0xbitcoin-token/contracts/_0xBitcoinToken.sol","ast":{"attributes":{"absolutePath":"/home/andy/dev/0xbitcoin-token/contracts/_0xBitcoinToken.sol","exportedSymbols":{"ApproveAndCallFallBack":[175],"ERC20Interface":[163],"Owned":[244],"SafeMath":[96],"_0xBitcoinToken":[964]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".18"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[96],"name":"SafeMath","scope":965},"children":[{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":23,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"555:4:0"}],"id":3,"name":"VariableDeclaration","src":"555:6:0"},{"attributes":{"constant":false,"name":"b","scope":23,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"563:4:0"}],"id":5,"name":"VariableDeclaration","src":"563:6:0"}],"id":6,"name":"ParameterList","src":"554:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":23,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"594:4:0"}],"id":8,"name":"VariableDeclaration","src":"594:6:0"}],"id":9,"name":"ParameterList","src":"593:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"c"},"id":10,"name":"Identifier","src":"613:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":11,"name":"Identifier","src":"617:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"uint256","value":"b"},"id":12,"name":"Identifier","src":"621:1:0"}],"id":13,"name":"BinaryOperation","src":"617:5:0"}],"id":14,"name":"Assignment","src":"613:9:0"}],"id":15,"name":"ExpressionStatement","src":"613:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":16,"name":"Identifier","src":"633:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"c"},"id":17,"name":"Identifier","src":"641:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":18,"name":"Identifier","src":"646:1:0"}],"id":19,"name":"BinaryOperation","src":"641:6:0"}],"id":20,"name":"FunctionCall","src":"633:15:0"}],"id":21,"name":"ExpressionStatement","src":"633:15:0"}],"id":22,"name":"Block","src":"602:54:0"}],"id":23,"name":"FunctionDefinition","src":"542:114:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":24,"name":"ElementaryTypeName","src":"675:4:0"}],"id":25,"name":"VariableDeclaration","src":"675:6:0"},{"attributes":{"constant":false,"name":"b","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":26,"name":"ElementaryTypeName","src":"683:4:0"}],"id":27,"name":"VariableDeclaration","src":"683:6:0"}],"id":28,"name":"ParameterList","src":"674:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":29,"name":"ElementaryTypeName","src":"714:4:0"}],"id":30,"name":"VariableDeclaration","src":"714:6:0"}],"id":31,"name":"ParameterList","src":"713:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":32,"name":"Identifier","src":"733:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"uint256","value":"b"},"id":33,"name":"Identifier","src":"741:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"a"},"id":34,"name":"Identifier","src":"746:1:0"}],"id":35,"name":"BinaryOperation","src":"741:6:0"}],"id":36,"name":"FunctionCall","src":"733:15:0"}],"id":37,"name":"ExpressionStatement","src":"733:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"uint256","value":"c"},"id":38,"name":"Identifier","src":"759:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"a"},"id":39,"name":"Identifier","src":"763:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"uint256","value":"b"},"id":40,"name":"Identifier","src":"767:1:0"}],"id":41,"name":"BinaryOperation","src":"763:5:0"}],"id":42,"name":"Assignment","src":"759:9:0"}],"id":43,"name":"ExpressionStatement","src":"759:9:0"}],"id":44,"name":"Block","src":"722:54:0"}],"id":45,"name":"FunctionDefinition","src":"662:114:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mul","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":73,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":46,"name":"ElementaryTypeName","src":"795:4:0"}],"id":47,"name":"VariableDeclaration","src":"795:6:0"},{"attributes":{"constant":false,"name":"b","scope":73,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":48,"name":"ElementaryTypeName","src":"803:4:0"}],"id":49,"name":"VariableDeclaration","src":"803:6:0"}],"id":50,"name":"ParameterList","src":"794:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":73,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":51,"name":"ElementaryTypeName","src":"834:4:0"}],"id":52,"name":"VariableDeclaration","src":"834:6:0"}],"id":53,"name":"ParameterList","src":"833:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"uint256","value":"c"},"id":54,"name":"Identifier","src":"853:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":47,"type":"uint256","value":"a"},"id":55,"name":"Identifier","src":"857:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":49,"type":"uint256","value":"b"},"id":56,"name":"Identifier","src":"861:1:0"}],"id":57,"name":"BinaryOperation","src":"857:5:0"}],"id":58,"name":"Assignment","src":"853:9:0"}],"id":59,"name":"ExpressionStatement","src":"853:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":60,"name":"Identifier","src":"873:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":47,"type":"uint256","value":"a"},"id":61,"name":"Identifier","src":"881:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":62,"name":"Literal","src":"886:1:0"}],"id":63,"name":"BinaryOperation","src":"881:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"uint256","value":"c"},"id":64,"name":"Identifier","src":"891:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":47,"type":"uint256","value":"a"},"id":65,"name":"Identifier","src":"895:1:0"}],"id":66,"name":"BinaryOperation","src":"891:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":49,"type":"uint256","value":"b"},"id":67,"name":"Identifier","src":"900:1:0"}],"id":68,"name":"BinaryOperation","src":"891:10:0"}],"id":69,"name":"BinaryOperation","src":"881:20:0"}],"id":70,"name":"FunctionCall","src":"873:29:0"}],"id":71,"name":"ExpressionStatement","src":"873:29:0"}],"id":72,"name":"Block","src":"842:68:0"}],"id":73,"name":"FunctionDefinition","src":"782:128:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"div","payable":false,"scope":96,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":95,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":74,"name":"ElementaryTypeName","src":"929:4:0"}],"id":75,"name":"VariableDeclaration","src":"929:6:0"},{"attributes":{"constant":false,"name":"b","scope":95,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":76,"name":"ElementaryTypeName","src":"937:4:0"}],"id":77,"name":"VariableDeclaration","src":"937:6:0"}],"id":78,"name":"ParameterList","src":"928:16:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":95,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":79,"name":"ElementaryTypeName","src":"968:4:0"}],"id":80,"name":"VariableDeclaration","src":"968:6:0"}],"id":81,"name":"ParameterList","src":"967:8:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":82,"name":"Identifier","src":"987:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"b"},"id":83,"name":"Identifier","src":"995:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":84,"name":"Literal","src":"999:1:0"}],"id":85,"name":"BinaryOperation","src":"995:5:0"}],"id":86,"name":"FunctionCall","src":"987:14:0"}],"id":87,"name":"ExpressionStatement","src":"987:14:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":80,"type":"uint256","value":"c"},"id":88,"name":"Identifier","src":"1012:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"a"},"id":89,"name":"Identifier","src":"1016:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"b"},"id":90,"name":"Identifier","src":"1020:1:0"}],"id":91,"name":"BinaryOperation","src":"1016:5:0"}],"id":92,"name":"Assignment","src":"1012:9:0"}],"id":93,"name":"ExpressionStatement","src":"1012:9:0"}],"id":94,"name":"Block","src":"976:53:0"}],"id":95,"name":"FunctionDefinition","src":"916:113:0"}],"id":96,"name":"ContractDefinition","src":"518:514:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[163],"name":"ERC20Interface","scope":965},"children":[{"attributes":{"body":null,"constant":true,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":97,"name":"ParameterList","src":"1365:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":101,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":98,"name":"ElementaryTypeName","src":"1393:4:0"}],"id":99,"name":"VariableDeclaration","src":"1393:4:0"}],"id":100,"name":"ParameterList","src":"1392:6:0"}],"id":101,"name":"FunctionDefinition","src":"1345:54:0"},{"attributes":{"body":null,"constant":true,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":108,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":102,"name":"ElementaryTypeName","src":"1424:7:0"}],"id":103,"name":"VariableDeclaration","src":"1424:18:0"}],"id":104,"name":"ParameterList","src":"1423:20:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":108,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":105,"name":"ElementaryTypeName","src":"1469:4:0"}],"id":106,"name":"VariableDeclaration","src":"1469:12:0"}],"id":107,"name":"ParameterList","src":"1468:14:0"}],"id":108,"name":"FunctionDefinition","src":"1405:78:0"},{"attributes":{"body":null,"constant":true,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":117,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":109,"name":"ElementaryTypeName","src":"1508:7:0"}],"id":110,"name":"VariableDeclaration","src":"1508:18:0"},{"attributes":{"constant":false,"name":"spender","scope":117,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":111,"name":"ElementaryTypeName","src":"1528:7:0"}],"id":112,"name":"VariableDeclaration","src":"1528:15:0"}],"id":113,"name":"ParameterList","src":"1507:37:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":117,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":114,"name":"ElementaryTypeName","src":"1570:4:0"}],"id":115,"name":"VariableDeclaration","src":"1570:14:0"}],"id":116,"name":"ParameterList","src":"1569:16:0"}],"id":117,"name":"FunctionDefinition","src":"1489:97:0"},{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":163,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":126,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":118,"name":"ElementaryTypeName","src":"1610:7:0"}],"id":119,"name":"VariableDeclaration","src":"1610:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":126,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":120,"name":"ElementaryTypeName","src":"1622:4:0"}],"id":121,"name":"VariableDeclaration","src":"1622:11:0"}],"id":122,"name":"ParameterList","src":"1609:25:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":126,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":123,"name":"ElementaryTypeName","src":"1651:4:0"}],"id":124,"name":"VariableDeclaration","src":"1651:12:0"}],"id":125,"name":"ParameterList","src":"1650:14:0"}],"id":126,"name":"FunctionDefinition","src":"1592:73:0"},{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":163,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":135,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":127,"name":"ElementaryTypeName","src":"1688:7:0"}],"id":128,"name":"VariableDeclaration","src":"1688:15:0"},{"attributes":{"constant":false,"name":"tokens","scope":135,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":129,"name":"ElementaryTypeName","src":"1705:4:0"}],"id":130,"name":"VariableDeclaration","src":"1705:11:0"}],"id":131,"name":"ParameterList","src":"1687:30:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":135,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":132,"name":"ElementaryTypeName","src":"1734:4:0"}],"id":133,"name":"VariableDeclaration","src":"1734:12:0"}],"id":134,"name":"ParameterList","src":"1733:14:0"}],"id":135,"name":"FunctionDefinition","src":"1671:77:0"},{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":163,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":146,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":136,"name":"ElementaryTypeName","src":"1776:7:0"}],"id":137,"name":"VariableDeclaration","src":"1776:12:0"},{"attributes":{"constant":false,"name":"to","scope":146,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":138,"name":"ElementaryTypeName","src":"1790:7:0"}],"id":139,"name":"VariableDeclaration","src":"1790:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":146,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":140,"name":"ElementaryTypeName","src":"1802:4:0"}],"id":141,"name":"VariableDeclaration","src":"1802:11:0"}],"id":142,"name":"ParameterList","src":"1775:39:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":146,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":143,"name":"ElementaryTypeName","src":"1831:4:0"}],"id":144,"name":"VariableDeclaration","src":"1831:12:0"}],"id":145,"name":"ParameterList","src":"1830:14:0"}],"id":146,"name":"FunctionDefinition","src":"1754:91:0"},{"attributes":{"anonymous":false,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":154,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":147,"name":"ElementaryTypeName","src":"1867:7:0"}],"id":148,"name":"VariableDeclaration","src":"1867:20:0"},{"attributes":{"constant":false,"indexed":true,"name":"to","scope":154,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":149,"name":"ElementaryTypeName","src":"1889:7:0"}],"id":150,"name":"VariableDeclaration","src":"1889:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"tokens","scope":154,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":151,"name":"ElementaryTypeName","src":"1909:4:0"}],"id":152,"name":"VariableDeclaration","src":"1909:11:0"}],"id":153,"name":"ParameterList","src":"1866:55:0"}],"id":154,"name":"EventDefinition","src":"1852:70:0"},{"attributes":{"anonymous":false,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"tokenOwner","scope":162,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":155,"name":"ElementaryTypeName","src":"1943:7:0"}],"id":156,"name":"VariableDeclaration","src":"1943:26:0"},{"attributes":{"constant":false,"indexed":true,"name":"spender","scope":162,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":157,"name":"ElementaryTypeName","src":"1971:7:0"}],"id":158,"name":"VariableDeclaration","src":"1971:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"tokens","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":159,"name":"ElementaryTypeName","src":"1996:4:0"}],"id":160,"name":"VariableDeclaration","src":"1996:11:0"}],"id":161,"name":"ParameterList","src":"1942:66:0"}],"id":162,"name":"EventDefinition","src":"1928:81:0"}],"id":163,"name":"ContractDefinition","src":"1314:698:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[175],"name":"ApproveAndCallFallBack","scope":965},"children":[{"attributes":{"body":null,"constant":false,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"receiveApproval","payable":false,"scope":175,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":174,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":164,"name":"ElementaryTypeName","src":"2351:7:0"}],"id":165,"name":"VariableDeclaration","src":"2351:12:0"},{"attributes":{"constant":false,"name":"tokens","scope":174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":166,"name":"ElementaryTypeName","src":"2365:7:0"}],"id":167,"name":"VariableDeclaration","src":"2365:14:0"},{"attributes":{"constant":false,"name":"token","scope":174,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":168,"name":"ElementaryTypeName","src":"2381:7:0"}],"id":169,"name":"VariableDeclaration","src":"2381:13:0"},{"attributes":{"constant":false,"name":"data","scope":174,"stateVariable":false,"storageLocation":"default","type":"bytes memory","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes storage pointer"},"id":170,"name":"ElementaryTypeName","src":"2396:5:0"}],"id":171,"name":"VariableDeclaration","src":"2396:10:0"}],"id":172,"name":"ParameterList","src":"2350:57:0"},{"attributes":{"parameters":[null]},"children":[],"id":173,"name":"ParameterList","src":"2414:0:0"}],"id":174,"name":"FunctionDefinition","src":"2326:89:0"}],"id":175,"name":"ContractDefinition","src":"2287:131:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[244],"name":"Owned","scope":965},"children":[{"attributes":{"constant":false,"name":"owner","scope":244,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":176,"name":"ElementaryTypeName","src":"2625:7:0"}],"id":177,"name":"VariableDeclaration","src":"2625:20:0"},{"attributes":{"constant":false,"name":"newOwner","scope":244,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":178,"name":"ElementaryTypeName","src":"2652:7:0"}],"id":179,"name":"VariableDeclaration","src":"2652:23:0"},{"attributes":{"anonymous":false,"name":"OwnershipTransferred"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_from","scope":185,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":180,"name":"ElementaryTypeName","src":"2710:7:0"}],"id":181,"name":"VariableDeclaration","src":"2710:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"_to","scope":185,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":182,"name":"ElementaryTypeName","src":"2733:7:0"}],"id":183,"name":"VariableDeclaration","src":"2733:19:0"}],"id":184,"name":"ParameterList","src":"2709:44:0"}],"id":185,"name":"EventDefinition","src":"2683:71:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"Owned","payable":false,"scope":244,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":186,"name":"ParameterList","src":"2775:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":187,"name":"ParameterList","src":"2785:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":188,"name":"Identifier","src":"2796:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":189,"name":"Identifier","src":"2804:3:0"}],"id":190,"name":"MemberAccess","src":"2804:10:0"}],"id":191,"name":"Assignment","src":"2796:18:0"}],"id":192,"name":"ExpressionStatement","src":"2796:18:0"}],"id":193,"name":"Block","src":"2785:37:0"}],"id":194,"name":"FunctionDefinition","src":"2761:61:0"},{"attributes":{"name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":195,"name":"ParameterList","src":"2848:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":196,"name":"Identifier","src":"2859:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":197,"name":"Identifier","src":"2867:3:0"}],"id":198,"name":"MemberAccess","src":"2867:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":199,"name":"Identifier","src":"2881:5:0"}],"id":200,"name":"BinaryOperation","src":"2867:19:0"}],"id":201,"name":"FunctionCall","src":"2859:28:0"}],"id":202,"name":"ExpressionStatement","src":"2859:28:0"},{"id":203,"name":"PlaceholderStatement","src":"2898:1:0"}],"id":204,"name":"Block","src":"2848:59:0"}],"id":205,"name":"ModifierDefinition","src":"2829:78:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":244,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":206,"name":"ElementaryTypeName","src":"2941:7:0"}],"id":207,"name":"VariableDeclaration","src":"2941:17:0"}],"id":208,"name":"ParameterList","src":"2940:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":211,"name":"ParameterList","src":"2977:0:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":209,"name":"Identifier","src":"2967:9:0"}],"id":210,"name":"ModifierInvocation","src":"2967:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":212,"name":"Identifier","src":"2988:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":207,"type":"address","value":"_newOwner"},"id":213,"name":"Identifier","src":"2999:9:0"}],"id":214,"name":"Assignment","src":"2988:20:0"}],"id":215,"name":"ExpressionStatement","src":"2988:20:0"}],"id":216,"name":"Block","src":"2977:39:0"}],"id":217,"name":"FunctionDefinition","src":"2914:102:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"acceptOwnership","payable":false,"scope":244,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":218,"name":"ParameterList","src":"3046:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":219,"name":"ParameterList","src":"3056:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":979,"type":"function (bool) pure","value":"require"},"id":220,"name":"Identifier","src":"3067:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":221,"name":"Identifier","src":"3075:3:0"}],"id":222,"name":"MemberAccess","src":"3075:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":223,"name":"Identifier","src":"3089:8:0"}],"id":224,"name":"BinaryOperation","src":"3075:22:0"}],"id":225,"name":"FunctionCall","src":"3067:31:0"}],"id":226,"name":"ExpressionStatement","src":"3067:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":185,"type":"function (address,address)","value":"OwnershipTransferred"},"id":227,"name":"Identifier","src":"3109:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":228,"name":"Identifier","src":"3130:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":229,"name":"Identifier","src":"3137:8:0"}],"id":230,"name":"FunctionCall","src":"3109:37:0"}],"id":231,"name":"ExpressionStatement","src":"3109:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":232,"name":"Identifier","src":"3157:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":233,"name":"Identifier","src":"3165:8:0"}],"id":234,"name":"Assignment","src":"3157:16:0"}],"id":235,"name":"ExpressionStatement","src":"3157:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"address","value":"newOwner"},"id":236,"name":"Identifier","src":"3184:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":237,"name":"ElementaryTypeNameExpression","src":"3195:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":238,"name":"Literal","src":"3203:1:0"}],"id":239,"name":"FunctionCall","src":"3195:10:0"}],"id":240,"name":"Assignment","src":"3184:21:0"}],"id":241,"name":"ExpressionStatement","src":"3184:21:0"}],"id":242,"name":"Block","src":"3056:157:0"}],"id":243,"name":"FunctionDefinition","src":"3022:191:0"}],"id":244,"name":"ContractDefinition","src":"2603:613:0"},{"attributes":{"contractDependencies":[163,244],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[964,244,163],"name":"_0xBitcoinToken","scope":965},"children":[{"attributes":{"arguments":[null]},"children":[{"attributes":{"contractScope":null,"name":"ERC20Interface","referencedDeclaration":163,"type":"contract ERC20Interface"},"id":245,"name":"UserDefinedTypeName","src":"3506:14:0"}],"id":246,"name":"InheritanceSpecifier","src":"3506:14:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"contractScope":null,"name":"Owned","referencedDeclaration":244,"type":"contract Owned"},"id":247,"name":"UserDefinedTypeName","src":"3522:5:0"}],"id":248,"name":"InheritanceSpecifier","src":"3522:5:0"},{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":96,"type":"library SafeMath"},"id":249,"name":"UserDefinedTypeName","src":"3541:8:0"},{"attributes":{"name":"uint","type":"uint256"},"id":250,"name":"ElementaryTypeName","src":"3554:4:0"}],"id":251,"name":"UsingForDirective","src":"3535:24:0"},{"attributes":{"constant":false,"name":"symbol","scope":964,"stateVariable":true,"storageLocation":"default","type":"string storage ref","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string storage pointer"},"id":252,"name":"ElementaryTypeName","src":"3566:6:0"}],"id":253,"name":"VariableDeclaration","src":"3566:20:0"},{"attributes":{"constant":false,"name":"name","scope":964,"stateVariable":true,"storageLocation":"default","type":"string storage ref","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string storage pointer"},"id":254,"name":"ElementaryTypeName","src":"3593:6:0"}],"id":255,"name":"VariableDeclaration","src":"3593:19:0"},{"attributes":{"constant":false,"name":"decimals","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint8","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":256,"name":"ElementaryTypeName","src":"3619:5:0"}],"id":257,"name":"VariableDeclaration","src":"3619:21:0"},{"attributes":{"constant":false,"name":"_totalSupply","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":258,"name":"ElementaryTypeName","src":"3647:4:0"}],"id":259,"name":"VariableDeclaration","src":"3647:24:0"},{"attributes":{"constant":false,"name":"latestDifficultyPeriodStarted","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":260,"name":"ElementaryTypeName","src":"3782:4:0"}],"id":261,"name":"VariableDeclaration","src":"3782:41:0"},{"attributes":{"constant":false,"name":"epochCount","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":262,"name":"ElementaryTypeName","src":"3832:4:0"}],"id":263,"name":"VariableDeclaration","src":"3832:22:0"},{"attributes":{"constant":false,"name":"_BLOCKS_PER_READJUSTMENT","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":264,"name":"ElementaryTypeName","src":"3888:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"323536","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 256","value":"256"},"id":265,"name":"Literal","src":"3927:3:0"}],"id":266,"name":"VariableDeclaration","src":"3888:42:0"},{"attributes":{"constant":false,"name":"_MINIMUM_TARGET","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":267,"name":"ElementaryTypeName","src":"4006:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":268,"name":"Literal","src":"4037:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":269,"name":"Literal","src":"4040:1:0"}],"id":270,"name":"BinaryOperation","src":"4037:4:0"}],"id":271,"name":"VariableDeclaration","src":"4006:35:0"},{"attributes":{"constant":false,"name":"_MAXIMUM_TARGET","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":272,"name":"ElementaryTypeName","src":"4070:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1","typeString":"int_const 1809251394333065553493296640760748560207343510400633813116524750123642650624"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1809251394333065553493296640760748560207343510400633813116524750123642650624"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":273,"name":"Literal","src":"4101:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"323530","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 250","value":"250"},"id":274,"name":"Literal","src":"4104:3:0"}],"id":275,"name":"BinaryOperation","src":"4101:6:0"}],"id":276,"name":"VariableDeclaration","src":"4070:37:0"},{"attributes":{"constant":false,"name":"miningTarget","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":277,"name":"ElementaryTypeName","src":"4115:4:0"}],"id":278,"name":"VariableDeclaration","src":"4115:24:0"},{"attributes":{"constant":false,"name":"challengeNumber","scope":964,"stateVariable":true,"storageLocation":"default","type":"bytes32","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":279,"name":"ElementaryTypeName","src":"4222:7:0"}],"id":280,"name":"VariableDeclaration","src":"4222:30:0"},{"attributes":{"constant":false,"name":"rewardEra","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":281,"name":"ElementaryTypeName","src":"4312:4:0"}],"id":282,"name":"VariableDeclaration","src":"4312:21:0"},{"attributes":{"constant":false,"name":"maxSupplyForEra","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":283,"name":"ElementaryTypeName","src":"4339:4:0"}],"id":284,"name":"VariableDeclaration","src":"4339:27:0"},{"attributes":{"constant":false,"name":"lastRewardTo","scope":964,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":285,"name":"ElementaryTypeName","src":"4374:7:0"}],"id":286,"name":"VariableDeclaration","src":"4374:27:0"},{"attributes":{"constant":false,"name":"lastRewardAmount","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":287,"name":"ElementaryTypeName","src":"4407:4:0"}],"id":288,"name":"VariableDeclaration","src":"4407:28:0"},{"attributes":{"constant":false,"name":"lastRewardEthBlockNumber","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":289,"name":"ElementaryTypeName","src":"4441:4:0"}],"id":290,"name":"VariableDeclaration","src":"4441:36:0"},{"attributes":{"constant":false,"name":"rewardHashesFound","scope":964,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(bytes32 => uint256)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":291,"name":"ElementaryTypeName","src":"4493:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":292,"name":"ElementaryTypeName","src":"4504:4:0"}],"id":293,"name":"Mapping","src":"4485:24:0"}],"id":294,"name":"VariableDeclaration","src":"4485:42:0"},{"attributes":{"constant":false,"name":"tokensMinted","scope":964,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":295,"name":"ElementaryTypeName","src":"4559:4:0"}],"id":296,"name":"VariableDeclaration","src":"4559:24:0"},{"attributes":{"constant":false,"name":"balances","scope":964,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":297,"name":"ElementaryTypeName","src":"4598:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":298,"name":"ElementaryTypeName","src":"4609:4:0"}],"id":299,"name":"Mapping","src":"4590:24:0"}],"id":300,"name":"VariableDeclaration","src":"4590:33:0"},{"attributes":{"constant":false,"name":"allowed","scope":964,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":301,"name":"ElementaryTypeName","src":"4642:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":302,"name":"ElementaryTypeName","src":"4661:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":303,"name":"ElementaryTypeName","src":"4672:4:0"}],"id":304,"name":"Mapping","src":"4653:24:0"}],"id":305,"name":"Mapping","src":"4634:44:0"}],"id":306,"name":"VariableDeclaration","src":"4634:52:0"},{"attributes":{"anonymous":false,"name":"Mint"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":316,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":307,"name":"ElementaryTypeName","src":"4707:7:0"}],"id":308,"name":"VariableDeclaration","src":"4707:20:0"},{"attributes":{"constant":false,"indexed":false,"name":"reward_amount","scope":316,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":309,"name":"ElementaryTypeName","src":"4729:4:0"}],"id":310,"name":"VariableDeclaration","src":"4729:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"epochCount","scope":316,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":311,"name":"ElementaryTypeName","src":"4749:4:0"}],"id":312,"name":"VariableDeclaration","src":"4749:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"newChallengeNumber","scope":316,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":313,"name":"ElementaryTypeName","src":"4766:7:0"}],"id":314,"name":"VariableDeclaration","src":"4766:26:0"}],"id":315,"name":"ParameterList","src":"4706:87:0"}],"id":316,"name":"EventDefinition","src":"4696:98:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":true,"name":"_0xBitcoinToken","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":317,"name":"ParameterList","src":"5006:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":320,"name":"ParameterList","src":"5025:0:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":318,"name":"Identifier","src":"5016:9:0"}],"id":319,"name":"ModifierInvocation","src":"5016:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":253,"type":"string storage ref","value":"symbol"},"id":321,"name":"Identifier","src":"5036:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3078425443","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"0xBTC\"","value":"0xBTC"},"id":322,"name":"Literal","src":"5045:7:0"}],"id":323,"name":"Assignment","src":"5036:16:0"}],"id":324,"name":"ExpressionStatement","src":"5036:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"string storage ref","value":"name"},"id":325,"name":"Identifier","src":"5063:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3078426974636f696e20546f6b656e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"0xBitcoin Token\"","value":"0xBitcoin Token"},"id":326,"name":"Literal","src":"5070:17:0"}],"id":327,"name":"Assignment","src":"5063:24:0"}],"id":328,"name":"ExpressionStatement","src":"5063:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint8","value":"decimals"},"id":329,"name":"Identifier","src":"5098:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":330,"name":"Literal","src":"5109:1:0"}],"id":331,"name":"Assignment","src":"5098:12:0"}],"id":332,"name":"ExpressionStatement","src":"5098:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":333,"name":"Identifier","src":"5121:12:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3231303030303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 21000000","value":"21000000"},"id":334,"name":"Literal","src":"5136:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":335,"name":"Literal","src":"5147:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":336,"name":"ElementaryTypeNameExpression","src":"5151:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint8","value":"decimals"},"id":337,"name":"Identifier","src":"5156:8:0"}],"id":338,"name":"FunctionCall","src":"5151:14:0"}],"id":339,"name":"BinaryOperation","src":"5147:18:0"}],"id":340,"name":"BinaryOperation","src":"5136:29:0"}],"id":341,"name":"Assignment","src":"5121:44:0"}],"id":342,"name":"ExpressionStatement","src":"5121:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":343,"name":"Identifier","src":"5175:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":344,"name":"Literal","src":"5190:1:0"}],"id":345,"name":"Assignment","src":"5175:16:0"}],"id":346,"name":"ExpressionStatement","src":"5175:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":347,"name":"Identifier","src":"5202:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":348,"name":"Literal","src":"5214:1:0"}],"id":349,"name":"Assignment","src":"5202:13:0"}],"id":350,"name":"ExpressionStatement","src":"5202:13:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"uint256","value":"maxSupplyForEra"},"id":351,"name":"Identifier","src":"5225:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":352,"name":"Identifier","src":"5243:12:0"}],"id":353,"name":"MemberAccess","src":"5243:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":354,"name":"Literal","src":"5260:1:0"}],"id":355,"name":"FunctionCall","src":"5243:19:0"}],"id":356,"name":"Assignment","src":"5225:37:0"}],"id":357,"name":"ExpressionStatement","src":"5225:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":358,"name":"Identifier","src":"5273:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":359,"name":"Identifier","src":"5288:15:0"}],"id":360,"name":"Assignment","src":"5273:30:0"}],"id":361,"name":"ExpressionStatement","src":"5273:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":261,"type":"uint256","value":"latestDifficultyPeriodStarted"},"id":362,"name":"Identifier","src":"5314:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":363,"name":"Identifier","src":"5346:5:0"}],"id":364,"name":"MemberAccess","src":"5346:12:0"}],"id":365,"name":"Assignment","src":"5314:44:0"}],"id":366,"name":"ExpressionStatement","src":"5314:44:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"function ()","value":"_startNewMiningEpoch"},"id":367,"name":"Identifier","src":"5369:20:0"}],"id":368,"name":"FunctionCall","src":"5369:22:0"}],"id":369,"name":"ExpressionStatement","src":"5369:22:0"}],"id":370,"name":"Block","src":"5025:471:0"}],"id":371,"name":"FunctionDefinition","src":"4982:514:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"_startNewMiningEpoch","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":372,"name":"ParameterList","src":"5531:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":373,"name":"ParameterList","src":"5543:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":374,"name":"Identifier","src":"5630:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"uint256","value":"maxSupplyForEra"},"id":375,"name":"Identifier","src":"5646:15:0"}],"id":376,"name":"BinaryOperation","src":"5630:31:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":377,"name":"Identifier","src":"5665:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 32","value":"32"},"id":378,"name":"Literal","src":"5677:2:0"}],"id":379,"name":"BinaryOperation","src":"5665:14:0"}],"id":380,"name":"BinaryOperation","src":"5630:49:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":381,"name":"Identifier","src":"5745:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":382,"name":"Identifier","src":"5757:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":383,"name":"Literal","src":"5769:1:0"}],"id":384,"name":"BinaryOperation","src":"5757:13:0"}],"id":385,"name":"Assignment","src":"5745:25:0"}],"id":386,"name":"ExpressionStatement","src":"5745:25:0"}],"id":387,"name":"Block","src":"5735:44:0"}],"id":388,"name":"IfStatement","src":"5627:152:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"uint256","value":"maxSupplyForEra"},"id":389,"name":"Identifier","src":"5851:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":390,"name":"Identifier","src":"5869:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":391,"name":"Identifier","src":"5884:12:0"}],"id":392,"name":"MemberAccess","src":"5884:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":393,"name":"Literal","src":"5902:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":394,"name":"Identifier","src":"5906:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":395,"name":"Literal","src":"5918:1:0"}],"id":396,"name":"BinaryOperation","src":"5906:13:0"}],"id":397,"name":"TupleExpression","src":"5905:15:0"}],"id":398,"name":"BinaryOperation","src":"5902:18:0"}],"id":399,"name":"FunctionCall","src":"5884:37:0"}],"id":400,"name":"BinaryOperation","src":"5869:52:0"}],"id":401,"name":"Assignment","src":"5851:70:0"}],"id":402,"name":"ExpressionStatement","src":"5851:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":403,"name":"Identifier","src":"6047:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"blockhash","referencedDeclaration":null,"type":"function (uint256) view returns (bytes32)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":404,"name":"Identifier","src":"6065:5:0"}],"id":405,"name":"MemberAccess","src":"6065:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":406,"name":"Identifier","src":"6081:5:0"}],"id":407,"name":"MemberAccess","src":"6081:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":408,"name":"Literal","src":"6096:1:0"}],"id":409,"name":"BinaryOperation","src":"6081:16:0"}],"id":410,"name":"FunctionCall","src":"6065:33:0"}],"id":411,"name":"Assignment","src":"6047:51:0"}],"id":412,"name":"ExpressionStatement","src":"6047:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":413,"name":"Identifier","src":"6108:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":414,"name":"Identifier","src":"6121:10:0"}],"id":415,"name":"MemberAccess","src":"6121:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":416,"name":"Literal","src":"6136:1:0"}],"id":417,"name":"FunctionCall","src":"6121:17:0"}],"id":418,"name":"Assignment","src":"6108:30:0"}],"id":419,"name":"ExpressionStatement","src":"6108:30:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":420,"name":"Identifier","src":"6224:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":266,"type":"uint256","value":"_BLOCKS_PER_READJUSTMENT"},"id":421,"name":"Identifier","src":"6237:24:0"}],"id":422,"name":"BinaryOperation","src":"6224:37:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":423,"name":"Literal","src":"6265:1:0"}],"id":424,"name":"BinaryOperation","src":"6224:42:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":501,"type":"function ()","value":"_reAdjustDifficulty"},"id":425,"name":"Identifier","src":"6284:19:0"}],"id":426,"name":"FunctionCall","src":"6284:21:0"}],"id":427,"name":"ExpressionStatement","src":"6284:21:0"}],"id":428,"name":"Block","src":"6274:40:0"}],"id":429,"name":"IfStatement","src":"6221:93:0"}],"id":430,"name":"Block","src":"5543:780:0"}],"id":431,"name":"FunctionDefinition","src":"5502:821:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"_reAdjustDifficulty","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":432,"name":"ParameterList","src":"6575:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":433,"name":"ParameterList","src":"6587:0:0"},{"children":[{"attributes":{"assignments":[435]},"children":[{"attributes":{"constant":false,"name":"ethBlocksSinceLastDifficultyPeriod","scope":501,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":434,"name":"ElementaryTypeName","src":"6599:4:0"}],"id":435,"name":"VariableDeclaration","src":"6599:39:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":436,"name":"Identifier","src":"6641:5:0"}],"id":437,"name":"MemberAccess","src":"6641:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":261,"type":"uint256","value":"latestDifficultyPeriodStarted"},"id":438,"name":"Identifier","src":"6656:29:0"}],"id":439,"name":"BinaryOperation","src":"6641:44:0"}],"id":440,"name":"VariableDeclarationStatement","src":"6599:86:0"},{"attributes":{"assignments":[442]},"children":[{"attributes":{"constant":false,"name":"epochsMined","scope":501,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":441,"name":"ElementaryTypeName","src":"6857:4:0"}],"id":442,"name":"VariableDeclaration","src":"6857:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":266,"type":"uint256","value":"_BLOCKS_PER_READJUSTMENT"},"id":443,"name":"Identifier","src":"6876:24:0"}],"id":444,"name":"VariableDeclarationStatement","src":"6857:43:0"},{"attributes":{"assignments":[446]},"children":[{"attributes":{"constant":false,"name":"targetEthBlocksPerEpoch","scope":501,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":445,"name":"ElementaryTypeName","src":"6917:4:0"}],"id":446,"name":"VariableDeclaration","src":"6917:28:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":442,"type":"uint256","value":"epochsMined"},"id":447,"name":"Identifier","src":"6948:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3630","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 60","value":"60"},"id":448,"name":"Literal","src":"6962:2:0"}],"id":449,"name":"BinaryOperation","src":"6948:16:0"}],"id":450,"name":"VariableDeclarationStatement","src":"6917:47:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":435,"type":"uint256","value":"ethBlocksSinceLastDifficultyPeriod"},"id":451,"name":"Identifier","src":"7090:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":446,"type":"uint256","value":"targetEthBlocksPerEpoch"},"id":452,"name":"Identifier","src":"7127:23:0"}],"id":453,"name":"BinaryOperation","src":"7090:60:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":454,"name":"Identifier","src":"7200:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":455,"name":"Identifier","src":"7215:12:0"}],"id":456,"name":"MemberAccess","src":"7215:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":457,"name":"Identifier","src":"7232:12:0"}],"id":458,"name":"MemberAccess","src":"7232:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3230","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 20","value":"20"},"id":459,"name":"Literal","src":"7249:2:0"}],"id":460,"name":"FunctionCall","src":"7232:20:0"}],"id":461,"name":"FunctionCall","src":"7215:38:0"}],"id":462,"name":"Assignment","src":"7200:53:0"}],"id":463,"name":"ExpressionStatement","src":"7200:53:0"}],"id":464,"name":"Block","src":"7161:103:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":465,"name":"Identifier","src":"7307:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":466,"name":"Identifier","src":"7322:12:0"}],"id":467,"name":"MemberAccess","src":"7322:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":468,"name":"Identifier","src":"7339:12:0"}],"id":469,"name":"MemberAccess","src":"7339:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3230","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 20","value":"20"},"id":470,"name":"Literal","src":"7356:2:0"}],"id":471,"name":"FunctionCall","src":"7339:20:0"}],"id":472,"name":"FunctionCall","src":"7322:38:0"}],"id":473,"name":"Assignment","src":"7307:53:0"}],"id":474,"name":"ExpressionStatement","src":"7307:53:0"}],"id":475,"name":"Block","src":"7268:103:0"}],"id":476,"name":"IfStatement","src":"7086:285:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":261,"type":"uint256","value":"latestDifficultyPeriodStarted"},"id":477,"name":"Identifier","src":"7383:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":478,"name":"Identifier","src":"7415:5:0"}],"id":479,"name":"MemberAccess","src":"7415:12:0"}],"id":480,"name":"Assignment","src":"7383:44:0"}],"id":481,"name":"ExpressionStatement","src":"7383:44:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":482,"name":"Identifier","src":"7441:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":271,"type":"uint256","value":"_MINIMUM_TARGET"},"id":483,"name":"Identifier","src":"7456:15:0"}],"id":484,"name":"BinaryOperation","src":"7441:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":485,"name":"Identifier","src":"7497:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":271,"type":"uint256","value":"_MINIMUM_TARGET"},"id":486,"name":"Identifier","src":"7512:15:0"}],"id":487,"name":"Assignment","src":"7497:30:0"}],"id":488,"name":"ExpressionStatement","src":"7497:30:0"}],"id":489,"name":"Block","src":"7485:53:0"}],"id":490,"name":"IfStatement","src":"7438:100:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":491,"name":"Identifier","src":"7551:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":492,"name":"Identifier","src":"7566:15:0"}],"id":493,"name":"BinaryOperation","src":"7551:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":494,"name":"Identifier","src":"7608:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":495,"name":"Identifier","src":"7623:15:0"}],"id":496,"name":"Assignment","src":"7608:30:0"}],"id":497,"name":"ExpressionStatement","src":"7608:30:0"}],"id":498,"name":"Block","src":"7596:53:0"}],"id":499,"name":"IfStatement","src":"7548:101:0"}],"id":500,"name":"Block","src":"6587:1068:0"}],"id":501,"name":"FunctionDefinition","src":"6547:1108:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMintDigest","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"nonce","scope":524,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":502,"name":"ElementaryTypeName","src":"7685:7:0"}],"id":503,"name":"VariableDeclaration","src":"7685:13:0"},{"attributes":{"constant":false,"name":"challenge_digest","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":504,"name":"ElementaryTypeName","src":"7700:7:0"}],"id":505,"name":"VariableDeclaration","src":"7700:24:0"},{"attributes":{"constant":false,"name":"challenge_number","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":506,"name":"ElementaryTypeName","src":"7726:7:0"}],"id":507,"name":"VariableDeclaration","src":"7726:24:0"}],"id":508,"name":"ParameterList","src":"7684:67:0"},{"children":[{"attributes":{"constant":false,"name":"digesttest","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":509,"name":"ElementaryTypeName","src":"7768:7:0"}],"id":510,"name":"VariableDeclaration","src":"7768:18:0"}],"id":511,"name":"ParameterList","src":"7767:20:0"},{"children":[{"attributes":{"assignments":[513]},"children":[{"attributes":{"constant":false,"name":"digest","scope":524,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":512,"name":"ElementaryTypeName","src":"7799:7:0"}],"id":513,"name":"VariableDeclaration","src":"7799:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":970,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":514,"name":"Identifier","src":"7816:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":507,"type":"bytes32","value":"challenge_number"},"id":515,"name":"Identifier","src":"7826:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":516,"name":"Identifier","src":"7843:3:0"}],"id":517,"name":"MemberAccess","src":"7843:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":503,"type":"uint256","value":"nonce"},"id":518,"name":"Identifier","src":"7854:5:0"}],"id":519,"name":"FunctionCall","src":"7816:44:0"}],"id":520,"name":"VariableDeclarationStatement","src":"7799:61:0"},{"attributes":{"functionReturnParameters":511},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":513,"type":"bytes32","value":"digest"},"id":521,"name":"Identifier","src":"7878:6:0"}],"id":522,"name":"Return","src":"7871:13:0"}],"id":523,"name":"Block","src":"7788:106:0"}],"id":524,"name":"FunctionDefinition","src":"7662:232:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"checkMintSolution","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"nonce","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":525,"name":"ElementaryTypeName","src":"7929:7:0"}],"id":526,"name":"VariableDeclaration","src":"7929:13:0"},{"attributes":{"constant":false,"name":"challenge_digest","scope":570,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":527,"name":"ElementaryTypeName","src":"7944:7:0"}],"id":528,"name":"VariableDeclaration","src":"7944:24:0"},{"attributes":{"constant":false,"name":"challenge_number","scope":570,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":529,"name":"ElementaryTypeName","src":"7970:7:0"}],"id":530,"name":"VariableDeclaration","src":"7970:24:0"},{"attributes":{"constant":false,"name":"testDifficulty","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":531,"name":"ElementaryTypeName","src":"7996:4:0"}],"id":532,"name":"VariableDeclaration","src":"7996:19:0"}],"id":533,"name":"ParameterList","src":"7928:88:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":570,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":534,"name":"ElementaryTypeName","src":"8033:4:0"}],"id":535,"name":"VariableDeclaration","src":"8033:12:0"}],"id":536,"name":"ParameterList","src":"8032:14:0"},{"children":[{"attributes":{"assignments":[538]},"children":[{"attributes":{"constant":false,"name":"difficulty","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":537,"name":"ElementaryTypeName","src":"8060:4:0"}],"id":538,"name":"VariableDeclaration","src":"8060:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":532,"type":"uint256","value":"testDifficulty"},"id":539,"name":"Identifier","src":"8078:14:0"}],"id":540,"name":"VariableDeclarationStatement","src":"8060:32:0"},{"attributes":{"assignments":[542]},"children":[{"attributes":{"constant":false,"name":"reward_amount","scope":570,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":541,"name":"ElementaryTypeName","src":"8104:4:0"}],"id":542,"name":"VariableDeclaration","src":"8104:18:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":723,"type":"function () view returns (uint256)","value":"getMiningReward"},"id":543,"name":"Identifier","src":"8125:15:0"}],"id":544,"name":"FunctionCall","src":"8125:17:0"}],"id":545,"name":"VariableDeclarationStatement","src":"8104:38:0"},{"attributes":{"assignments":[547]},"children":[{"attributes":{"constant":false,"name":"digest","scope":570,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":546,"name":"ElementaryTypeName","src":"8155:7:0"}],"id":547,"name":"VariableDeclaration","src":"8155:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":970,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":548,"name":"Identifier","src":"8172:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":530,"type":"bytes32","value":"challenge_number"},"id":549,"name":"Identifier","src":"8182:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":550,"name":"Identifier","src":"8199:3:0"}],"id":551,"name":"MemberAccess","src":"8199:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":526,"type":"uint256","value":"nonce"},"id":552,"name":"Identifier","src":"8210:5:0"}],"id":553,"name":"FunctionCall","src":"8172:44:0"}],"id":554,"name":"VariableDeclarationStatement","src":"8155:61:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":555,"name":"ElementaryTypeNameExpression","src":"8286:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":547,"type":"bytes32","value":"digest"},"id":556,"name":"Identifier","src":"8294:6:0"}],"id":557,"name":"FunctionCall","src":"8286:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":558,"name":"Identifier","src":"8304:12:0"}],"id":559,"name":"BinaryOperation","src":"8286:30:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":560,"name":"Identifier","src":"8318:6:0"}],"id":561,"name":"FunctionCall","src":"8318:8:0"}],"id":562,"name":"ExpressionStatement","src":"8318:8:0"}],"id":563,"name":"IfStatement","src":"8283:43:0"},{"attributes":{"functionReturnParameters":536},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":547,"type":"bytes32","value":"digest"},"id":564,"name":"Identifier","src":"8347:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":528,"type":"bytes32","value":"challenge_digest"},"id":565,"name":"Identifier","src":"8357:16:0"}],"id":566,"name":"BinaryOperation","src":"8347:26:0"}],"id":567,"name":"TupleExpression","src":"8346:28:0"}],"id":568,"name":"Return","src":"8339:35:0"}],"id":569,"name":"Block","src":"8047:339:0"}],"id":570,"name":"FunctionDefinition","src":"7902:484:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mint","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"nonce","scope":676,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":571,"name":"ElementaryTypeName","src":"8407:7:0"}],"id":572,"name":"VariableDeclaration","src":"8407:13:0"},{"attributes":{"constant":false,"name":"challenge_digest","scope":676,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":573,"name":"ElementaryTypeName","src":"8422:7:0"}],"id":574,"name":"VariableDeclaration","src":"8422:24:0"}],"id":575,"name":"ParameterList","src":"8406:41:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":676,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":576,"name":"ElementaryTypeName","src":"8464:4:0"}],"id":577,"name":"VariableDeclaration","src":"8464:12:0"}],"id":578,"name":"ParameterList","src":"8463:14:0"},{"children":[{"attributes":{"assignments":[580]},"children":[{"attributes":{"constant":false,"name":"reward_amount","scope":676,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":579,"name":"ElementaryTypeName","src":"8540:4:0"}],"id":580,"name":"VariableDeclaration","src":"8540:18:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":723,"type":"function () view returns (uint256)","value":"getMiningReward"},"id":581,"name":"Identifier","src":"8561:15:0"}],"id":582,"name":"FunctionCall","src":"8561:17:0"}],"id":583,"name":"VariableDeclarationStatement","src":"8540:38:0"},{"attributes":{"assignments":[585]},"children":[{"attributes":{"constant":false,"name":"digest","scope":676,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":584,"name":"ElementaryTypeName","src":"8739:7:0"}],"id":585,"name":"VariableDeclaration","src":"8739:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":970,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":586,"name":"Identifier","src":"8757:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":587,"name":"Identifier","src":"8767:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":588,"name":"Identifier","src":"8784:3:0"}],"id":589,"name":"MemberAccess","src":"8784:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":572,"type":"uint256","value":"nonce"},"id":590,"name":"Identifier","src":"8796:5:0"}],"id":591,"name":"FunctionCall","src":"8757:46:0"}],"id":592,"name":"VariableDeclarationStatement","src":"8739:64:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":593,"name":"Identifier","src":"8873:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"bytes32","value":"challenge_digest"},"id":594,"name":"Identifier","src":"8883:16:0"}],"id":595,"name":"BinaryOperation","src":"8873:26:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":596,"name":"Identifier","src":"8901:6:0"}],"id":597,"name":"FunctionCall","src":"8901:8:0"}],"id":598,"name":"ExpressionStatement","src":"8901:8:0"}],"id":599,"name":"IfStatement","src":"8869:40:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":600,"name":"ElementaryTypeNameExpression","src":"8976:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":601,"name":"Identifier","src":"8984:6:0"}],"id":602,"name":"FunctionCall","src":"8976:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":603,"name":"Identifier","src":"8994:12:0"}],"id":604,"name":"BinaryOperation","src":"8976:30:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":605,"name":"Identifier","src":"9008:6:0"}],"id":606,"name":"FunctionCall","src":"9008:8:0"}],"id":607,"name":"ExpressionStatement","src":"9008:8:0"}],"id":608,"name":"IfStatement","src":"8973:43:0"},{"attributes":{"assignments":[610]},"children":[{"attributes":{"constant":false,"name":"hashFound","scope":676,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":609,"name":"ElementaryTypeName","src":"9139:4:0"}],"id":610,"name":"VariableDeclaration","src":"9139:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":294,"type":"mapping(bytes32 => uint256)","value":"rewardHashesFound"},"id":611,"name":"Identifier","src":"9156:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":612,"name":"Identifier","src":"9174:6:0"}],"id":613,"name":"IndexAccess","src":"9156:25:0"}],"id":614,"name":"VariableDeclarationStatement","src":"9139:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":294,"type":"mapping(bytes32 => uint256)","value":"rewardHashesFound"},"id":615,"name":"Identifier","src":"9192:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"bytes32","value":"digest"},"id":616,"name":"Identifier","src":"9210:6:0"}],"id":617,"name":"IndexAccess","src":"9192:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":618,"name":"Identifier","src":"9220:10:0"}],"id":619,"name":"Assignment","src":"9192:38:0"}],"id":620,"name":"ExpressionStatement","src":"9192:38:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":610,"type":"uint256","value":"hashFound"},"id":621,"name":"Identifier","src":"9244:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":622,"name":"Literal","src":"9257:1:0"}],"id":623,"name":"BinaryOperation","src":"9244:14:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":624,"name":"Identifier","src":"9260:6:0"}],"id":625,"name":"FunctionCall","src":"9260:8:0"}],"id":626,"name":"ExpressionStatement","src":"9260:8:0"}],"id":627,"name":"IfStatement","src":"9241:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":628,"name":"Identifier","src":"9328:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":629,"name":"Identifier","src":"9337:3:0"}],"id":630,"name":"MemberAccess","src":"9337:10:0"}],"id":631,"name":"IndexAccess","src":"9328:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":632,"name":"Identifier","src":"9351:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":633,"name":"Identifier","src":"9360:3:0"}],"id":634,"name":"MemberAccess","src":"9360:10:0"}],"id":635,"name":"IndexAccess","src":"9351:20:0"}],"id":636,"name":"MemberAccess","src":"9351:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":637,"name":"Identifier","src":"9376:13:0"}],"id":638,"name":"FunctionCall","src":"9351:39:0"}],"id":639,"name":"Assignment","src":"9328:62:0"}],"id":640,"name":"ExpressionStatement","src":"9328:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":641,"name":"Identifier","src":"9402:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"tokensMinted"},"id":642,"name":"Identifier","src":"9417:12:0"}],"id":643,"name":"MemberAccess","src":"9417:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":644,"name":"Identifier","src":"9434:13:0"}],"id":645,"name":"FunctionCall","src":"9417:31:0"}],"id":646,"name":"Assignment","src":"9402:46:0"}],"id":647,"name":"ExpressionStatement","src":"9402:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":286,"type":"address","value":"lastRewardTo"},"id":648,"name":"Identifier","src":"9500:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":649,"name":"Identifier","src":"9515:3:0"}],"id":650,"name":"MemberAccess","src":"9515:10:0"}],"id":651,"name":"Assignment","src":"9500:25:0"}],"id":652,"name":"ExpressionStatement","src":"9500:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"lastRewardAmount"},"id":653,"name":"Identifier","src":"9535:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":654,"name":"Identifier","src":"9554:13:0"}],"id":655,"name":"Assignment","src":"9535:32:0"}],"id":656,"name":"ExpressionStatement","src":"9535:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":290,"type":"uint256","value":"lastRewardEthBlockNumber"},"id":657,"name":"Identifier","src":"9577:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"block","value":"block"},"id":658,"name":"Identifier","src":"9604:5:0"}],"id":659,"name":"MemberAccess","src":"9604:12:0"}],"id":660,"name":"Assignment","src":"9577:39:0"}],"id":661,"name":"ExpressionStatement","src":"9577:39:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":431,"type":"function ()","value":"_startNewMiningEpoch"},"id":662,"name":"Identifier","src":"9629:20:0"}],"id":663,"name":"FunctionCall","src":"9629:22:0"}],"id":664,"name":"ExpressionStatement","src":"9629:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":316,"type":"function (address,uint256,uint256,bytes32)","value":"Mint"},"id":665,"name":"Identifier","src":"9664:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":666,"name":"Identifier","src":"9669:3:0"}],"id":667,"name":"MemberAccess","src":"9669:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"reward_amount"},"id":668,"name":"Identifier","src":"9681:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"epochCount"},"id":669,"name":"Identifier","src":"9696:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":670,"name":"Identifier","src":"9708:15:0"}],"id":671,"name":"FunctionCall","src":"9664:61:0"}],"id":672,"name":"ExpressionStatement","src":"9664:61:0"},{"attributes":{"functionReturnParameters":578},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":673,"name":"Literal","src":"9742:4:0"}],"id":674,"name":"Return","src":"9735:11:0"}],"id":675,"name":"Block","src":"8478:1276:0"}],"id":676,"name":"FunctionDefinition","src":"8393:1361:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getChallengeNumber","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":677,"name":"ParameterList","src":"9871:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":684,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":678,"name":"ElementaryTypeName","src":"9899:7:0"}],"id":679,"name":"VariableDeclaration","src":"9899:7:0"}],"id":680,"name":"ParameterList","src":"9898:9:0"},{"children":[{"attributes":{"functionReturnParameters":680},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"bytes32","value":"challengeNumber"},"id":681,"name":"Identifier","src":"9925:15:0"}],"id":682,"name":"Return","src":"9918:22:0"}],"id":683,"name":"Block","src":"9908:39:0"}],"id":684,"name":"FunctionDefinition","src":"9844:103:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMiningDifficulty","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":685,"name":"ParameterList","src":"10064:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":695,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":686,"name":"ElementaryTypeName","src":"10092:4:0"}],"id":687,"name":"VariableDeclaration","src":"10092:4:0"}],"id":688,"name":"ParameterList","src":"10091:6:0"},{"children":[{"attributes":{"functionReturnParameters":688},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"uint256","value":"_MAXIMUM_TARGET"},"id":689,"name":"Identifier","src":"10115:15:0"}],"id":690,"name":"MemberAccess","src":"10115:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":691,"name":"Identifier","src":"10135:12:0"}],"id":692,"name":"FunctionCall","src":"10115:33:0"}],"id":693,"name":"Return","src":"10108:40:0"}],"id":694,"name":"Block","src":"10098:57:0"}],"id":695,"name":"FunctionDefinition","src":"10036:119:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMiningTarget","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":696,"name":"ParameterList","src":"10185:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":703,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":697,"name":"ElementaryTypeName","src":"10213:4:0"}],"id":698,"name":"VariableDeclaration","src":"10213:4:0"}],"id":699,"name":"ParameterList","src":"10212:6:0"},{"children":[{"attributes":{"functionReturnParameters":699},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"miningTarget"},"id":700,"name":"Identifier","src":"10235:12:0"}],"id":701,"name":"Return","src":"10228:19:0"}],"id":702,"name":"Block","src":"10219:34:0"}],"id":703,"name":"FunctionDefinition","src":"10161:92:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getMiningReward","payable":false,"scope":964,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":704,"name":"ParameterList","src":"10391:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":723,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":705,"name":"ElementaryTypeName","src":"10419:4:0"}],"id":706,"name":"VariableDeclaration","src":"10419:4:0"}],"id":707,"name":"ParameterList","src":"10418:6:0"},{"children":[{"attributes":{"functionReturnParameters":707},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":95,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3530","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 50","value":"50"},"id":708,"name":"Literal","src":"10570:2:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":709,"name":"Literal","src":"10575:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":710,"name":"ElementaryTypeNameExpression","src":"10579:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint8","value":"decimals"},"id":711,"name":"Identifier","src":"10584:8:0"}],"id":712,"name":"FunctionCall","src":"10579:14:0"}],"id":713,"name":"BinaryOperation","src":"10575:18:0"}],"id":714,"name":"BinaryOperation","src":"10570:23:0"}],"id":715,"name":"TupleExpression","src":"10569:26:0"}],"id":716,"name":"MemberAccess","src":"10569:30:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":717,"name":"Literal","src":"10601:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":282,"type":"uint256","value":"rewardEra"},"id":718,"name":"Identifier","src":"10604:9:0"}],"id":719,"name":"BinaryOperation","src":"10601:12:0"}],"id":720,"name":"FunctionCall","src":"10569:46:0"}],"id":721,"name":"Return","src":"10562:53:0"}],"id":722,"name":"Block","src":"10425:199:0"}],"id":723,"name":"FunctionDefinition","src":"10367:257:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":964,"stateMutability":"view","superFunction":101,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":724,"name":"ParameterList","src":"10835:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":737,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":725,"name":"ElementaryTypeName","src":"10863:4:0"}],"id":726,"name":"VariableDeclaration","src":"10863:4:0"}],"id":727,"name":"ParameterList","src":"10862:6:0"},{"children":[{"attributes":{"functionReturnParameters":727},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"_totalSupply"},"id":728,"name":"Identifier","src":"10887:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":729,"name":"Identifier","src":"10903:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":730,"name":"ElementaryTypeNameExpression","src":"10912:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":731,"name":"Literal","src":"10920:1:0"}],"id":732,"name":"FunctionCall","src":"10912:10:0"}],"id":733,"name":"IndexAccess","src":"10903:20:0"}],"id":734,"name":"BinaryOperation","src":"10887:36:0"}],"id":735,"name":"Return","src":"10880:43:0"}],"id":736,"name":"Block","src":"10869:62:0"}],"id":737,"name":"FunctionDefinition","src":"10815:116:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":964,"stateMutability":"view","superFunction":108,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":749,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":738,"name":"ElementaryTypeName","src":"11175:7:0"}],"id":739,"name":"VariableDeclaration","src":"11175:18:0"}],"id":740,"name":"ParameterList","src":"11174:20:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":749,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":741,"name":"ElementaryTypeName","src":"11220:4:0"}],"id":742,"name":"VariableDeclaration","src":"11220:12:0"}],"id":743,"name":"ParameterList","src":"11219:14:0"},{"children":[{"attributes":{"functionReturnParameters":743},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":744,"name":"Identifier","src":"11252:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":739,"type":"address","value":"tokenOwner"},"id":745,"name":"Identifier","src":"11261:10:0"}],"id":746,"name":"IndexAccess","src":"11252:20:0"}],"id":747,"name":"Return","src":"11245:27:0"}],"id":748,"name":"Block","src":"11234:46:0"}],"id":749,"name":"FunctionDefinition","src":"11156:124:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":126,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":792,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":750,"name":"ElementaryTypeName","src":"11647:7:0"}],"id":751,"name":"VariableDeclaration","src":"11647:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":792,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":752,"name":"ElementaryTypeName","src":"11659:4:0"}],"id":753,"name":"VariableDeclaration","src":"11659:11:0"}],"id":754,"name":"ParameterList","src":"11646:25:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":792,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":755,"name":"ElementaryTypeName","src":"11688:4:0"}],"id":756,"name":"VariableDeclaration","src":"11688:12:0"}],"id":757,"name":"ParameterList","src":"11687:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":758,"name":"Identifier","src":"11713:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":759,"name":"Identifier","src":"11722:3:0"}],"id":760,"name":"MemberAccess","src":"11722:10:0"}],"id":761,"name":"IndexAccess","src":"11713:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":762,"name":"Identifier","src":"11736:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":763,"name":"Identifier","src":"11745:3:0"}],"id":764,"name":"MemberAccess","src":"11745:10:0"}],"id":765,"name":"IndexAccess","src":"11736:20:0"}],"id":766,"name":"MemberAccess","src":"11736:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":753,"type":"uint256","value":"tokens"},"id":767,"name":"Identifier","src":"11761:6:0"}],"id":768,"name":"FunctionCall","src":"11736:32:0"}],"id":769,"name":"Assignment","src":"11713:55:0"}],"id":770,"name":"ExpressionStatement","src":"11713:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":771,"name":"Identifier","src":"11779:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":751,"type":"address","value":"to"},"id":772,"name":"Identifier","src":"11788:2:0"}],"id":773,"name":"IndexAccess","src":"11779:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":774,"name":"Identifier","src":"11794:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":751,"type":"address","value":"to"},"id":775,"name":"Identifier","src":"11803:2:0"}],"id":776,"name":"IndexAccess","src":"11794:12:0"}],"id":777,"name":"MemberAccess","src":"11794:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":753,"type":"uint256","value":"tokens"},"id":778,"name":"Identifier","src":"11811:6:0"}],"id":779,"name":"FunctionCall","src":"11794:24:0"}],"id":780,"name":"Assignment","src":"11779:39:0"}],"id":781,"name":"ExpressionStatement","src":"11779:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"function (address,address,uint256)","value":"Transfer"},"id":782,"name":"Identifier","src":"11829:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":783,"name":"Identifier","src":"11838:3:0"}],"id":784,"name":"MemberAccess","src":"11838:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":751,"type":"address","value":"to"},"id":785,"name":"Identifier","src":"11850:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":753,"type":"uint256","value":"tokens"},"id":786,"name":"Identifier","src":"11854:6:0"}],"id":787,"name":"FunctionCall","src":"11829:32:0"}],"id":788,"name":"ExpressionStatement","src":"11829:32:0"},{"attributes":{"functionReturnParameters":757},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":789,"name":"Literal","src":"11879:4:0"}],"id":790,"name":"Return","src":"11872:11:0"}],"id":791,"name":"Block","src":"11702:189:0"}],"id":792,"name":"FunctionDefinition","src":"11629:262:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":135,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":820,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":793,"name":"ElementaryTypeName","src":"12422:7:0"}],"id":794,"name":"VariableDeclaration","src":"12422:15:0"},{"attributes":{"constant":false,"name":"tokens","scope":820,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":795,"name":"ElementaryTypeName","src":"12439:4:0"}],"id":796,"name":"VariableDeclaration","src":"12439:11:0"}],"id":797,"name":"ParameterList","src":"12421:30:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":820,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":798,"name":"ElementaryTypeName","src":"12468:4:0"}],"id":799,"name":"VariableDeclaration","src":"12468:12:0"}],"id":800,"name":"ParameterList","src":"12467:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":801,"name":"Identifier","src":"12493:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":802,"name":"Identifier","src":"12501:3:0"}],"id":803,"name":"MemberAccess","src":"12501:10:0"}],"id":805,"name":"IndexAccess","src":"12493:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":794,"type":"address","value":"spender"},"id":804,"name":"Identifier","src":"12513:7:0"}],"id":806,"name":"IndexAccess","src":"12493:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":796,"type":"uint256","value":"tokens"},"id":807,"name":"Identifier","src":"12524:6:0"}],"id":808,"name":"Assignment","src":"12493:37:0"}],"id":809,"name":"ExpressionStatement","src":"12493:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":162,"type":"function (address,address,uint256)","value":"Approval"},"id":810,"name":"Identifier","src":"12541:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":811,"name":"Identifier","src":"12550:3:0"}],"id":812,"name":"MemberAccess","src":"12550:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":794,"type":"address","value":"spender"},"id":813,"name":"Identifier","src":"12562:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":796,"type":"uint256","value":"tokens"},"id":814,"name":"Identifier","src":"12571:6:0"}],"id":815,"name":"FunctionCall","src":"12541:37:0"}],"id":816,"name":"ExpressionStatement","src":"12541:37:0"},{"attributes":{"functionReturnParameters":800},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":817,"name":"Literal","src":"12596:4:0"}],"id":818,"name":"Return","src":"12589:11:0"}],"id":819,"name":"Block","src":"12482:126:0"}],"id":820,"name":"FunctionDefinition","src":"12405:203:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":146,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":879,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":821,"name":"ElementaryTypeName","src":"13171:7:0"}],"id":822,"name":"VariableDeclaration","src":"13171:12:0"},{"attributes":{"constant":false,"name":"to","scope":879,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":823,"name":"ElementaryTypeName","src":"13185:7:0"}],"id":824,"name":"VariableDeclaration","src":"13185:10:0"},{"attributes":{"constant":false,"name":"tokens","scope":879,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":825,"name":"ElementaryTypeName","src":"13197:4:0"}],"id":826,"name":"VariableDeclaration","src":"13197:11:0"}],"id":827,"name":"ParameterList","src":"13170:39:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":879,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":828,"name":"ElementaryTypeName","src":"13226:4:0"}],"id":829,"name":"VariableDeclaration","src":"13226:12:0"}],"id":830,"name":"ParameterList","src":"13225:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":831,"name":"Identifier","src":"13251:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":832,"name":"Identifier","src":"13260:4:0"}],"id":833,"name":"IndexAccess","src":"13251:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":834,"name":"Identifier","src":"13268:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":835,"name":"Identifier","src":"13277:4:0"}],"id":836,"name":"IndexAccess","src":"13268:14:0"}],"id":837,"name":"MemberAccess","src":"13268:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":838,"name":"Identifier","src":"13287:6:0"}],"id":839,"name":"FunctionCall","src":"13268:26:0"}],"id":840,"name":"Assignment","src":"13251:43:0"}],"id":841,"name":"ExpressionStatement","src":"13251:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":842,"name":"Identifier","src":"13305:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":843,"name":"Identifier","src":"13313:4:0"}],"id":846,"name":"IndexAccess","src":"13305:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":844,"name":"Identifier","src":"13319:3:0"}],"id":845,"name":"MemberAccess","src":"13319:10:0"}],"id":847,"name":"IndexAccess","src":"13305:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":45,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":848,"name":"Identifier","src":"13333:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":849,"name":"Identifier","src":"13341:4:0"}],"id":850,"name":"IndexAccess","src":"13333:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":851,"name":"Identifier","src":"13347:3:0"}],"id":852,"name":"MemberAccess","src":"13347:10:0"}],"id":853,"name":"IndexAccess","src":"13333:25:0"}],"id":854,"name":"MemberAccess","src":"13333:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":855,"name":"Identifier","src":"13363:6:0"}],"id":856,"name":"FunctionCall","src":"13333:37:0"}],"id":857,"name":"Assignment","src":"13305:65:0"}],"id":858,"name":"ExpressionStatement","src":"13305:65:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":859,"name":"Identifier","src":"13381:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":824,"type":"address","value":"to"},"id":860,"name":"Identifier","src":"13390:2:0"}],"id":861,"name":"IndexAccess","src":"13381:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":23,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"mapping(address => uint256)","value":"balances"},"id":862,"name":"Identifier","src":"13396:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":824,"type":"address","value":"to"},"id":863,"name":"Identifier","src":"13405:2:0"}],"id":864,"name":"IndexAccess","src":"13396:12:0"}],"id":865,"name":"MemberAccess","src":"13396:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":866,"name":"Identifier","src":"13413:6:0"}],"id":867,"name":"FunctionCall","src":"13396:24:0"}],"id":868,"name":"Assignment","src":"13381:39:0"}],"id":869,"name":"ExpressionStatement","src":"13381:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"function (address,address,uint256)","value":"Transfer"},"id":870,"name":"Identifier","src":"13431:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":822,"type":"address","value":"from"},"id":871,"name":"Identifier","src":"13440:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":824,"type":"address","value":"to"},"id":872,"name":"Identifier","src":"13446:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"uint256","value":"tokens"},"id":873,"name":"Identifier","src":"13450:6:0"}],"id":874,"name":"FunctionCall","src":"13431:26:0"}],"id":875,"name":"ExpressionStatement","src":"13431:26:0"},{"attributes":{"functionReturnParameters":830},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":876,"name":"Literal","src":"13475:4:0"}],"id":877,"name":"Return","src":"13468:11:0"}],"id":878,"name":"Block","src":"13240:247:0"}],"id":879,"name":"FunctionDefinition","src":"13149:338:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":964,"stateMutability":"view","superFunction":117,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenOwner","scope":895,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":880,"name":"ElementaryTypeName","src":"13792:7:0"}],"id":881,"name":"VariableDeclaration","src":"13792:18:0"},{"attributes":{"constant":false,"name":"spender","scope":895,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":882,"name":"ElementaryTypeName","src":"13812:7:0"}],"id":883,"name":"VariableDeclaration","src":"13812:15:0"}],"id":884,"name":"ParameterList","src":"13791:37:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":895,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":885,"name":"ElementaryTypeName","src":"13854:4:0"}],"id":886,"name":"VariableDeclaration","src":"13854:14:0"}],"id":887,"name":"ParameterList","src":"13853:16:0"},{"children":[{"attributes":{"functionReturnParameters":887},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":888,"name":"Identifier","src":"13888:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":881,"type":"address","value":"tokenOwner"},"id":889,"name":"Identifier","src":"13896:10:0"}],"id":890,"name":"IndexAccess","src":"13888:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":883,"type":"address","value":"spender"},"id":891,"name":"Identifier","src":"13908:7:0"}],"id":892,"name":"IndexAccess","src":"13888:28:0"}],"id":893,"name":"Return","src":"13881:35:0"}],"id":894,"name":"Block","src":"13870:54:0"}],"id":895,"name":"FunctionDefinition","src":"13773:151:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"approveAndCall","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":936,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":896,"name":"ElementaryTypeName","src":"14314:7:0"}],"id":897,"name":"VariableDeclaration","src":"14314:15:0"},{"attributes":{"constant":false,"name":"tokens","scope":936,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":898,"name":"ElementaryTypeName","src":"14331:4:0"}],"id":899,"name":"VariableDeclaration","src":"14331:11:0"},{"attributes":{"constant":false,"name":"data","scope":936,"stateVariable":false,"storageLocation":"default","type":"bytes memory","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes storage pointer"},"id":900,"name":"ElementaryTypeName","src":"14344:5:0"}],"id":901,"name":"VariableDeclaration","src":"14344:10:0"}],"id":902,"name":"ParameterList","src":"14313:42:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":936,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":903,"name":"ElementaryTypeName","src":"14372:4:0"}],"id":904,"name":"VariableDeclaration","src":"14372:12:0"}],"id":905,"name":"ParameterList","src":"14371:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":306,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":906,"name":"Identifier","src":"14397:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":907,"name":"Identifier","src":"14405:3:0"}],"id":908,"name":"MemberAccess","src":"14405:10:0"}],"id":910,"name":"IndexAccess","src":"14397:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":897,"type":"address","value":"spender"},"id":909,"name":"Identifier","src":"14417:7:0"}],"id":911,"name":"IndexAccess","src":"14397:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":899,"type":"uint256","value":"tokens"},"id":912,"name":"Identifier","src":"14428:6:0"}],"id":913,"name":"Assignment","src":"14397:37:0"}],"id":914,"name":"ExpressionStatement","src":"14397:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":162,"type":"function (address,address,uint256)","value":"Approval"},"id":915,"name":"Identifier","src":"14445:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":916,"name":"Identifier","src":"14454:3:0"}],"id":917,"name":"MemberAccess","src":"14454:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":897,"type":"address","value":"spender"},"id":918,"name":"Identifier","src":"14466:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":899,"type":"uint256","value":"tokens"},"id":919,"name":"Identifier","src":"14475:6:0"}],"id":920,"name":"FunctionCall","src":"14445:37:0"}],"id":921,"name":"ExpressionStatement","src":"14445:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$__0xBitcoinToken_$964","typeString":"contract _0xBitcoinToken"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"receiveApproval","referencedDeclaration":174,"type":"function (address,uint256,address,bytes memory) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract ApproveAndCallFallBack","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"type(contract ApproveAndCallFallBack)","value":"ApproveAndCallFallBack"},"id":922,"name":"Identifier","src":"14493:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":897,"type":"address","value":"spender"},"id":923,"name":"Identifier","src":"14516:7:0"}],"id":924,"name":"FunctionCall","src":"14493:31:0"}],"id":925,"name":"MemberAccess","src":"14493:47:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"msg","value":"msg"},"id":926,"name":"Identifier","src":"14541:3:0"}],"id":927,"name":"MemberAccess","src":"14541:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":899,"type":"uint256","value":"tokens"},"id":928,"name":"Identifier","src":"14553:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":995,"type":"contract _0xBitcoinToken","value":"this"},"id":929,"name":"Identifier","src":"14561:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":901,"type":"bytes memory","value":"data"},"id":930,"name":"Identifier","src":"14567:4:0"}],"id":931,"name":"FunctionCall","src":"14493:79:0"}],"id":932,"name":"ExpressionStatement","src":"14493:79:0"},{"attributes":{"functionReturnParameters":905},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":933,"name":"Literal","src":"14590:4:0"}],"id":934,"name":"Return","src":"14583:11:0"}],"id":935,"name":"Block","src":"14386:216:0"}],"id":936,"name":"FunctionDefinition","src":"14290:312:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"","payable":true,"scope":964,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":937,"name":"ParameterList","src":"14806:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":938,"name":"ParameterList","src":"14824:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":980,"type":"function () pure","value":"revert"},"id":939,"name":"Identifier","src":"14835:6:0"}],"id":940,"name":"FunctionCall","src":"14835:8:0"}],"id":941,"name":"ExpressionStatement","src":"14835:8:0"}],"id":942,"name":"Block","src":"14824:27:0"}],"id":943,"name":"FunctionDefinition","src":"14797:54:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"transferAnyERC20Token","payable":false,"scope":964,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"tokenAddress","scope":963,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":944,"name":"ElementaryTypeName","src":"15118:7:0"}],"id":945,"name":"VariableDeclaration","src":"15118:20:0"},{"attributes":{"constant":false,"name":"tokens","scope":963,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":946,"name":"ElementaryTypeName","src":"15140:4:0"}],"id":947,"name":"VariableDeclaration","src":"15140:11:0"}],"id":948,"name":"ParameterList","src":"15117:35:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":963,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":951,"name":"ElementaryTypeName","src":"15179:4:0"}],"id":952,"name":"VariableDeclaration","src":"15179:12:0"}],"id":953,"name":"ParameterList","src":"15178:14:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":949,"name":"Identifier","src":"15160:9:0"}],"id":950,"name":"ModifierInvocation","src":"15160:9:0"},{"children":[{"attributes":{"functionReturnParameters":953},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":126,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract ERC20Interface","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":163,"type":"type(contract ERC20Interface)","value":"ERC20Interface"},"id":954,"name":"Identifier","src":"15211:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":945,"type":"address","value":"tokenAddress"},"id":955,"name":"Identifier","src":"15226:12:0"}],"id":956,"name":"FunctionCall","src":"15211:28:0"}],"id":957,"name":"MemberAccess","src":"15211:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"address","value":"owner"},"id":958,"name":"Identifier","src":"15249:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":947,"type":"uint256","value":"tokens"},"id":959,"name":"Identifier","src":"15256:6:0"}],"id":960,"name":"FunctionCall","src":"15211:52:0"}],"id":961,"name":"Return","src":"15204:59:0"}],"id":962,"name":"Block","src":"15193:78:0"}],"id":963,"name":"FunctionDefinition","src":"15087:184:0"}],"id":964,"name":"ContractDefinition","src":"3478:11796:0"}],"id":965,"name":"SourceUnit","src":"0:15275:0"},"compiler":{"name":"solc","version":"0.4.18+commit.9cf6e910.Emscripten.clang"},"networks":{},"schemaVersion":"1.0.1","updatedAt":"2018-02-03T22:55:50.563Z"}

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = {"tokens":[{"name":"Wrapped Ether","symbol":"wEth","decimals":18,"usesAutoWrapping":true,"address":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","test_address":"0xc778417e063141139fce010982780140aa0cd5ab"},{"name":"0xBitcoin","symbol":"0xBTC","decimals":8,"supportsDelegateCallDeposit":true,"address":"0xb6ed7644c69416d67b522e20bc294a9a9b405b31","test_address":"0x9d2cc383e677292ed87f63586086cff62a009010"},{"name":"DAI Stablecoin","symbol":"DAI","decimals":18,"address":"0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359","test_address":"0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359"}]}

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = {"tokens":["0xBTC","wEth","DAI"]}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(9);
module.exports = __webpack_require__(28);


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__img_lavalogo3_png__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__img_lavalogo3_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__img_lavalogo3_png__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__img_GitHub_Mark_64px_png__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__img_GitHub_Mark_64px_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__img_GitHub_Mark_64px_png__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__img_reddit_mark_64px_png__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__img_reddit_mark_64px_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__img_reddit_mark_64px_png__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__img_0xbitcoinContractQR_png__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__img_0xbitcoinContractQR_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__img_0xbitcoinContractQR_png__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__img_logo_png__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__img_logo_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__img_logo_png__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__alert_renderer__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__home_renderer__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__navbar__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ethhelper__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__lava_wallet_helper__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__home_dashboard__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__wallet_dashboard__ = __webpack_require__(26);

const $ = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"jquery\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));





















var homeRenderer = new __WEBPACK_IMPORTED_MODULE_7__home_renderer__["a" /* default */]();

var alertRenderer = new __WEBPACK_IMPORTED_MODULE_6__alert_renderer__["a" /* default */]();
var ethHelper = new __WEBPACK_IMPORTED_MODULE_9__ethhelper__["a" /* default */]();
var navbar = new __WEBPACK_IMPORTED_MODULE_8__navbar__["a" /* default */]();

var lavaWalletHelper = new __WEBPACK_IMPORTED_MODULE_10__lava_wallet_helper__["a" /* default */]();



var wallet = new __WEBPACK_IMPORTED_MODULE_12__wallet_dashboard__["a" /* default */]();

var pjson = __webpack_require__(27);

var navbarComponent = new __WEBPACK_IMPORTED_MODULE_5_vue__["a" /* default */]({
  el: '#navbar',
  data: {
    titleLogo: __WEBPACK_IMPORTED_MODULE_0__img_lavalogo3_png___default.a,
    githubLogo: __WEBPACK_IMPORTED_MODULE_1__img_GitHub_Mark_64px_png___default.a,
    redditLogo: __WEBPACK_IMPORTED_MODULE_2__img_reddit_mark_64px_png___default.a,
    contractQR: __WEBPACK_IMPORTED_MODULE_3__img_0xbitcoinContractQR_png___default.a,
    projectVersion: pjson.version
  }
});

$(document).ready(function () {

  //  var web3 = ethHelper.init( alertRenderer);

  //homeRenderer.init(ethHelper);

  console.log('load free shift');
  //  wallet.init(alertRenderer,ethHelper);

  navbar.init();

  lavaWalletHelper.init(alertRenderer, ethHelper);
});

//dashboardRenderer.hide();

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = "/app/assets/img/lavalogo3.png";

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = "/app/assets/img/GitHub-Mark-64px.png";

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = "/app/assets/img/reddit-mark-64px.png";

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = "/app/assets/img/0xbitcoinContractQR.png";

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = "/app/assets/img/logo.png";

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== "undefined" && global || typeof self !== "undefined" && self || window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function () {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function () {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout = exports.clearInterval = function (timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function () {};
Timeout.prototype.close = function () {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function (item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function (item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function (item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout) item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(16);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = typeof self !== "undefined" && self.setImmediate || typeof global !== "undefined" && global.setImmediate || this && this.setImmediate;
exports.clearImmediate = typeof self !== "undefined" && self.clearImmediate || typeof global !== "undefined" && global.clearImmediate || this && this.clearImmediate;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
        // Callback can either be a function or a string
        if (typeof callback !== "function") {
            callback = new Function("" + callback);
        }
        // Copy function arguments
        var args = new Array(arguments.length - 1);
        for (var i = 0; i < args.length; i++) {
            args[i] = arguments[i + 1];
        }
        // Store and register the task
        var task = { callback: callback, args: args };
        tasksByHandle[nextHandle] = task;
        registerImmediate(nextHandle);
        return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
            case 0:
                callback();
                break;
            case 1:
                callback(args[0]);
                break;
            case 2:
                callback(args[0], args[1]);
                break;
            case 3:
                callback(args[0], args[1], args[2]);
                break;
            default:
                callback.apply(undefined, args);
                break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function (handle) {
            process.nextTick(function () {
                runIfPresent(handle);
            });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function () {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function (event) {
            if (event.source === global && typeof event.data === "string" && event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function (handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function (event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function (handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function (handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function (handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();
    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();
    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();
    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();
    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
})(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(17)))

/***/ }),
/* 17 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
    return [];
};

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () {
    return '/';
};
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function () {
    return 0;
};

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class AlertRenderer {

  renderError(message) {
    console.log('render error', message);
    this.alertMessage = message;
  }

  renderHelp(message) {
    console.log('render help', message);
    this.alertMessage = message;
  }

  getAlertMessage() {
    return this.alertMessage;
  }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = AlertRenderer;


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(0);
throw new Error("Cannot find module \"typed.js\"");
throw new Error("Cannot find module \"slick-carousel\"");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dashboard_renderer__ = __webpack_require__(20);

const $ = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"jquery\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));





//require('owl.carousel')



var dashboardRenderer = new __WEBPACK_IMPORTED_MODULE_3__dashboard_renderer__["a" /* default */]();

class HomeRenderer {

    init(ethHelper) {

        setInterval(function () {

            ethHelper.connectToContract(web3, dashboardRenderer, function (contractData) {

                dashboardRenderer.update(contractData);
            });
        }, 30 * 1000);

        ethHelper.connectToContract(web3, dashboardRenderer, function (contractData) {

            dashboardRenderer.init(contractData);
        });

        /*
            $('.testimonial-carousel').slick({
              dots: true,
              speed: 500
            });
        
             $('.screenshot_slider').owlCarousel({
                loop: true,
                responsiveClass: true,
                nav: true,
                margin: 5,
                autoplay: true,
                autoplayTimeout: 4000,
                smartSpeed: 500,
                center: true,
                navText: ['<span class="icon-arrow-left"></span>', '<span class="icon-arrow-right"></span>'],
                responsive: {
                    0: {
                        items: 1,
                    },
                    600: {
                        items: 3
                    },
                    1200: {
                        items: 5
                    }
                }
            });
              $('.testimonial-caroussel').owlCarousel({
                loop: true,
                responsiveClass: true,
                nav: true,
                autoplay: true,
                autoplayTimeout: 4000,
                smartSpeed: 500,
                center: true,
                navText: ['<span class="icon-arrow-left"></span>', '<span class="icon-arrow-right"></span>'],
                responsive: {
                    0: {
                        items: 1,
                    },
                    600: {
                        items: 1
                     },
                    1200: {
                        items: 1
                    }
                }
            });
              $('.popup-image').magnificPopup({
                type: 'image',
                removalDelay: 300,
                mainClass: 'mfp-with-zoom',
                gallery: {
                    enabled: true
                },
                zoom: {
                    enabled: true,
                     duration: 300,
                    easing: 'ease-in-out',
                     opener: function (openerElement) {
                         return openerElement.is('img') ? openerElement : openerElement.find('img');
                    }
                }
            });
        
            $.scrollUp({
                scrollText: '<i class="icon-arrow-up"></i>',
                easingType: 'linear',
                scrollSpeed: 900,
                animation: 'fade'
            });
              new WOW().init({
                mobile: true,
            });
               $('a.section-scroll[href*="#"]:not([href="#"])').on('click', function (event) {
                if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '')
                    || location.hostname == this.hostname) {
                     var target = $(this.hash);
                    target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
                    if (target.length) {
                        // Only prevent default if animation is actually gonna happen
                    event.preventDefault();
                        $('html,body').animate({
                            scrollTop: target.offset().top
                        }, 750);
                        return false;
                    }
                }
            });
            */

        console.log('init home');
    }

    update() {}

    hide() {}

    show() {}

}
/* harmony export (immutable) */ __webpack_exports__["a"] = HomeRenderer;


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(0);

const $ = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"jquery\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));


var app;
var dashboardData;

class DashboardRenderer {

  init(renderData) {

    dashboardData = renderData;

    app = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
      el: '#dashboard',
      data: dashboardData
    });

    this.show();
  }

  update(renderData) {

    dashboardData = renderData;

    //  app.data =   renderData;

    //vm.$forceUpdate();

    this.show();
  }

  hide() {
    $('#dashboard').hide();
  }

  show() {
    $('#dashboard').show();
  }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = DashboardRenderer;


/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const $ = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"jquery\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

class Navbar {

  init() {

    // Get all "navbar-burger" elements
    var $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

    console.log($navbarBurgers.length);
    // Check if there are any navbar burgers
    if ($navbarBurgers.length > 0) {

      // Add a click event on each of them
      $navbarBurgers.forEach(function ($el) {
        $el.addEventListener('click', function () {

          // Get the target from the "data-target" attribute
          var target = $el.dataset.target;
          var $target = document.getElementById(target);

          // Toggle the class on both the "navbar-burger" and the "navbar-menu"
          $el.classList.toggle('is-active');
          $target.classList.toggle('is-active');
        });
      });
    }

    var $fadedin = $('.faded-in');
    console.log('meep');

    if ($fadedin.length > 0) {
      $.each($fadedin, function () {
        var fadeTime = $(this).data('fade-time');
        console.log($(this));
        console.log(fadeTime);
        $(this).delay(fadeTime).animate({ opacity: 1 }, 400);
      });
    }

    var $activeDropdown = $('.dropdown-button');

    if ($activeDropdown.length > 0) {
      $.each($activeDropdown, function () {
        $(this).on('click', function () {
          var parent = $(this).parent();
          var dropdownContent = $(parent).find('.navbar-dropdown').first();

          var visible = $(dropdownContent).css('display') == 'block';

          $('.navbar-dropdown').css('display', 'none');

          if (!visible) {
            $(dropdownContent).css('display', 'block');
            $(dropdownContent).hide();
            $(dropdownContent).fadeIn(100);
          }
        });
      });
    }
  }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = Navbar;


/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var INFURA_ROPSTEN_URL = 'https://ropsten.infura.io/gmXEVo5luMPUGPqg6mhy';
var INFURA_MAINNET_URL = 'https://mainnet.infura.io/gmXEVo5luMPUGPqg6mhy';

var deployedContractInfo = __webpack_require__(2);
var _0xBitcoinContract = __webpack_require__(3);

var embeddedWeb3 = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"web3\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

var web3utils = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"web3-utils\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

class EthHelper {

  init(alertRenderer) {
    this.alertRenderer = alertRenderer;

    return this.connectWeb3(new embeddedWeb3());
  }

  connectWeb3(web3) {
    if (typeof web3 !== 'undefined') {

      window.web3 = new Web3(new Web3.providers.HttpProvider(INFURA_MAINNET_URL));
      console.log('connected to web3!');
      return window.web3;
    } else {

      this.alertRenderer.renderError('No web3? You should consider trying MetaMask!');
      return {};
      // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
      //window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
    }
  }

  async connectToContract(web3, dashboardRenderer, callback) {
    var tokenContract = this.getWeb3ContractInstance(web3, this.getContractAddress(), this.getContractABI());

    console.log(tokenContract);

    var contractAddress = this.getContractAddress();

    var difficulty = await tokenContract.getMiningDifficulty().toNumber();

    var challenge_number = await tokenContract.getChallengeNumber();

    var amountMined = await tokenContract.tokensMinted();

    var totalSupply = await tokenContract._totalSupply();

    var lastRewardAmount = await tokenContract.lastRewardAmount();

    var lastRewardTo = await tokenContract.lastRewardTo();

    var lastRewardEthBlockNumber = await tokenContract.lastRewardEthBlockNumber();

    var hashrateEstimate = this.estimateHashrateFromDifficulty(difficulty);

    var decimals = Math.pow(10, 8);
    var renderData = {
      contractUrl: 'https://etherscan.io/address/' + contractAddress,
      contractAddress: contractAddress,
      difficulty: difficulty,
      challenge_number: challenge_number,
      amountMined: parseInt(amountMined) / decimals,
      totalSupply: parseInt(totalSupply) / decimals,
      hashrateEstimate: hashrateEstimate,
      lastRewardTo: lastRewardTo,
      lastRewardAmount: parseInt(lastRewardAmount) / decimals,
      lastRewardEthBlockNumber: lastRewardEthBlockNumber

      //dashboardRenderer.renderContractData(renderData);


    };callback(renderData);
  }

  estimateHashrateFromDifficulty(difficulty) {

    var timeToSolveABlock = 10 * 60; //seconds.. ten minutes

    var hashrate = web3utils.toBN(difficulty).mul(web3utils.toBN(2).pow(web3utils.toBN(22))).div(web3utils.toBN(timeToSolveABlock));

    var gigHashes = hashrate / parseFloat(web3utils.toBN(10).pow(web3utils.toBN(9)));

    console.log('hashrate is ', hashrate);
    return gigHashes.toFixed(2).toString() + " GH/s";
  }

  getWeb3ContractInstance(web3, contract_address, contract_abi) {
    if (contract_address == null) {
      contract_address = this.getContractAddress();
    }

    if (contract_abi == null) {
      contract_abi = this.getContractABI();
    }

    return web3.eth.contract(contract_abi).at(contract_address);
  }

  getContractAddress() {
    return deployedContractInfo.networks.mainnet.contracts._0xbitcointoken.blockchain_address;
  }

  getContractABI() {
    return _0xBitcoinContract.abi;
  }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = EthHelper;


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lava_packet_helper__ = __webpack_require__(24);

const $ = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"jquery\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

var web3utils = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"web3-utils\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
var sigUtil = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"eth-sig-util\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));




//const lavaPacketHelper = new LavaPacketHelper();

var lavaWalletABI = __webpack_require__(4);
var _0xBitcoinABI = __webpack_require__(3);
var erc20TokenABI = __webpack_require__(5);

var tokenData = __webpack_require__(6);
var defaultTokens = __webpack_require__(7);

var defaultTokenData;

var deployedContractInfo = __webpack_require__(2);
var lavaWalletContract;
var _0xBitcoinContract;

var balanceText;
var accountAddress;

var orderContainer;
var actionContainer;

var walletTokenList = [];

var order_cancels_list = [];
var my_orders_list = [];
var recent_trades_list = [];

//var primary_asset_address;
//var secondary_asset_address;
//var client_token_balances = {};
var clientTokenData = {};

class LavaWalletHelper {

  async init(alertRenderer, ethHelper) {
    this.alertRenderer = alertRenderer;
    this.ethHelper = ethHelper;

    this.web3 = this.detectInjectedWeb3();

    var self = this;

    self.networkVersion = 'mainnet';

    if (this.web3 != null) {

      await new Promise(async resolve => {
        web3.version.getNetwork((err, netId) => {
          switch (netId) {
            case "1":
              self.networkVersion = 'mainnet';
              console.log('Web3 is using mainnet');
              self.lavaWalletContract = deployedContractInfo.networks.mainnet.contracts.lavawallet;
              self._0xBitcoinContract = deployedContractInfo.networks.mainnet.contracts._0xbitcointoken;
              break;
            case "3":
              self.networkVersion = 'testnet';
              console.log('Web3 is using ropsten test network.');
              self.lavaWalletContract = deployedContractInfo.networks.ropsten.contracts.lavawallet;
              self._0xBitcoinContract = deployedContractInfo.networks.ropsten.contracts._0xbitcointoken;
              break;
            default:
              console.log('This is an unknown network.');
          }

          resolve();
        });
      });

      // init defaultTokenData
      defaultTokenData = defaultTokens.tokens.map(symbol => tokenData.tokens.find(function (t) {
        return t.symbol == symbol;
      }));

      console.log(defaultTokenData);

      defaultTokenData.map(t => t.icon_url = "/app/assets/img/token_icons/" + t.address + ".png");

      if (self.networkVersion != 'mainnet') {
        defaultTokenData.map(t => t.address = t.test_address);
      }

      this.registerDropEvents();

      console.log(defaultTokenData);

      walletTokenList = defaultTokenData;

      var userAddress = web3.eth.accounts[0];
      //await this.updateWalletRender();

      try {
        await this.collectClientTokenBalances(walletTokenList, userAddress);
      } catch (e) {
        console.error(e);
      }
    } //web3 defined


    console.log('init vue');
    await this.initVueComponents();

    // await this.loadOrderEvents()

  }

  async initVueComponents() {

    var self = this;

    var app = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
      el: '#wallet-titlebar',
      data: { account: accountAddress,
        balance: balanceText
      },

      methods: {
        update: function () {}
      }
    });

    var jumbotron = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
      el: '#jumbotron',
      data: {

        errorMessage: this.alertRenderer.alertMessage
      }

    });

    if (this.lavaWalletContract) {

      actionContainer = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
        el: '#action-container',
        data: {
          selectedActionAsset: { name: 'nil' },
          shouldRender: false,
          selectedActionType: 'deposit',
          approveTokenQuantity: 0,
          depositTokenQuantity: 0,
          withdrawTokenQuantity: 0,
          transferTokenQuantity: 0,
          transferTokenRecipient: 0,
          transferTokenRelayReward: 0,
          lavaPacketData: null
        }

      });

      var footer = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
        el: '#footer',
        data: {
          address: this.lavaWalletContract.blockchain_address
        }

      });
    }

    var assetList = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
      el: '#asset-list',
      data: {

        tokens: { token_list: walletTokenList }

      },

      methods: {
        update: function () {}
      }
    });

    __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].nextTick(function () {
      self.registerAssetRowClickHandler();
    });
  }

  registerDropEvents() {
    var self = this;

    $('.lava-packet-dropzone').on('dragover', function (e) {
      e.stopPropagation();
      e.preventDefault();
      //  e.dataTransfer.dropEffect = 'copy';
    });

    console.log('added listenr ');

    $('.dropzone-file-input').on('change', function (e) {
      e.stopPropagation();
      e.preventDefault();

      console.log('handle packet drop');

      var files = $(this).prop('files'); // Array of all files
      console.log(files);

      self.readDroppedFiles(files);
    });

    $('.lava-packet-dropzone').on('drop', function (e) {
      e.stopPropagation();
      e.preventDefault();

      console.log('handle packet drop');

      var files = e.originalEvent.dataTransfer.files; // Array of all files
      console.log(files);
      self.readDroppedFiles(files);
    });
  }

  async readDroppedFiles(files) {
    var self = this;

    for (var i = 0, file; file = files[i]; i++) {

      if (file.name.endsWith('.lava')) {

        var reader = new FileReader();
        // Closure to capture the file information.
        reader.onload = function (theFile) {
          return function (e) {
            var parsedFileJson = JSON.parse(e.target.result);

            self.initiateLavaPackTransaction(JSON.parse(parsedFileJson));
          };
        }(file);

        reader.readAsText(file); // start reading the file data.
      }
    }
  }

  async initiateLavaPackTransaction(lavaPacket) {
    console.log('initiate', lavaPacket);
    console.log('to', lavaPacket.to);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, this.lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    contract.transferTokensFromWithSignature.sendTransaction(lavaPacket.from, lavaPacket.to, lavaPacket.tokenAddress, lavaPacket.tokenAmount, lavaPacket.relayerReward, lavaPacket.expires, lavaPacket.nonce, lavaPacket.signature, function () {
      console.log('done!');
    });
  }

  async registerAssetRowClickHandler() {
    var self = this;

    $('.asset-row').off();
    $('.asset-row').on('click', async function () {
      var token_address = $(this).data('tokenaddress');
      console.log('token_address', token_address);

      self.selectActionAsset(token_address);
    });
  }

  async registerActionContainerClickHandler() {
    var self = this;

    $('.tab-action').off();
    $('.tab-action').on('click', function () {

      var actionType = $(this).data('action-type');

      self.selectActiveAction(actionType);
    });

    $('.btn-action-approve').off();
    $('.btn-action-approve').on('click', function () {

      var selectedActionAsset = actionContainer.selectedActionAsset;

      var tokenAddress = selectedActionAsset.address;
      var approveAmount = actionContainer.approveTokenQuantity;
      var tokenDecimals = selectedActionAsset.decimals;

      console.log('approve ', tokenAddress, approveAmount);
      self.approveToken(tokenAddress, approveAmount, tokenDecimals, function (error, response) {
        console.log(response);
      });
    });

    $('.btn-action-deposit').off();
    $('.btn-action-deposit').on('click', function () {

      var selectedActionAsset = actionContainer.selectedActionAsset;

      var tokenAddress = selectedActionAsset.address;
      var depositAmount = actionContainer.depositTokenQuantity;
      var tokenDecimals = selectedActionAsset.decimals;

      console.log('deposit ', tokenAddress, depositAmount);
      self.depositToken(tokenAddress, depositAmount, tokenDecimals, function (error, response) {
        console.log(response);
      });
    });

    $('.btn-action-withdraw').off();
    $('.btn-action-withdraw').on('click', function () {

      var selectedActionAsset = actionContainer.selectedActionAsset;

      var tokenAddress = selectedActionAsset.address;
      var withdrawAmount = actionContainer.withdrawTokenQuantity;
      var tokenDecimals = selectedActionAsset.decimals;

      console.log('withdraw ', tokenAddress, withdrawAmount);
      self.withdrawToken(tokenAddress, withdrawAmount, tokenDecimals, function (error, response) {
        console.log(response);
      });
    });

    $('.btn-action-lava-transfer').off();
    $('.btn-action-lava-transfer').on('click', function () {

      var selectedActionAsset = actionContainer.selectedActionAsset;

      var tokenAddress = selectedActionAsset.address;
      var transferAmount = actionContainer.transferTokenQuantity;
      var transferRecipient = actionContainer.transferTokenRecipient;
      var transferRelayReward = actionContainer.transferTokenRelayReward;
      var tokenDecimals = selectedActionAsset.decimals;

      console.log('lava transfer gen ', tokenAddress, transferAmount, transferRecipient);
      self.generateLavaTransaction(tokenAddress, transferAmount, transferRecipient, transferRelayReward, tokenDecimals, function (error, response) {
        console.log(response);
      });
    });
  }

  async selectActionAsset(address) {
    var self = this;

    var assetData = this.getAssetDataFromAddress(address);

    await __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].set(actionContainer, "selectedActionAsset", assetData);

    await __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].set(actionContainer, "shouldRender", true);

    __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].nextTick(function () {
      self.registerActionContainerClickHandler();
    });
  }

  async selectActiveAction(actionName) {
    var self = this;

    console.log('select active action', actionName);

    await __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].set(actionContainer, "selectedActionType", actionName);

    __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].nextTick(function () {
      self.registerActionContainerClickHandler();
    });
  }

  getAssetDataFromAddress(address) {
    console.log('get asset data ', address);

    console.log(defaultTokenData);

    var matchingToken = defaultTokenData.find(t => t.address == address);

    return matchingToken;
  }

  async collectClientTokenBalances(tokenList, userAddress) {
    for (var i in tokenList) {
      var tokenData = tokenList[i];

      console.log(tokenData);

      var tokenDecimals = tokenData.decimals; //fix


      var tokenBalance = await this.getTokenBalance(tokenData.address, userAddress);
      tokenData.wallet_balance_formatted = this.formatAmountWithDecimals(tokenBalance, tokenDecimals);

      var tokenAllowance = await this.getTokenAllowance(tokenData.address, userAddress);
      tokenData.approved_balance_formatted = this.formatAmountWithDecimals(tokenAllowance, tokenDecimals);

      var lavaTokenBalance = await this.getLavaTokenBalance(tokenData.address, userAddress);
      tokenData.lava_balance_formatted = this.formatAmountWithDecimals(lavaTokenBalance, tokenDecimals);

      //get wallet balance and get lava balance


      //clientTokenData
    }
  }

  async getLavaTokenBalance(tokenAddress, tokenOwner) {
    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, this.lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    console.log(contract);

    console.log(tokenAddress, tokenOwner);

    var lavaBalance = await new Promise(resolve => {
      contract.balanceOf(tokenAddress, tokenOwner, function (error, response) {
        resolve(response.toNumber());
      });
    });

    return lavaBalance;
  }

  async getTokenBalance(tokenAddress, tokenOwner) {
    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, tokenAddress, erc20TokenABI.abi);

    var balance = await new Promise(resolve => {
      contract.balanceOf(tokenOwner, function (error, response) {
        console.log(error, response);

        resolve(response.toNumber());
      });
    });

    return balance;
  }

  async getTokenAllowance(tokenAddress, tokenOwner) {
    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, tokenAddress, erc20TokenABI.abi);

    var wallet_address = this.lavaWalletContract.blockchain_address;

    var balance = await new Promise(resolve => {
      contract.allowance(tokenOwner, wallet_address, function (error, response) {
        resolve(response.toNumber());
      });
    });

    return balance;
  }

  async getTokenDecimals(tokenAddress) {
    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, tokenAddress, erc20TokenABI.abi);

    var decimals = await new Promise(resolve => {
      contract.decimals(function (error, response) {
        resolve(response.toNumber());
      });
    });

    return decimals;
  }

  //not used
  async updateWalletRender() {
    if (this.web3 == null) {
      console.log("No web3 to load wallet data.");
      return;
    }

    console.log('loading wallet data ');

    var activeAccount = web3.eth.accounts[0];

    accountAddress = activeAccount;

    console.log(accountAddress);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3);

    let getDecimals = new Promise(resolve => {
      contract.decimals(function (error, response) {
        resolve(response.toNumber());
      });
    });

    let getTokenBalance = new Promise(resolve => {
      contract.balanceOf(activeAccount, function (error, response) {
        resolve(response.toNumber());
      });
    });

    var decimals = await getDecimals;
    var tokenBalance = await getTokenBalance;

    balanceText = tokenBalance / Math.pow(10, decimals);
  }

  detectInjectedWeb3() {

    if (typeof web3 !== 'undefined') {
      web3 = new Web3(web3.currentProvider);

      console.log(web3);

      if (typeof web3.eth !== 'undefined' && typeof web3.eth.accounts[0] !== 'undefined') {

        return web3;
      } else {

        console.log(web3.eth);
        console.log('acct', web3.eth.accounts[0]);

        this.alertRenderer.renderError("No Web3 interface found.  Please login to Metamask or an Ethereum enabled browser.");
      }
    } else {

      console.error("no web3 found.");
      // set the provider you want from Web3.providers
      //web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
      this.alertRenderer.renderError("No Web3 interface found.  Please install Metamask or use an Ethereum enabled browser.");
    }

    return null;
  }

  /*
    async registerOrderRowClickHandler()
    {
  
      var self = this;
  
      console.log('register order row click handler')
      console.log('trading rows', $('.trading-row').length)
       //need to do this after watch/render  happens
      $('.trading-row').off();
      $('.trading-row').on('click',async function(){
        var order_hash = $(this).data('orderhash');
        console.log('order_hash',order_hash);
  
        var order_element = JSON.parse( order_hash_table[order_hash] );
        console.log('perform trade',order_element);
  
  
        //function trade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount) {
  
        var token_get = order_element.token_get;
        var token_give = order_element.token_give;
        var amount_get = order_element.amount_get;
        var amount_give = order_element.amount_give;
        var expires = order_element.expires;
        var nonce = "0x"+order_element.nonce.toString();
  
        var makerAddress = order_element.user;
  
  
        //amount get ...pegged at the entire order for now
        var trade_order_amount = order_element.amount_get;
  
  
        var lava_wallet_address = lavaWalletContract.blockchain_address;
  
        //dont need offchain sigs - all orders will be on chain for now
        var sig_v = 0;
        var sig_r = 0;
        var sig_s = 0;
  
  
        self.performTrade(token_get,amount_get,token_give,amount_give,expires,nonce, makerAddress, sig_v,sig_r,sig_s, trade_order_amount,   function(error,response){
           console.log(response)
        });
  
      })
  
      $('.monitor-order-row').off();
      $('.monitor-order-row').on('click',async function(){
        console.log('should cancel order')
  
        var order_hash = $(this).data('orderhash');
        console.log('order_hash',order_hash);
  
        var order_element = JSON.parse( order_hash_table[order_hash] );
        console.log('perform trade',order_element);
  
  
        var token_get = order_element.token_get;
        var token_give = order_element.token_give;
        var amount_get = order_element.amount_get;
        var amount_give = order_element.amount_give;
        var expires = order_element.expires;
        var nonce = "0x"+order_element.nonce.toString();
  
  
        var lava_wallet_address = lavaWalletContract.blockchain_address;
  
        //dont need offchain sigs - all orders will be on chain for now
        var sig_v = 0;
        var sig_r = 0;
        var sig_s = 0;
  
  
  
  
        self.cancelOrder(token_get,amount_get,token_give,amount_give,expires,nonce,  sig_v,sig_r,sig_s,   function(error,response){
           console.log(response)
        });
  
      });
  
  
    }
  
  */

  /*async buildOrderElementFromEvent(order_event, base_pair_token_address,lava_wallet_address,currentEthBlock)
  {
    console.log('build from ',order_event);
    console.log('base_pair_token_address ',base_pair_token_address);
  
      var order_element = {};
     order_element.token_give = order_event.args.tokenGive;
    order_element.token_get = order_event.args.tokenGet;
    order_element.amount_give = order_event.args.amountGive.toNumber();
    order_element.amount_get = order_event.args.amountGet.toNumber();
     order_element.expires = order_event.args.expires.toNumber();
     console.log('order_event.args.nonce',order_event.args.nonce)
    order_element.nonce = web3utils.toBN(order_event.args.nonce ).toString(16) ;
    order_element.user = order_event.args.user;
     order_element.tx_hash = order_event.transactionHash;
    order_element.tx_index = order_event.transactionIndex;
     order_element.order_hash = web3utils.soliditySha3(
      lava_wallet_address,
      order_element.token_get,
      order_element.amount_get,
      order_element.token_give,
      order_element.amount_give,
      order_element.expires,
      order_element.nonce
    )
     console.log('order_element.order_hash',order_element.order_hash)
      //laggy but oh well
    order_element.amount_filled = await this.getOrderAmountFilled(
                                    order_element.token_get,
                                    order_element.amount_get,
                                    order_element.token_give,
                                    order_element.amount_give,
                                    order_element.expires,
                                    order_event.args.nonce,
                                    order_element.user
                                  )
      var client_taker_balance = client_token_balances[order_element.token_get];
     if(client_taker_balance < order_element.amount_get )
    {
      order_element.client_unable = true;
    }
     var maker_give_balance = await this.getEscrowBalance(order_element.token_give,order_element.user)
     if(maker_give_balance < order_element.amount_give )
    {
      order_element.impossible = true;
    }
     if(order_element.expires < currentEthBlock )
    {
      order_element.expired = true;
    }
     if(order_element.amount_filled >= order_element.amount_get
    ||  order_element.expired
    ||  order_element.impossible
    )
    {
      order_element.closed = true;
    }
     //fix me
    order_element.amount_get_remaining = 0;
    order_element.amount_give_remaining = 0;
  
        var give_decimal_places = 18;
        var get_decimal_places = 18;
  
    console.log('order_element.nonce',order_element.nonce )
    //bids give eth
    if( order_element.token_give == "0x0000000000000000000000000000000000000000"
        && order_element.token_get.toLowerCase() ==  base_pair_token_address.toLowerCase())
    {
      get_decimal_places = 8;
      order_element.order_type = "bid";
       order_element.amount_get_formatted = this.formatAmountWithDecimals(order_element.amount_get,get_decimal_places);
      order_element.amount_give_formatted = this.formatAmountWithDecimals(order_element.amount_give,give_decimal_places);
       order_element.cost_ratio = order_element.amount_give_formatted / order_element.amount_get_formatted;
     }
     //asks get eth
    if( order_element.token_get == "0x0000000000000000000000000000000000000000"
        &&  order_element.token_give.toLowerCase() ==  base_pair_token_address.toLowerCase())
    {
      give_decimal_places = 8;
      order_element.order_type = "ask";
       console.log("found ask " , JSON.stringify(order_element))
       order_element.amount_get_formatted = this.formatAmountWithDecimals(order_element.amount_get,get_decimal_places);
      order_element.amount_give_formatted = this.formatAmountWithDecimals(order_element.amount_give,give_decimal_places);
       order_element.cost_ratio = order_element.amount_get_formatted / order_element.amount_give_formatted;
     }
      if(order_element.cost_ratio < 0.0000000001 )
    {
      order_element.cost_ratio = 0;
    }
      order_hash_table[order_element.order_hash] = JSON.stringify( order_element );
      return order_element;
  }
  */

  /*collectCancelEvent(cancel_event, base_pair_token_address)
  {
    console.log('cancel',cancel_event)
    var cancel_element = cancel_event;
     cancel_element.tx_hash = cancel_event.transactionHash;
    cancel_element.cancelled = true;
     order_cancels_list.push(cancel_element)
     closed_order_hash_table[cancel_element.tx_hash] = cancel_element;
   }*/

  /*  collectTradeEvent(trade_event, base_pair_token_address)
    {
      console.log('trade',trade_event)
      var trade_element = trade_event;
  
  
      if(traded_order_hash_table[trade_element.tx_hash]!=null)
      {
        trade_element = traded_order_hash_table[trade_element.tx_hash]
  
        trade_element.amount_get_traded += trade_event.args.amountGive.toNumber();
        trade_element.amount_give_traded += trade_event.args.amountGet.toNumber()
  
      }
  
      trade_element.token_give = trade_event.args.tokenGive;
      trade_element.token_get = trade_event.args.tokenGet;
      trade_element.amount_give = trade_event.args.amountGive.toNumber();
      trade_element.amount_get = trade_event.args.amountGet.toNumber();
  
  
  
      trade_element.tx_hash = trade_event.transactionHash; //not reliable ?
      trade_element.traded = true;
  
      recent_trades_list.push(trade_element)
  
  
  
      if(fully_traded)
      {
        trade_element.cancelled = true;
        closed_order_hash_table[trade_element.tx_hash] = trade_element;
      }
  
      traded_order_hash_table[trade_element.tx_hash] = trade_element;
  
    }*/

  async collectOrderEvent(order_event, base_pair_token_address, lava_wallet_address, currentEthBlock) {

    var self = this;

    var activeAccount = web3.eth.accounts[0];

    var order_element = await this.buildOrderElementFromEvent(order_event, base_pair_token_address, lava_wallet_address, currentEthBlock);

    console.log('render', order_element);

    if (order_element.closed != true) {
      if (order_element.order_type == "ask") {
        order_ask_list.push(order_element);
        order_ask_list.sort(function (a, b) {
          return a.cost_ratio - b.cost_ratio;
        });
        __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].set(orderContainer, 'asks', { ask_list: order_ask_list });
      }

      if (order_element.order_type == "bid") {
        order_bid_list.push(order_element);
        order_bid_list.sort(function (a, b) {
          return b.cost_ratio - a.cost_ratio;
        });
        __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].set(orderContainer, 'bids', { bid_list: order_bid_list });
      }
    }

    if (order_element.user.toLowerCase() == activeAccount.toLowerCase()) {
      this.collectMyOrder(order_element);
    }

    __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].nextTick(function () {
      self.registerOrderRowClickHandler();
    });
  }

  collectMyOrder(order_element) {
    console.log('my order', order_element);
    my_orders_list.push(order_element);
    my_orders_list.sort(function (a, b) {
      return a.expires - b.expires;
    });
  }

  async loadOrderEvents() {
    if (this.web3 == null) {
      console.log("No web3 to load order events.");
      return;
    }

    var num_eth_blocks_to_search = 400;

    var web3 = this.web3;

    var current_block = await this.getCurrentEthBlockNumber();

    var self = this;

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    var lava_wallet_address = lavaWalletContract.blockchain_address;

    var base_pair_token_address = _0xBitcoinContract.blockchain_address;

    //none

  }

  async getCurrentEthBlockNumber() {
    return await new Promise(function (fulfilled, error) {
      web3.eth.getBlockNumber(function (err, result) {
        if (err) {
          error(err);return;
        }
        console.log('eth block number ', result);
        fulfilled(result);
        return;
      });
    });
  }

  async getEscrowBalance(token_address, user) {
    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    var balanceResult = await new Promise(function (fulfilled, error) {
      contract.balanceOf.call(token_address, user, function (err, result) {
        fulfilled(result);
      });
    });

    console.log('balanceResult', balanceResult.toNumber());

    return balanceResult.toNumber();
  }

  async getOrderAmountFilled(token_get, amount_get, token_give, amount_give, expires, nonce, user) {

    console.log('amount filledd', token_get, amount_get, token_give, amount_give, expires, nonce, user);
    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    var filledResult = await new Promise(function (fulfilled, error) {
      contract.amountFilled.call(token_get, amount_get, token_give, amount_give, expires, nonce, user, 0, 0, 0, function (err, result) {
        fulfilled(result);
      });
    });

    console.log('filledResult', filledResult);

    return filledResult.toNumber();
  }

  async depositEther(amountFormatted, callback) {
    console.log('deposit ether', amountRaw);

    var amountRaw = this.getRawFromDecimalFormat(amountFormatted, 18);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    console.log(contract);

    contract.deposit.sendTransaction({ value: amountRaw }, callback);
  }

  async withdrawEther(amountFormatted, callback) {
    var amountRaw = this.getRawFromDecimalFormat(amountFormatted, 18);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    console.log(contract);

    contract.withdraw.sendTransaction(amountRaw, callback);
  }

  //should be using approve and call!!!
  async ApproveAndCallDepositToken(tokenAddress, amountFormatted, tokenDecimals, callback) {
    console.log('deposit token', tokenAddress, amountRaw);

    var amountRaw = this.getRawFromDecimalFormat(amountFormatted, tokenDecimals);

    var remoteCallData = '0x01';

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, tokenAddress, _0xBitcoinABI.abi);

    console.log(contract);

    var approvedContractAddress = this.lavaWalletContract.blockchain_address;

    contract.approveAndCall.sendTransaction(approvedContractAddress, amountRaw, remoteCallData, callback);
  }

  async approveToken(tokenAddress, amountFormatted, tokenDecimals, callback) {
    console.log('approve token', tokenAddress, amountRaw);

    var amountRaw = this.getRawFromDecimalFormat(amountFormatted, tokenDecimals);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, tokenAddress, erc20TokenABI.abi);

    var spender = this.lavaWalletContract.blockchain_address;

    contract.approve.sendTransaction(spender, amountRaw, callback);
  }

  async depositToken(tokenAddress, amountFormatted, tokenDecimals, callback) {
    console.log('deposit token', tokenAddress, amountRaw);

    var amountRaw = this.getRawFromDecimalFormat(amountFormatted, tokenDecimals);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, this.lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    console.log(contract);

    var from = this.web3.eth.accounts[0];

    contract.depositTokens.sendTransaction(from, tokenAddress, amountRaw, callback);
  }

  async withdrawToken(tokenAddress, amountFormatted, tokenDecimals, callback) {
    console.log('withdraw token', tokenAddress, amountRaw);

    var amountRaw = this.getRawFromDecimalFormat(amountFormatted, tokenDecimals);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, this.lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    console.log(contract);

    contract.withdrawTokens.sendTransaction(tokenAddress, amountRaw, callback);
  }

  async generateLavaTransaction(tokenAddress, amountFormatted, transferRecipient, relayerRewardFormatted, tokenDecimals) {

    var self = this;

    var amountRaw = this.getRawFromDecimalFormat(amountFormatted, tokenDecimals);
    var relayerRewardRaw = this.getRawFromDecimalFormat(relayerRewardFormatted, tokenDecimals);

    //bytes32 sigHash = sha3("\x19Ethereum Signed Message:\n32",this, from, to, token, tokens, relayerReward, expires, nonce);
    //  address recoveredSignatureSigner = ECRecovery.recover(sigHash,signature);
    var ethBlock = await this.getCurrentEthBlockNumber();

    var walletAddress = this.lavaWalletContract.blockchain_address;
    var from = this.web3.eth.accounts[0];
    var to = transferRecipient;
    var tokenAddress = tokenAddress;
    var tokenAmount = amountRaw;
    var relayerReward = relayerRewardRaw;
    var expires = ethBlock + 10000;
    var nonce = web3utils.randomHex(16);

    //need to append everything together !! to be ..like in solidity.. :  len(message) + message

    const msgParams = [{
      type: 'address',
      name: 'from',
      value: from
    }, {
      type: 'address',
      name: 'to',
      value: to
    }, {
      type: 'address',
      name: 'walletAddress',
      value: walletAddress
    }, {
      type: 'address',
      name: 'tokenAddress',
      value: tokenAddress
    }, {
      type: 'uint256',
      name: 'tokenAmount',
      value: tokenAmount
    }, {
      type: 'uint256',
      name: 'relayerReward',
      value: relayerReward
    }, {
      type: 'uint256',
      name: 'expires',
      value: expires
    }, {
      type: 'uint256',
      name: 'nonce',
      value: nonce
    }];

    //    var solidity_msg = this.web3.toHex( "\x19Ethereum Signed Message:\n" + '32' + msg);

    console.log('generateLavaTransaction', tokenAddress, amountRaw, transferRecipient);

    //testing
    var sigHash = sigUtil.typedSignatureHash(msgParams);

    console.log('lava sigHash', msgParams, sigHash);

    var params = [msgParams, from];

    var signature = await this.signTypedData(params, from);

    console.log('lava signature', msgParams, signature);

    var packetJson = __WEBPACK_IMPORTED_MODULE_1__lava_packet_helper__["a" /* default */].getLavaPacket(from, to, walletAddress, tokenAddress, tokenAmount, relayerReward, expires, nonce, signature);

    var lavaPacketString = JSON.stringify(packetJson);

    console.log('lava packet json ', lavaPacketString);

    await __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].set(actionContainer, "lavaPacketData", lavaPacketString);

    __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */].nextTick(function () {
      self.registerLavaPacketDownloadButton(lavaPacketString);
    });
  }

  async registerLavaPacketDownloadButton(lavaPacketString) {

    var data = "text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(lavaPacketString));
    $('#btn-download-lava-packet').empty();
    $('<a href="data:' + data + '" download="packet.lava" class="button is-primary btn-download-lava-packet">Download Lava Packet</a>').appendTo('#btn-download-lava-packet');
  }

  async signTypedData(params, from) {
    var result = await new Promise(async resolve => {

      var method = 'eth_signTypedData';

      web3.currentProvider.sendAsync({
        method,
        params,
        from
      }, function (err, result) {
        if (err) return console.dir(err);
        if (result.error) {
          alert(result.error.message);
        }
        if (result.error) return console.error(result);
        console.log('PERSONAL SIGNED:' + JSON.stringify(result.result));

        //this method needs to be in solidity!
        const recovered = sigUtil.recoverTypedSignature({ data: params[0], sig: result.result });

        resolve(result.result);
      });
    });

    return result;
  }

  async personalSign(msg, from) {
    var result = await new Promise(async resolve => {

      //sign(keccack256("\x19Ethereum Signed Message:\n" + len(message) + message)));
      //personal_ecRecover

      this.web3.personal.sign(msg, from, function (err, result) {
        if (err) return console.error(err);
        console.log('PERSONAL SIGNED:' + result);

        resolve(result);
      });
    });

    return result;
  }

  //nonce should just be a securerandom number !

  //initiated from a little form - makes a listrow
  async createOrder(tokenGet, amountGet, tokenGive, amountGive, expires, callback) {
    console.log('create order ', tokenGet, amountGet, tokenGive, amountGive, expires);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    console.log(contract);

    var nonce = web3utils.randomHex(32);

    contract.order.sendTransaction(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, callback);
  }

  //initiated from clicking an order row
  async performTrade(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, user, v, r, s, amount, callback) {
    console.log('performTrade', tokenGet, amountGet, tokenGive, amountGive, expires, nonce, user, v, r, s, amount, callback);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    contract.trade.sendTransaction(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, user, v, r, s, amount, callback);
  }

  async cancelOrder(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, v, r, s, callback) {
    console.log('performTrade', tokenGet, amountGet, tokenGive, amountGive, expires, nonce, v, r, s, callback);

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3, lavaWalletContract.blockchain_address, lavaWalletABI.abi);

    contract.cancelOrder.sendTransaction(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, v, r, s, callback);
  }

  //maybe use web3 ??
  getDecimalsOfToken(token_address) {

    if (token_address != 0 && token_address.toLowerCase() == _0xBitcoinContract.blockchain_address.toLowerCase()) {
      return 8;
    }

    return 18;
  }

  getRawFromDecimalFormat(amountFormatted, decimals) {
    var amountRaw = amountFormatted * Math.pow(10, decimals);

    amountRaw = Math.floor(amountRaw);

    return amountRaw;
  }

  formatAmountWithDecimals(amountRaw, decimals) {
    var amountFormatted = amountRaw / (Math.pow(10, decimals) * 1.0);

    //  amountFormatted = Math.round(amountFormatted,decimals)

    return amountFormatted;
  }

  /*
  
    //Use as a reference only!!!
    async startTransfer(amountRaw,recipient,callback)
    {
  
  
      var contract = this.ethHelper.getWeb3ContractInstance(
        this.web3
      );
  
  
      let getDecimals = new Promise(resolve => {
        contract.decimals( function(error,response){
           resolve(response.toNumber());
           })
      });
  
      var decimals = await getDecimals;
  
      var amount = amountRaw * Math.pow(10,decimals)
  
      console.log('start transfer', amount , recipient)
  
      contract.transfer.sendTransaction(recipient, amount, callback);
  
  
    }
  
  */
}
/* harmony export (immutable) */ __webpack_exports__["a"] = LavaWalletHelper;


/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";


var lavaWalletABI = __webpack_require__(4);
var _0xBitcoinABI = __webpack_require__(3);
var erc20TokenABI = __webpack_require__(5);

var tokenData = __webpack_require__(6);
var defaultTokens = __webpack_require__(7);

var defaultTokenData;

var deployedContractInfo = __webpack_require__(2);
var lavaWalletContract;
var _0xBitcoinContract;

class LavaPacketHelper {

  static getLavaPacket(from, to, walletAddress, tokenAddress, tokenAmount, relayerReward, expires, nonce, signature) {

    return {
      from: from,
      to: to,
      walletAddress: walletAddress,
      tokenAddress: tokenAddress,
      tokenAmount: tokenAmount,
      relayerReward: relayerReward,
      expires: expires,
      nonce: nonce,
      signature: signature
    };
  }

  static formatAmountWithDecimals(amountRaw, decimals) {
    var amountFormatted = amountRaw / (Math.pow(10, decimals) * 1.0);

    //  amountFormatted = Math.round(amountFormatted,decimals)

    return amountFormatted;
  }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = LavaPacketHelper;


/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

const $ = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"jquery\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

class HomeDashboard {

  init(ethHelper, web3, dashboardRenderer) {
    setInterval(function () {
      console.log("updating contract data");

      ethHelper.connectToContract(web3, dashboardRenderer, function (contractData) {

        dashboardRenderer.update(contractData);
      });
    }, 30 * 1000);

    ethHelper.connectToContract(web3, dashboardRenderer, function (contractData) {

      dashboardRenderer.init(contractData);
    });
  }

}
/* unused harmony export default */


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(0);

const $ = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"jquery\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));



var balanceText;
var accountAddress;

class WalletDashboard {

  async init(alertRenderer, ethHelper) {
    this.alertRenderer = alertRenderer;
    this.ethHelper = ethHelper;

    $(".transfer-form-fields").hide();

    this.web3 = this.detectInjectedWeb3();

    await this.updateWalletRender();

    console.log(accountAddress);

    var app = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
      el: '#wallet-titlebar',
      data: { account: accountAddress,
        balance: balanceText,
        errorMessage: alertRenderer.alertMessage },

      methods: {
        update: function () {}
      }
    });

    var transfer = new __WEBPACK_IMPORTED_MODULE_0_vue__["a" /* default */]({
      el: '#transfer-form',
      data: { amount: 0,
        recipient_address: null },

      methods: {
        update: function () {}
      }
    });

    if (this.web3 != null) {
      $(".transfer-form-fields").show();

      var self = this;

      $(".start-transfer-button").on('click', function () {

        self.startTransfer(transfer.amount, transfer.recipient_address, function (error, response) {

          console.log(response);
        });
      });
    }
  }

  detectInjectedWeb3() {

    console.log('detect');
    if (typeof web3 !== 'undefined') {
      web3 = new Web3(web3.currentProvider);

      console.log(web3);

      if (typeof web3.eth !== 'undefined' && typeof web3.eth.accounts[0] !== 'undefined') {

        return web3;
      } else {

        console.log(web3.eth);
        console.log(web3.eth.accounts[0]);

        this.alertRenderer.renderError("No Web3 interface found.  Please login to Metamask or an Ethereum enabled browser.");
      }
    } else {
      // set the provider you want from Web3.providers
      //web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
      this.alertRenderer.renderError("No Web3 interface found.  Please install Metamask or use an Ethereum enabled browser.");
    }

    return null;
  }

  async updateWalletRender() {
    if (this.web3 != null) {
      console.log('loading wallet data ');

      var activeAccount = web3.eth.accounts[0];

      accountAddress = activeAccount;

      console.log(accountAddress);

      var contract = this.ethHelper.getWeb3ContractInstance(this.web3);

      let getDecimals = new Promise(resolve => {
        contract.decimals(function (error, response) {
          resolve(response.toNumber());
        });
      });

      let getTokenBalance = new Promise(resolve => {
        contract.balanceOf(activeAccount, function (error, response) {
          resolve(response.toNumber());
        });
      });

      var decimals = await getDecimals;
      var tokenBalance = await getTokenBalance;

      balanceText = tokenBalance / Math.pow(10, decimals);
    }
  }

  async startTransfer(amountRaw, recipient, callback) {

    var contract = this.ethHelper.getWeb3ContractInstance(this.web3);

    let getDecimals = new Promise(resolve => {
      contract.decimals(function (error, response) {
        resolve(response.toNumber());
      });
    });

    var decimals = await getDecimals;

    var amount = amountRaw * Math.pow(10, decimals);

    console.log('start transfer', amount, recipient);

    contract.transfer.sendTransaction(recipient, amount, callback);
  }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = WalletDashboard;


/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = {"name":"0xbitcoin-explorer","version":"1.0.0","description":"a block explorer for 0xbitcoin","main":"webpack.config.js","directories":{"test":"test"},"scripts":{"webpack":"webpack","dev":"webpack-dev-server "},"keywords":["0xbitcoin","ethereum"],"author":"0xbitcoin","license":"MIT","dependencies":{"babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-plugin-transform-es3-member-expression-literals":"^6.22.0","babel-plugin-transform-es3-property-literals":"^6.22.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-preset-es2016":"^6.24.1","browserify":"^15.2.0","bulma":"^0.6.2","extract-text-webpack-plugin":"^3.0.2","html-loader":"^0.5.5","vue":"^2.5.13","webpack":"^3.10.0"},"devDependencies":{"copy-webpack-plugin":"^4.5.1","css-loader":"^0.28.9","file-loader":"^1.1.6","html-webpack-include-assets-plugin":"^1.0.2","html-webpack-plugin":"^2.30.1","node-sass":"^4.7.2","sass-loader":"^6.0.6","static-site-generator-webpack-plugin":"^3.4.1","style-loader":"^0.20.1","webpack-dev-server":"^2.11.1"}}

/***/ }),
/* 28 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);